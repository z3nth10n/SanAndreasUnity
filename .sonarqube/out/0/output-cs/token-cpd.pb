•
ÄC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\AssemblyInfo.cs
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str B
)B C
]C D
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str B
)B C
]C DπÌ
èC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\External\SemVersion.cs
	namespace%% 	
Semver%%
 
{&& 
[// 
Serializable// 
]// 
internal00 
sealed00 
class00 

SemVersion00 $
:00% &
IComparable00' 2
<002 3

SemVersion003 =
>00= >
,00> ?
IComparable00@ K
,00K L
ISerializable00M Z
{22 
private33 
static33 
Regex33 
parseEx33 $
=33% &
new44 
Regex44 
(44 
$str44 '
+44( )
$str55 %
+55& '
$str66 %
+66& '
$str77 0
+771 2
$str88 3
,883 4
RegexOptions<< 
.<< 
CultureInvariant<< -
|<<. /
RegexOptions<<0 <
.<<< =
Compiled<<= E
|<<F G
RegexOptions<<H T
.<<T U
ExplicitCapture<<U d
)<<d e
;<<e f
privateHH 

SemVersionHH 
(HH 
SerializationInfoHH ,
infoHH- 1
,HH1 2
StreamingContextHH3 C
contextHHD K
)HHK L
{II 	
ifJJ 
(JJ 
infoJJ 
==JJ 
nullJJ 
)JJ 
throwJJ #
newJJ$ '!
ArgumentNullExceptionJJ( =
(JJ= >
$strJJ> D
)JJD E
;JJE F
varKK 

semVersionKK 
=KK 
ParseKK "
(KK" #
infoKK# '
.KK' (
	GetStringKK( 1
(KK1 2
$strKK2 >
)KK> ?
)KK? @
;KK@ A
MajorLL 
=LL 

semVersionLL 
.LL 
MajorLL $
;LL$ %
MinorMM 
=MM 

semVersionMM 
.MM 
MinorMM $
;MM$ %
PatchNN 
=NN 

semVersionNN 
.NN 
PatchNN $
;NN$ %

PrereleaseOO 
=OO 

semVersionOO #
.OO# $

PrereleaseOO$ .
;OO. /
BuildPP 
=PP 

semVersionPP 
.PP 
BuildPP $
;PP$ %
}QQ 	
public]] 

SemVersion]] 
(]] 
int]] 
major]] #
,]]# $
int]]% (
minor]]) .
=]]/ 0
$num]]1 2
,]]2 3
int]]4 7
patch]]8 =
=]]> ?
$num]]@ A
,]]A B
string]]C I

prerelease]]J T
=]]U V
$str]]W Y
,]]Y Z
string]][ a
build]]b g
=]]h i
$str]]j l
)]]l m
{^^ 	
Major__ 
=__ 
major__ 
;__ 
Minor`` 
=`` 
minor`` 
;`` 
Patchaa 
=aa 
patchaa 
;aa 

Prereleasecc 
=cc 

prereleasecc #
??cc$ &
$strcc' )
;cc) *
Builddd 
=dd 
builddd 
??dd 
$strdd 
;dd  
}ee 	
publicll 

SemVersionll 
(ll 
Versionll !
versionll" )
)ll) *
{mm 	
ifnn 
(nn 
versionnn 
==nn 
nullnn 
)nn  
throwoo 
newoo !
ArgumentNullExceptionoo /
(oo/ 0
$stroo0 9
)oo9 :
;oo: ;
Majorqq 
=qq 
versionqq 
.qq 
Majorqq !
;qq! "
Minorrr 
=rr 
versionrr 
.rr 
Minorrr !
;rr! "
iftt 
(tt 
versiontt 
.tt 
Revisiontt  
>=tt! #
$numtt$ %
)tt% &
{uu 
Patchvv 
=vv 
versionvv 
.vv  
Revisionvv  (
;vv( )
}ww 

Prereleaseyy 
=yy 
Stringyy 
.yy  
Emptyyy  %
;yy% &
if{{ 
({{ 
version{{ 
.{{ 
Build{{ 
>{{ 
$num{{  !
){{! "
{|| 
Build}} 
=}} 
version}} 
.}}  
Build}}  %
.}}% &
ToString}}& .
(}}. /
)}}/ 0
;}}0 1
}~~ 
else 
{
ÄÄ 
Build
ÅÅ 
=
ÅÅ 
String
ÅÅ 
.
ÅÅ 
Empty
ÅÅ $
;
ÅÅ$ %
}
ÇÇ 
}
ÉÉ 	
public
åå 
static
åå 

SemVersion
åå  
Parse
åå! &
(
åå& '
string
åå' -
version
åå. 5
,
åå5 6
bool
åå7 ;
strict
åå< B
=
ååC D
false
ååE J
)
ååJ K
{
çç 	
var
éé 
match
éé 
=
éé 
parseEx
éé 
.
éé  
Match
éé  %
(
éé% &
version
éé& -
)
éé- .
;
éé. /
if
èè 
(
èè 
!
èè 
match
èè 
.
èè 
Success
èè 
)
èè 
{
êê 
return
ëë 
new
ëë 

SemVersion
ëë %
(
ëë% &
$num
ëë& '
)
ëë' (
;
ëë( )
}
íí 
var
óó 
major
óó 
=
óó 
int
óó 
.
óó 
Parse
óó !
(
óó! "
match
óó" '
.
óó' (
Groups
óó( .
[
óó. /
$str
óó/ 6
]
óó6 7
.
óó7 8
Value
óó8 =
,
óó= >
CultureInfo
óó? J
.
óóJ K
InvariantCulture
óóK [
)
óó[ \
;
óó\ ]
var
öö 

minorMatch
öö 
=
öö 
match
öö "
.
öö" #
Groups
öö# )
[
öö) *
$str
öö* 1
]
öö1 2
;
öö2 3
int
õõ 
minor
õõ 
=
õõ 
$num
õõ 
;
õõ 
if
úú 
(
úú 

minorMatch
úú 
.
úú 
Success
úú "
)
úú" #
{
ùù 
minor
°° 
=
°° 
int
°° 
.
°° 
Parse
°° !
(
°°! "

minorMatch
°°" ,
.
°°, -
Value
°°- 2
,
°°2 3
CultureInfo
°°4 ?
.
°°? @
InvariantCulture
°°@ P
)
°°P Q
;
°°Q R
}
££ 
else
§§ 
if
§§ 
(
§§ 
strict
§§ 
)
§§ 
{
•• 
throw
¶¶ 
new
¶¶ '
InvalidOperationException
¶¶ 3
(
¶¶3 4
$str
¶¶4 m
)
¶¶m n
;
¶¶n o
}
ßß 
var
©© 

patchMatch
©© 
=
©© 
match
©© "
.
©©" #
Groups
©©# )
[
©©) *
$str
©©* 1
]
©©1 2
;
©©2 3
int
™™ 
patch
™™ 
=
™™ 
$num
™™ 
;
™™ 
if
´´ 
(
´´ 

patchMatch
´´ 
.
´´ 
Success
´´ "
)
´´" #
{
¨¨ 
patch
∞∞ 
=
∞∞ 
int
∞∞ 
.
∞∞ 
Parse
∞∞ !
(
∞∞! "

patchMatch
∞∞" ,
.
∞∞, -
Value
∞∞- 2
,
∞∞2 3
CultureInfo
∞∞4 ?
.
∞∞? @
InvariantCulture
∞∞@ P
)
∞∞P Q
;
∞∞Q R
}
≤≤ 
else
≥≥ 
if
≥≥ 
(
≥≥ 
strict
≥≥ 
)
≥≥ 
{
¥¥ 
throw
µµ 
new
µµ '
InvalidOperationException
µµ 3
(
µµ3 4
$str
µµ4 m
)
µµm n
;
µµn o
}
∂∂ 
var
∏∏ 

prerelease
∏∏ 
=
∏∏ 
match
∏∏ "
.
∏∏" #
Groups
∏∏# )
[
∏∏) *
$str
∏∏* /
]
∏∏/ 0
.
∏∏0 1
Value
∏∏1 6
;
∏∏6 7
var
ππ 
build
ππ 
=
ππ 
match
ππ 
.
ππ 
Groups
ππ $
[
ππ$ %
$str
ππ% ,
]
ππ, -
.
ππ- .
Value
ππ. 3
;
ππ3 4
return
ªª 
new
ªª 

SemVersion
ªª !
(
ªª! "
major
ªª" '
,
ªª' (
minor
ªª) .
,
ªª. /
patch
ªª0 5
,
ªª5 6

prerelease
ªª7 A
,
ªªA B
build
ªªC H
)
ªªH I
;
ªªI J
}
ºº 	
public
«« 
static
«« 
bool
«« 
TryParse
«« #
(
««# $
string
««$ *
version
««+ 2
,
««2 3
out
««4 7

SemVersion
««8 B
semver
««C I
,
««I J
bool
««K O
strict
««P V
=
««W X
false
««Y ^
)
««^ _
{
»» 	
try
…… 
{
   
semver
ÀÀ 
=
ÀÀ 
Parse
ÀÀ 
(
ÀÀ 
version
ÀÀ &
,
ÀÀ& '
strict
ÀÀ( .
)
ÀÀ. /
;
ÀÀ/ 0
return
ÃÃ 
true
ÃÃ 
;
ÃÃ 
}
ÕÕ 
catch
ŒŒ 
(
ŒŒ 
	Exception
ŒŒ 
)
ŒŒ 
{
œœ 
semver
–– 
=
–– 
null
–– 
;
–– 
return
—— 
false
—— 
;
—— 
}
““ 
}
”” 	
public
€€ 
static
€€ 
bool
€€ 
Equals
€€ !
(
€€! "

SemVersion
€€" ,
versionA
€€- 5
,
€€5 6

SemVersion
€€7 A
versionB
€€B J
)
€€J K
{
‹‹ 	
if
›› 
(
›› 
ReferenceEquals
›› 
(
››  
versionA
››  (
,
››( )
null
››* .
)
››. /
)
››/ 0
return
ﬁﬁ 
ReferenceEquals
ﬁﬁ &
(
ﬁﬁ& '
versionB
ﬁﬁ' /
,
ﬁﬁ/ 0
null
ﬁﬁ1 5
)
ﬁﬁ5 6
;
ﬁﬁ6 7
return
ﬂﬂ 
versionA
ﬂﬂ 
.
ﬂﬂ 
Equals
ﬂﬂ "
(
ﬂﬂ" #
versionB
ﬂﬂ# +
)
ﬂﬂ+ ,
;
ﬂﬂ, -
}
‡‡ 	
public
ÈÈ 
static
ÈÈ 
int
ÈÈ 
Compare
ÈÈ !
(
ÈÈ! "

SemVersion
ÈÈ" ,
versionA
ÈÈ- 5
,
ÈÈ5 6

SemVersion
ÈÈ7 A
versionB
ÈÈB J
)
ÈÈJ K
{
ÍÍ 	
if
ÎÎ 
(
ÎÎ 
ReferenceEquals
ÎÎ 
(
ÎÎ  
versionA
ÎÎ  (
,
ÎÎ( )
null
ÎÎ* .
)
ÎÎ. /
)
ÎÎ/ 0
return
ÏÏ 
ReferenceEquals
ÏÏ &
(
ÏÏ& '
versionB
ÏÏ' /
,
ÏÏ/ 0
null
ÏÏ1 5
)
ÏÏ5 6
?
ÏÏ7 8
$num
ÏÏ9 :
:
ÏÏ; <
-
ÏÏ= >
$num
ÏÏ> ?
;
ÏÏ? @
return
ÌÌ 
versionA
ÌÌ 
.
ÌÌ 
	CompareTo
ÌÌ %
(
ÌÌ% &
versionB
ÌÌ& .
)
ÌÌ. /
;
ÌÌ/ 0
}
ÓÓ 	
public
˘˘ 

SemVersion
˘˘ 
Change
˘˘  
(
˘˘  !
int
˘˘! $
?
˘˘$ %
major
˘˘& +
=
˘˘, -
null
˘˘. 2
,
˘˘2 3
int
˘˘4 7
?
˘˘7 8
minor
˘˘9 >
=
˘˘? @
null
˘˘A E
,
˘˘E F
int
˘˘G J
?
˘˘J K
patch
˘˘L Q
=
˘˘R S
null
˘˘T X
,
˘˘X Y
string
˙˙ 

prerelease
˙˙ 
=
˙˙ 
null
˙˙  $
,
˙˙$ %
string
˙˙& ,
build
˙˙- 2
=
˙˙3 4
null
˙˙5 9
)
˙˙9 :
{
˚˚ 	
return
¸¸ 
new
¸¸ 

SemVersion
¸¸ !
(
¸¸! "
major
˝˝ 
??
˝˝ 
Major
˝˝ 
,
˝˝ 
minor
˛˛ 
??
˛˛ 
Minor
˛˛ 
,
˛˛ 
patch
ˇˇ 
??
ˇˇ 
Patch
ˇˇ 
,
ˇˇ 

prerelease
ÄÄ 
??
ÄÄ 

Prerelease
ÄÄ (
,
ÄÄ( )
build
ÅÅ 
??
ÅÅ 
Build
ÅÅ 
)
ÅÅ 
;
ÅÅ  
}
ÇÇ 	
public
ää 
int
ää 
Major
ää 
{
ää 
get
ää 
;
ää 
private
ää  '
set
ää( +
;
ää+ ,
}
ää- .
public
íí 
int
íí 
Minor
íí 
{
íí 
get
íí 
;
íí 
private
íí  '
set
íí( +
;
íí+ ,
}
íí- .
public
öö 
int
öö 
Patch
öö 
{
öö 
get
öö 
;
öö 
private
öö  '
set
öö( +
;
öö+ ,
}
öö- .
public
¢¢ 
string
¢¢ 

Prerelease
¢¢  
{
¢¢! "
get
¢¢# &
;
¢¢& '
private
¢¢( /
set
¢¢0 3
;
¢¢3 4
}
¢¢5 6
public
™™ 
string
™™ 
Build
™™ 
{
™™ 
get
™™ !
;
™™! "
private
™™# *
set
™™+ .
;
™™. /
}
™™0 1
public
≤≤ 
override
≤≤ 
string
≤≤ 
ToString
≤≤ '
(
≤≤' (
)
≤≤( )
{
≥≥ 	
var
¥¥ 
version
¥¥ 
=
¥¥ 
$str
¥¥ 
+
¥¥ 
Major
¥¥ $
+
¥¥% &
$str
¥¥' *
+
¥¥+ ,
Minor
¥¥- 2
+
¥¥3 4
$str
¥¥5 8
+
¥¥9 :
Patch
¥¥; @
;
¥¥@ A
if
µµ 
(
µµ 
!
µµ 
String
µµ 
.
µµ 
IsNullOrEmpty
µµ %
(
µµ% &

Prerelease
µµ& 0
)
µµ0 1
)
µµ1 2
version
∂∂ 
+=
∂∂ 
$str
∂∂ 
+
∂∂  

Prerelease
∂∂! +
;
∂∂+ ,
if
∑∑ 
(
∑∑ 
!
∑∑ 
String
∑∑ 
.
∑∑ 
IsNullOrEmpty
∑∑ %
(
∑∑% &
Build
∑∑& +
)
∑∑+ ,
)
∑∑, -
version
∏∏ 
+=
∏∏ 
$str
∏∏ 
+
∏∏  
Build
∏∏! &
;
∏∏& '
return
ππ 
version
ππ 
;
ππ 
}
∫∫ 	
public
…… 
int
…… 
	CompareTo
…… 
(
…… 
object
…… #
obj
……$ '
)
……' (
{
   	
return
ÀÀ 
	CompareTo
ÀÀ 
(
ÀÀ 
(
ÀÀ 

SemVersion
ÀÀ (
)
ÀÀ( )
obj
ÀÀ) ,
)
ÀÀ, -
;
ÀÀ- .
}
ÃÃ 	
public
€€ 
int
€€ 
	CompareTo
€€ 
(
€€ 

SemVersion
€€ '
other
€€( -
)
€€- .
{
‹‹ 	
if
›› 
(
›› 
ReferenceEquals
›› 
(
››  
other
››  %
,
››% &
null
››' +
)
››+ ,
)
››, -
return
ﬁﬁ 
$num
ﬁﬁ 
;
ﬁﬁ 
var
‡‡ 
r
‡‡ 
=
‡‡ !
CompareByPrecedence
‡‡ '
(
‡‡' (
other
‡‡( -
)
‡‡- .
;
‡‡. /
if
·· 
(
·· 
r
·· 
!=
·· 
$num
·· 
)
·· 
return
‚‚ 
r
‚‚ 
;
‚‚ 
r
‰‰ 
=
‰‰ 
CompareComponent
‰‰  
(
‰‰  !
Build
‰‰! &
,
‰‰& '
other
‰‰( -
.
‰‰- .
Build
‰‰. 3
)
‰‰3 4
;
‰‰4 5
return
ÂÂ 
r
ÂÂ 
;
ÂÂ 
}
ÊÊ 	
public
ÌÌ 
bool
ÌÌ 
PrecedenceMatches
ÌÌ %
(
ÌÌ% &

SemVersion
ÌÌ& 0
other
ÌÌ1 6
)
ÌÌ6 7
{
ÓÓ 	
return
ÔÔ !
CompareByPrecedence
ÔÔ &
(
ÔÔ& '
other
ÔÔ' ,
)
ÔÔ, -
==
ÔÔ. 0
$num
ÔÔ1 2
;
ÔÔ2 3
}
 	
public
˝˝ 
int
˝˝ !
CompareByPrecedence
˝˝ &
(
˝˝& '

SemVersion
˝˝' 1
other
˝˝2 7
)
˝˝7 8
{
˛˛ 	
if
ˇˇ 
(
ˇˇ 
ReferenceEquals
ˇˇ 
(
ˇˇ  
other
ˇˇ  %
,
ˇˇ% &
null
ˇˇ' +
)
ˇˇ+ ,
)
ˇˇ, -
return
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
var
ÇÇ 
r
ÇÇ 
=
ÇÇ 
Major
ÇÇ 
.
ÇÇ 
	CompareTo
ÇÇ #
(
ÇÇ# $
other
ÇÇ$ )
.
ÇÇ) *
Major
ÇÇ* /
)
ÇÇ/ 0
;
ÇÇ0 1
if
ÉÉ 
(
ÉÉ 
r
ÉÉ 
!=
ÉÉ 
$num
ÉÉ 
)
ÉÉ 
return
ÉÉ 
r
ÉÉ  
;
ÉÉ  !
r
ÖÖ 
=
ÖÖ 
Minor
ÖÖ 
.
ÖÖ 
	CompareTo
ÖÖ 
(
ÖÖ  
other
ÖÖ  %
.
ÖÖ% &
Minor
ÖÖ& +
)
ÖÖ+ ,
;
ÖÖ, -
if
ÜÜ 
(
ÜÜ 
r
ÜÜ 
!=
ÜÜ 
$num
ÜÜ 
)
ÜÜ 
return
ÜÜ 
r
ÜÜ  
;
ÜÜ  !
r
àà 
=
àà 
Patch
àà 
.
àà 
	CompareTo
àà 
(
àà  
other
àà  %
.
àà% &
Patch
àà& +
)
àà+ ,
;
àà, -
if
ââ 
(
ââ 
r
ââ 
!=
ââ 
$num
ââ 
)
ââ 
return
ââ 
r
ââ  
;
ââ  !
r
ãã 
=
ãã 
CompareComponent
ãã  
(
ãã  !

Prerelease
ãã! +
,
ãã+ ,
other
ãã- 2
.
ãã2 3

Prerelease
ãã3 =
,
ãã= >
true
ãã? C
)
ããC D
;
ããD E
return
åå 
r
åå 
;
åå 
}
çç 	
private
èè 
static
èè 
int
èè 
CompareComponent
èè +
(
èè+ ,
string
èè, 2
a
èè3 4
,
èè4 5
string
èè6 <
b
èè= >
,
èè> ?
bool
èè@ D
lower
èèE J
=
èèK L
false
èèM R
)
èèR S
{
êê 	
var
ëë 
aEmpty
ëë 
=
ëë 
String
ëë 
.
ëë  
IsNullOrEmpty
ëë  -
(
ëë- .
a
ëë. /
)
ëë/ 0
;
ëë0 1
var
íí 
bEmpty
íí 
=
íí 
String
íí 
.
íí  
IsNullOrEmpty
íí  -
(
íí- .
b
íí. /
)
íí/ 0
;
íí0 1
if
ìì 
(
ìì 
aEmpty
ìì 
&&
ìì 
bEmpty
ìì  
)
ìì  !
return
îî 
$num
îî 
;
îî 
if
ññ 
(
ññ 
aEmpty
ññ 
)
ññ 
return
óó 
lower
óó 
?
óó 
$num
óó  
:
óó! "
-
óó# $
$num
óó$ %
;
óó% &
if
òò 
(
òò 
bEmpty
òò 
)
òò 
return
ôô 
lower
ôô 
?
ôô 
-
ôô  
$num
ôô  !
:
ôô" #
$num
ôô$ %
;
ôô% &
var
õõ 
aComps
õõ 
=
õõ 
a
õõ 
.
õõ 
Split
õõ  
(
õõ  !
$char
õõ! $
)
õõ$ %
;
õõ% &
var
úú 
bComps
úú 
=
úú 
b
úú 
.
úú 
Split
úú  
(
úú  !
$char
úú! $
)
úú$ %
;
úú% &
var
ûû 
minLen
ûû 
=
ûû 
Math
ûû 
.
ûû 
Min
ûû !
(
ûû! "
aComps
ûû" (
.
ûû( )
Length
ûû) /
,
ûû/ 0
bComps
ûû1 7
.
ûû7 8
Length
ûû8 >
)
ûû> ?
;
ûû? @
for
üü 
(
üü 
int
üü 
i
üü 
=
üü 
$num
üü 
;
üü 
i
üü 
<
üü 
minLen
üü  &
;
üü& '
i
üü( )
++
üü) +
)
üü+ ,
{
†† 
var
°° 
ac
°° 
=
°° 
aComps
°° 
[
°°  
i
°°  !
]
°°! "
;
°°" #
var
¢¢ 
bc
¢¢ 
=
¢¢ 
bComps
¢¢ 
[
¢¢  
i
¢¢  !
]
¢¢! "
;
¢¢" #
int
££ 
anum
££ 
,
££ 
bnum
££ 
;
££ 
var
§§ 
isanum
§§ 
=
§§ 
Int32
§§ "
.
§§" #
TryParse
§§# +
(
§§+ ,
ac
§§, .
,
§§. /
out
§§0 3
anum
§§4 8
)
§§8 9
;
§§9 :
var
•• 
isbnum
•• 
=
•• 
Int32
•• "
.
••" #
TryParse
••# +
(
••+ ,
bc
••, .
,
••. /
out
••0 3
bnum
••4 8
)
••8 9
;
••9 :
int
¶¶ 
r
¶¶ 
;
¶¶ 
if
ßß 
(
ßß 
isanum
ßß 
&&
ßß 
isbnum
ßß $
)
ßß$ %
{
®® 
r
©© 
=
©© 
anum
©© 
.
©© 
	CompareTo
©© &
(
©©& '
bnum
©©' +
)
©©+ ,
;
©©, -
if
™™ 
(
™™ 
r
™™ 
!=
™™ 
$num
™™ 
)
™™ 
return
™™  &
anum
™™' +
.
™™+ ,
	CompareTo
™™, 5
(
™™5 6
bnum
™™6 :
)
™™: ;
;
™™; <
}
´´ 
else
¨¨ 
{
≠≠ 
if
ÆÆ 
(
ÆÆ 
isanum
ÆÆ 
)
ÆÆ 
return
ØØ 
-
ØØ  
$num
ØØ  !
;
ØØ! "
if
∞∞ 
(
∞∞ 
isbnum
∞∞ 
)
∞∞ 
return
±± 
$num
±±  
;
±±  !
r
≤≤ 
=
≤≤ 
String
≤≤ 
.
≤≤ 
CompareOrdinal
≤≤ -
(
≤≤- .
ac
≤≤. 0
,
≤≤0 1
bc
≤≤2 4
)
≤≤4 5
;
≤≤5 6
if
≥≥ 
(
≥≥ 
r
≥≥ 
!=
≥≥ 
$num
≥≥ 
)
≥≥ 
return
¥¥ 
r
¥¥  
;
¥¥  !
}
µµ 
}
∂∂ 
return
∏∏ 
aComps
∏∏ 
.
∏∏ 
Length
∏∏  
.
∏∏  !
	CompareTo
∏∏! *
(
∏∏* +
bComps
∏∏+ 1
.
∏∏1 2
Length
∏∏2 8
)
∏∏8 9
;
∏∏9 :
}
ππ 	
public
¬¬ 
override
¬¬ 
bool
¬¬ 
Equals
¬¬ #
(
¬¬# $
object
¬¬$ *
obj
¬¬+ .
)
¬¬. /
{
√√ 	
if
ƒƒ 
(
ƒƒ 
ReferenceEquals
ƒƒ 
(
ƒƒ  
obj
ƒƒ  #
,
ƒƒ# $
null
ƒƒ% )
)
ƒƒ) *
)
ƒƒ* +
return
≈≈ 
false
≈≈ 
;
≈≈ 
if
«« 
(
«« 
ReferenceEquals
«« 
(
««  
this
««  $
,
««$ %
obj
««& )
)
««) *
)
««* +
return
»» 
true
»» 
;
»» 
var
   
other
   
=
   
(
   

SemVersion
   #
)
  # $
obj
  $ '
;
  ' (
return
ÃÃ 
Major
ÃÃ 
==
ÃÃ 
other
ÃÃ !
.
ÃÃ! "
Major
ÃÃ" '
&&
ÃÃ( *
Minor
ÕÕ 
==
ÕÕ 
other
ÕÕ 
.
ÕÕ 
Minor
ÕÕ $
&&
ÕÕ% '
Patch
ŒŒ 
==
ŒŒ 
other
ŒŒ 
.
ŒŒ 
Patch
ŒŒ $
&&
ŒŒ% '
string
œœ 
.
œœ 
Equals
œœ 
(
œœ 

Prerelease
œœ (
,
œœ( )
other
œœ* /
.
œœ/ 0

Prerelease
œœ0 :
,
œœ: ;
StringComparison
œœ< L
.
œœL M
Ordinal
œœM T
)
œœT U
&&
œœV X
string
–– 
.
–– 
Equals
–– 
(
–– 
Build
–– #
,
––# $
other
––% *
.
––* +
Build
––+ 0
,
––0 1
StringComparison
––2 B
.
––B C
Ordinal
––C J
)
––J K
;
––K L
}
—— 	
public
ŸŸ 
override
ŸŸ 
int
ŸŸ 
GetHashCode
ŸŸ '
(
ŸŸ' (
)
ŸŸ( )
{
⁄⁄ 	
	unchecked
€€ 
{
‹‹ 
int
›› 
result
›› 
=
›› 
Major
›› "
.
››" #
GetHashCode
››# .
(
››. /
)
››/ 0
;
››0 1
result
ﬁﬁ 
=
ﬁﬁ 
result
ﬁﬁ 
*
ﬁﬁ  !
$num
ﬁﬁ" $
+
ﬁﬁ% &
Minor
ﬁﬁ' ,
.
ﬁﬁ, -
GetHashCode
ﬁﬁ- 8
(
ﬁﬁ8 9
)
ﬁﬁ9 :
;
ﬁﬁ: ;
result
ﬂﬂ 
=
ﬂﬂ 
result
ﬂﬂ 
*
ﬂﬂ  !
$num
ﬂﬂ" $
+
ﬂﬂ% &
Patch
ﬂﬂ' ,
.
ﬂﬂ, -
GetHashCode
ﬂﬂ- 8
(
ﬂﬂ8 9
)
ﬂﬂ9 :
;
ﬂﬂ: ;
result
‡‡ 
=
‡‡ 
result
‡‡ 
*
‡‡  !
$num
‡‡" $
+
‡‡% &

Prerelease
‡‡' 1
.
‡‡1 2
GetHashCode
‡‡2 =
(
‡‡= >
)
‡‡> ?
;
‡‡? @
result
·· 
=
·· 
result
·· 
*
··  !
$num
··" $
+
··% &
Build
··' ,
.
··, -
GetHashCode
··- 8
(
··8 9
)
··9 :
;
··: ;
return
‚‚ 
result
‚‚ 
;
‚‚ 
}
„„ 
}
‰‰ 	
[
ËË 	 
SecurityPermission
ËË	 
(
ËË 
SecurityAction
ËË *
.
ËË* +
Demand
ËË+ 1
,
ËË1 2$
SerializationFormatter
ËË3 I
=
ËËJ K
true
ËËL P
)
ËËP Q
]
ËËQ R
public
ÈÈ 
void
ÈÈ 
GetObjectData
ÈÈ !
(
ÈÈ! "
SerializationInfo
ÈÈ" 3
info
ÈÈ4 8
,
ÈÈ8 9
StreamingContext
ÈÈ: J
context
ÈÈK R
)
ÈÈR S
{
ÍÍ 	
if
ÎÎ 
(
ÎÎ 
info
ÎÎ 
==
ÎÎ 
null
ÎÎ 
)
ÎÎ 
throw
ÎÎ #
new
ÎÎ$ '#
ArgumentNullException
ÎÎ( =
(
ÎÎ= >
$str
ÎÎ> D
)
ÎÎD E
;
ÎÎE F
info
ÏÏ 
.
ÏÏ 
AddValue
ÏÏ 
(
ÏÏ 
$str
ÏÏ &
,
ÏÏ& '
ToString
ÏÏ( 0
(
ÏÏ0 1
)
ÏÏ1 2
)
ÏÏ2 3
;
ÏÏ3 4
}
ÌÌ 	
public
ˆˆ 
static
ˆˆ 
implicit
ˆˆ 
operator
ˆˆ '

SemVersion
ˆˆ( 2
(
ˆˆ2 3
string
ˆˆ3 9
version
ˆˆ: A
)
ˆˆA B
{
˜˜ 	
return
¯¯ 

SemVersion
¯¯ 
.
¯¯ 
Parse
¯¯ #
(
¯¯# $
version
¯¯$ +
)
¯¯+ ,
;
¯¯, -
}
˘˘ 	
public
ÅÅ 
static
ÅÅ 
bool
ÅÅ 
operator
ÅÅ #
==
ÅÅ$ &
(
ÅÅ& '

SemVersion
ÅÅ' 1
left
ÅÅ2 6
,
ÅÅ6 7

SemVersion
ÅÅ8 B
right
ÅÅC H
)
ÅÅH I
{
ÇÇ 	
return
ÉÉ 

SemVersion
ÉÉ 
.
ÉÉ 
Equals
ÉÉ $
(
ÉÉ$ %
left
ÉÉ% )
,
ÉÉ) *
right
ÉÉ+ 0
)
ÉÉ0 1
;
ÉÉ1 2
}
ÑÑ 	
public
åå 
static
åå 
bool
åå 
operator
åå #
!=
åå$ &
(
åå& '

SemVersion
åå' 1
left
åå2 6
,
åå6 7

SemVersion
åå8 B
right
ååC H
)
ååH I
{
çç 	
return
éé 
!
éé 

SemVersion
éé 
.
éé 
Equals
éé %
(
éé% &
left
éé& *
,
éé* +
right
éé, 1
)
éé1 2
;
éé2 3
}
èè 	
public
óó 
static
óó 
bool
óó 
operator
óó #
>
óó$ %
(
óó% &

SemVersion
óó& 0
left
óó1 5
,
óó5 6

SemVersion
óó7 A
right
óóB G
)
óóG H
{
òò 	
return
ôô 

SemVersion
ôô 
.
ôô 
Compare
ôô %
(
ôô% &
left
ôô& *
,
ôô* +
right
ôô, 1
)
ôô1 2
>
ôô3 4
$num
ôô5 6
;
ôô6 7
}
öö 	
public
¢¢ 
static
¢¢ 
bool
¢¢ 
operator
¢¢ #
>=
¢¢$ &
(
¢¢& '

SemVersion
¢¢' 1
left
¢¢2 6
,
¢¢6 7

SemVersion
¢¢8 B
right
¢¢C H
)
¢¢H I
{
££ 	
return
§§ 
left
§§ 
==
§§ 
right
§§  
||
§§! #
left
§§$ (
>
§§) *
right
§§+ 0
;
§§0 1
}
•• 	
public
≠≠ 
static
≠≠ 
bool
≠≠ 
operator
≠≠ #
<
≠≠$ %
(
≠≠% &

SemVersion
≠≠& 0
left
≠≠1 5
,
≠≠5 6

SemVersion
≠≠7 A
right
≠≠B G
)
≠≠G H
{
ÆÆ 	
return
ØØ 

SemVersion
ØØ 
.
ØØ 
Compare
ØØ %
(
ØØ% &
left
ØØ& *
,
ØØ* +
right
ØØ, 1
)
ØØ1 2
<
ØØ3 4
$num
ØØ5 6
;
ØØ6 7
}
∞∞ 	
public
∏∏ 
static
∏∏ 
bool
∏∏ 
operator
∏∏ #
<=
∏∏$ &
(
∏∏& '

SemVersion
∏∏' 1
left
∏∏2 6
,
∏∏6 7

SemVersion
∏∏8 B
right
∏∏C H
)
∏∏H I
{
ππ 	
return
∫∫ 
left
∫∫ 
==
∫∫ 
right
∫∫  
||
∫∫! #
left
∫∫$ (
<
∫∫) *
right
∫∫+ 0
;
∫∫0 1
}
ªª 	
}
ºº 
}ΩΩ Õ
òC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\External\SemVersionExtension.cs
	namespace 	
Semver
 
{ 
internal 
static 
class 
SemVersionExtension -
{ 
public 
static 
string 
VersionOnly (
(( )
this) -

SemVersion. 8
version9 @
)@ A
{ 	
return 
$str 
+ 
version 
.  
Major  %
+& '
$str( +
+, -
version. 5
.5 6
Minor6 ;
+< =
$str> A
+B C
versionD K
.K L
PatchL Q
;Q R
} 	
public

 
static

 
string

 
ShortVersion

 )
(

) *
this

* .

SemVersion

/ 9
version

: A
)

A B
{ 	
var 

versionStr 
= 
$str 
+  !
version" )
.) *
Major* /
+0 1
$str2 5
+6 7
version8 ?
.? @
Minor@ E
;E F
if 
( 
! 
string 
. 
IsNullOrEmpty %
(% &
version& -
.- .

Prerelease. 8
)8 9
)9 :

versionStr 
+= 
$str !
+" #
version$ +
.+ ,

Prerelease, 6
;6 7
if 
( 
! 
string 
. 
IsNullOrEmpty %
(% &
version& -
.- .
Build. 3
)3 4
)4 5

versionStr 
+= 
$str !
+" #
version$ +
.+ ,
Build, 1
;1 2
return 

versionStr 
; 
} 	
} 
} ï
õC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Common\OperationSignal.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
[ 
Serializable 
] 
internal 
class 
OperationSignal "
<" #
T# $
>$ %
where& +
T, -
:. /
IBaseOperation0 >
{ 
public 
event 
Action 
< 
T 
> 
OnOperation *
=+ ,
delegate- 5
{6 7
}8 9
;9 :
public

 
T

 
	Operation

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
public 
void 
SetOperation  
(  !
T! "
	operation# ,
), -
{ 	
	Operation 
= 
	operation !
;! "
OnOperation 
( 
	operation !
)! "
;" #
} 	
public 
void 
WhenOperation !
(! "
Action" (
<( )
T) *
>* +
callback, 4
)4 5
{ 	
if 
( 
	Operation 
!= 
null !
)! "
{ 
callback 
( 
	Operation "
)" #
;# $
} 
else 
{ 
OnOperation 
+= 
callback '
;' (
} 
} 	
internal 
void 
ResetEvents !
(! "
)" #
{ 	
OnOperation   
=   
delegate   "
{  # $
}  % &
;  & '
}!! 	
}"" 
}## ¨
ôC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Common\ThreadedDelay.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
class 
ThreadedDelay  
{ 
public 
int 
Length 
{ 
get 
;  
set! $
;$ %
}& '
public 
bool 
IsDone 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public

 
ThreadedDelay

 
(

 
int

  
length

! '
=

( )
$num

* +
)

+ ,
{ 	
Length 
= 
length 
; 
IsDone 
= 
false 
; 
} 	
public 
void 
Start 
( 
) 
{ 	
if 
( 
Length 
<= 
$num 
) 
{ 
IsDone 
= 
true 
; 
return 
; 
} 
IsDone 
= 
false 
; 
Thread 
	newThread 
= 
new "
Thread# )
() *
(* +
)+ ,
=>- /
{ 
Thread 
. 
Sleep 
( 
Length #
)# $
;$ %
IsDone 
= 
true 
; 
} 
) 
; 
	newThread   
.   
Start   
(   
)   
;   
}!! 	
}"" 
}## à	
ùC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Interfaces\IAddOperation.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
	interface 
IAddOperation $
:% &
IBaseOperation' 5
{ 
event 
Action 
< 
PackageInfo  
>  !
OnOperationSuccess" 4
;4 5
PackageInfo		 
PackageInfo		 
{		  !
get		" %
;		% &
}		' (
void 
AddPackageAsync 
( 
PackageInfo (
packageInfo) 4
,4 5
Action6 <
<< =
PackageInfo= H
>H I
doneCallbackActionJ \
=] ^
null_ c
,c d
Actione k
<k l
Errorl q
>q r 
errorCallbackAction	s Ü
=
á à
null
â ç
)
ç é
;
é è
} 
}  
ûC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Interfaces\IBaseOperation.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
	interface 
IBaseOperation %
{ 
event 
Action 
< 
Error 
> 
OnOperationError ,
;, -
event		 
Action		  
OnOperationFinalized		 )
;		) *
void 
Cancel 
( 
) 
; 
} 
} Á
ûC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Interfaces\IListOperation.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
	interface 
IListOperation %
:& '
IBaseOperation( 6
{ 
bool 
OfflineMode 
{ 
get 
; 
set  #
;# $
}% &
void

 
GetPackageListAsync

  
(

  !
Action

! '
<

' (
IEnumerable

( 3
<

3 4
PackageInfo

4 ?
>

? @
>

@ A
doneCallbackAction

B T
,

T U
Action

V \
<

\ ]
Error

] b
>

b c
errorCallbackAction

d w
=

x y
null

z ~
)

~ 
;	

 Ä
} 
} õ
°C:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Interfaces\IOperationFactory.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
	interface 
IOperationFactory (
{ 
IListOperation		 
CreateListOperation		 *
(		* +
bool		+ /
offlineMode		0 ;
=		< =
false		> C
)		C D
;		D E
ISearchOperation !
CreateSearchOperation .
(. /
)/ 0
;0 1
IAddOperation 
CreateAddOperation (
(( )
)) *
;* +
IRemoveOperation !
CreateRemoveOperation .
(. /
)/ 0
;0 1
} 
} ©
†C:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Interfaces\IRemoveOperation.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
	interface 
IRemoveOperation '
:( )
IBaseOperation* 8
{ 
event 
Action 
OnOperationSuccess '
;' (
void		 
RemovePackageAsync		 
(		  
PackageInfo		  +
package		, 3
,		3 4
Action		5 ;
doneCallbackAction		< N
=		O P
null		Q U
,		U V
Action		W ]
<		] ^
Error		^ c
>		c d
errorCallbackAction		e x
=		y z
null		{ 
)			 Ä
;
		Ä Å
}

 
} á
†C:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Interfaces\ISearchOperation.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
	interface 
ISearchOperation '
:( )
IBaseOperation* 8
{ 
void 
GetAllPackageAsync 
(  
Action  &
<& '
IEnumerable' 2
<2 3
PackageInfo3 >
>> ?
>? @
doneCallbackActionA S
=T U
nullV Z
,Z [
Action\ b
<b c
Errorc h
>h i
errorCallbackActionj }
=~ 
null
Ä Ñ
)
Ñ Ö
;
Ö Ü
}		 
}

 ¿

ïC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\OperationFactory.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
static 
class 
OperationFactory *
{ 
private 
static 
IOperationFactory (
	_instance) 2
;2 3
public 
static 
IOperationFactory '
Instance( 0
{ 	
get		 
{

 
if 
( 
	_instance 
==  
null! %
)% &
	_instance 
= 
new  #
UpmOperationFactory$ 7
(7 8
)8 9
;9 :
return 
	_instance  
;  !
} 
internal 
set 
{ 
	_instance 
= 
value !
;! "
} 
} 	
internal 
static 
void 
Reset "
(" #
)# $
{ 	
	_instance 
= 
null 
; 
} 	
} 
} ∞K
ïC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Packages\Package.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal		 
class		 
Package		 
:		 

IEquatable		 '
<		' (
Package		( /
>		/ 0
{

 
internal 
const 
string  
packageManagerUIName 2
=3 4
$str5 S
;S T
private 
readonly 
string 
packageName  +
;+ ,
private 
readonly 
IEnumerable $
<$ %
PackageInfo% 0
>0 1
source2 8
;8 9
public 
Package 
( 
string 
packageName )
,) *
IEnumerable+ 6
<6 7
PackageInfo7 B
>B C
infosD I
)I J
{ 	
if 
( 
string 
. 
IsNullOrEmpty $
($ %
packageName% 0
)0 1
)1 2
throw 
new 
ArgumentException +
(+ ,
$str, E
,E F
$strG T
)T U
;U V
if 
( 
! 
infos 
. 
Any 
( 
) 
) 
throw 
new 
ArgumentException +
(+ ,
$str, =
,= >
$str? F
)F G
;G H
this 
. 
packageName 
= 
packageName *
;* +
source 
= 
infos 
; 
} 	
public 
PackageInfo 
Current "
{# $
get% (
{) *
return+ 1
Versions2 :
.: ;
FirstOrDefault; I
(I J
packageJ Q
=>R T
packageU \
.\ ]
	IsCurrent] f
)f g
;g h
}i j
}k l
public 
PackageInfo 
Latest !
{" #
get$ '
{( )
return* 0
Versions1 9
.9 :
FirstOrDefault: H
(H I
packageI P
=>Q S
packageT [
.[ \
IsLatest\ d
)d e
??f h
Versionsi q
.q r
LastOrDefaultr 
(	 Ä
)
Ä Å
;
Å Ç
}
É Ñ
}
Ö Ü
public 
IEnumerable 
< 
PackageInfo &
>& '
Versions( 0
{1 2
get3 6
{7 8
return9 ?
source@ F
.F G
OrderByG N
(N O
packageO V
=>W Y
packageZ a
.a b
Versionb i
)i j
;j k
}l m
}n o
public 
string 
Name 
{ 
get  
{! "
return# )
packageName* 5
;5 6
}7 8
}9 :
public!! 
bool!! 
IsPackageManagerUI!! &
{"" 	
get## 
{## 
return## 
Name## 
==##   
packageManagerUIName##! 5
;##5 6
}##7 8
}$$ 	
public&& 
bool&& 
Equals&& 
(&& 
Package&& "
other&&# (
)&&( )
{'' 	
if(( 
((( 
other(( 
==(( 
null(( 
)(( 
return)) 
false)) 
;)) 
return++ 
packageName++ 
==++ !
other++" '
.++' (
packageName++( 3
;++3 4
},, 	
public.. 
override.. 
int.. 
GetHashCode.. '
(..' (
)..( )
{// 	
return00 
packageName00 
.00 
GetHashCode00 *
(00* +
)00+ ,
;00, -
}11 	
[33 	
SerializeField33	 
]33 
public44 
readonly44 
OperationSignal44 '
<44' (
IAddOperation44( 5
>445 6
	AddSignal447 @
=44A B
new44C F
OperationSignal44G V
<44V W
IAddOperation44W d
>44d e
(44e f
)44f g
;44g h
private66 
Action66 
<66 
PackageInfo66 "
>66" #&
OnAddOperationSuccessEvent66$ >
;66> ?
private77 
Action77 (
OnAddOperationFinalizedEvent77 3
;773 4
public99 
void99 
Add99 
(99 
PackageInfo99 #
packageInfo99$ /
)99/ 0
{:: 	
if;; 
(;; 
packageInfo;; 
==;; 
Current;; &
);;& '
return<< 
;<< 
var>> 
	operation>> 
=>> 
OperationFactory>> ,
.>>, -
Instance>>- 5
.>>5 6
CreateAddOperation>>6 H
(>>H I
)>>I J
;>>J K&
OnAddOperationSuccessEvent?? &
=??' (
p??) *
=>??+ -
{@@ 
PackageCollectionAA !
.AA! "
InstanceAA" *
.AA* +#
UpdatePackageCollectionAA+ B
(AAB C
trueAAC G
)AAG H
;AAH I
}BB 
;BB (
OnAddOperationFinalizedEventCC (
=CC) *
(CC+ ,
)CC, -
=>CC. 0
{DD 
	AddSignalEE 
.EE 
	OperationEE #
=EE$ %
nullEE& *
;EE* +
	operationFF 
.FF 
OnOperationSuccessFF ,
-=FF- /&
OnAddOperationSuccessEventFF0 J
;FFJ K
	operationGG 
.GG  
OnOperationFinalizedGG .
-=GG/ 1(
OnAddOperationFinalizedEventGG2 N
;GGN O
}HH 
;HH 
	operationJJ 
.JJ 
OnOperationSuccessJJ (
+=JJ) +&
OnAddOperationSuccessEventJJ, F
;JJF G
	operationKK 
.KK  
OnOperationFinalizedKK *
+=KK+ -(
OnAddOperationFinalizedEventKK. J
;KKJ K
	AddSignalMM 
.MM 
SetOperationMM "
(MM" #
	operationMM# ,
)MM, -
;MM- .
	operationNN 
.NN 
AddPackageAsyncNN %
(NN% &
packageInfoNN& 1
)NN1 2
;NN2 3
}OO 	
publicQQ 
voidQQ 
UpdateQQ 
(QQ 
)QQ 
{RR 	
AddSS 
(SS 
LatestSS 
)SS 
;SS 
}TT 	
[VV 	
SerializeFieldVV	 
]VV 
publicWW 
readonlyWW 
OperationSignalWW '
<WW' (
IRemoveOperationWW( 8
>WW8 9
RemoveSignalWW: F
=WWG H
newWWI L
OperationSignalWWM \
<WW\ ]
IRemoveOperationWW] m
>WWm n
(WWn o
)WWo p
;WWp q
privateYY 
ActionYY )
OnRemoveOperationSuccessEventYY 4
;YY4 5
privateZZ 
ActionZZ +
OnRemoveOperationFinalizedEventZZ 6
;ZZ6 7
public\\ 
void\\ 
Remove\\ 
(\\ 
)\\ 
{]] 	
if^^ 
(^^ 
Current^^ 
==^^ 
null^^ 
)^^  
return__ 
;__ 
varaa 
	operationaa 
=aa 
OperationFactoryaa ,
.aa, -
Instanceaa- 5
.aa5 6!
CreateRemoveOperationaa6 K
(aaK L
)aaL M
;aaM N)
OnRemoveOperationSuccessEventbb )
=bb* +
(bb, -
)bb- .
=>bb/ 1
{cc 
PackageCollectiondd !
.dd! "
Instancedd" *
.dd* +#
UpdatePackageCollectiondd+ B
(ddB C
trueddC G
)ddG H
;ddH I
}ee 
;ee +
OnRemoveOperationFinalizedEventff +
=ff, -
(ff. /
)ff/ 0
=>ff1 3
{gg 
RemoveSignalhh 
.hh 
	Operationhh &
=hh' (
nullhh) -
;hh- .
	operationii 
.ii 
OnOperationSuccessii ,
-=ii- /)
OnRemoveOperationSuccessEventii0 M
;iiM N
	operationjj 
.jj  
OnOperationFinalizedjj .
-=jj/ 1+
OnRemoveOperationFinalizedEventjj2 Q
;jjQ R
}kk 
;kk 
	operationmm 
.mm 
OnOperationSuccessmm (
+=mm) +)
OnRemoveOperationSuccessEventmm, I
;mmI J
	operationnn 
.nn  
OnOperationFinalizednn *
+=nn+ -+
OnRemoveOperationFinalizedEventnn. M
;nnM N
RemoveSignaloo 
.oo 
SetOperationoo %
(oo% &
	operationoo& /
)oo/ 0
;oo0 1
	operationqq 
.qq 
RemovePackageAsyncqq (
(qq( )
Currentqq) 0
)qq0 1
;qq1 2
}rr 	
}ss 
}tt ä¬
üC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Packages\PackageCollection.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
class 
PackageCollection $
{		 
private

 
static

 
readonly

 
PackageCollection

  1
instance

2 :
=

; <
new

= @
PackageCollection

A R
(

R S
)

S T
;

T U
public 
static 
PackageCollection '
Instance( 0
{1 2
get3 6
{7 8
return9 ?
instance@ H
;H I
}J K
}L M
public 
event 
Action 
< 
Package #
># $
OnPackageAdded% 3
=4 5
delegate6 >
{? @
}A B
;B C
public 
event 
Action 
< 
IEnumerable '
<' (
Package( /
>/ 0
>0 1
OnPackagesChanged2 C
=D E
delegateF N
{O P
}Q R
;R S
public 
event 
Action 
< 
PackageFilter )
>) *
OnFilterChanged+ :
=; <
delegate= E
{F G
}H I
;I J
[ 	
SerializeField	 
] 
private 
List 
< 
PackageInfo  
>  !
packageInfos" .
;. /
[ 	
SerializeField	 
] 
private 

Dictionary 
< 
string !
,! "
Package# *
>* +
Packages, 4
;4 5
private 
IEnumerable 
< 
PackageInfo '
>' (#
LastListOfflinePackages) @
=A B
nullC G
;G H
private 
IEnumerable 
< 
PackageInfo '
>' (
LastListPackages) 9
=: ;
null< @
;@ A
private 
IEnumerable 
< 
PackageInfo '
>' (
LastSearchPackages) ;
=< =
null> B
;B C
private 
ISearchOperation  
searchOperation! 0
;0 1
private 
IListOperation 
listOperation ,
;, -
private 
IListOperation  
listOperationOffline 3
;3 4
private!! 
PackageFilter!! 
filter!! $
;!!$ %
public## 
PackageFilter## 
Filter## #
{$$ 	
get%% 
{%% 
return%% 
filter%% 
;%%  
}%%! "
private(( 
set(( 
{)) 
var** 
changed** 
=** 
value** #
!=**$ &
filter**' -
;**- .
filter++ 
=++ 
value++ 
;++ 
if-- 
(-- 
changed-- 
)-- 
OnFilterChanged.. #
(..# $
filter..$ *
)..* +
;..+ ,
}// 
}00 	
private22 
PackageCollection22 !
(22! "
)22" #
{33 	
packageInfos44 
=44 
new44 
List44 #
<44# $
PackageInfo44$ /
>44/ 0
(440 1
)441 2
;442 3
Packages55 
=55 
new55 

Dictionary55 %
<55% &
string55& ,
,55, -
Package55. 5
>555 6
(556 7
)557 8
;558 9
Filter77 
=77 
PackageFilter77 "
.77" #
Local77# (
;77( )
FetchAllCaches99 
(99 
)99 
;99 
}:: 	
public== 
IEnumerable== 
<== 
PackageInfo== &
>==& '
PackageInfos==( 4
{>> 	
get?? 
{?? 
return?? 
packageInfos?? %
;??% &
}??' (
}@@ 	
publicBB 
boolBB 
	SetFilterBB 
(BB 
PackageFilterBB +
filterBB, 2
,BB2 3
boolBB4 8
refreshBB9 @
=BBA B
trueBBC G
)BBG H
{CC 	
ifDD 
(DD 
filterDD 
==DD 
FilterDD  
)DD  !
returnEE 
falseEE 
;EE 
FilterGG 
=GG 
filterGG 
;GG 
ifHH 
(HH 
refreshHH 
)HH #
UpdatePackageCollectionII '
(II' (
)II( )
;II) *
returnJJ 
trueJJ 
;JJ 
}KK 	
privateMM 
voidMM 
ResetMM 
(MM 
)MM 
{NN 	#
LastListOfflinePackagesOO #
=OO$ %
nullOO& *
;OO* +
LastListPackagesPP 
=PP 
nullPP #
;PP# $
LastSearchPackagesQQ 
=QQ  
nullQQ! %
;QQ% &
listOperationSS 
=SS 
nullSS  
;SS  ! 
listOperationOfflineTT  
=TT! "
nullTT# '
;TT' (
searchOperationUU 
=UU 
nullUU "
;UU" #!
ClearPackagesInternalWW !
(WW! "
)WW" #
;WW# $
FetchAllCachesXX 
(XX 
)XX 
;XX 
}YY 	
public[[ 
void[[ #
UpdatePackageCollection[[ +
([[+ ,
bool[[, 0
reset[[1 6
=[[7 8
false[[9 >
)[[> ?
{\\ 	
if]] 
(]] 
reset]] 
)]] 
Reset^^ 
(^^ 
)^^ 
;^^ 
switch`` 
(`` 
Filter`` 
)`` 
{aa 
casebb 
PackageFilterbb "
.bb" #
Allbb# &
:bb& '
SearchPackagescc "
(cc" #
)cc# $
;cc$ %
breakdd 
;dd 
caseff 
PackageFilterff "
.ff" #
Noneff# '
:ff' (
casegg 
PackageFiltergg "
.gg" #
Localgg# (
:gg( )
ListPackageshh  
(hh  !
)hh! "
;hh" #
breakii 
;ii 
defaultkk 
:kk 
Debugll 
.ll 
LogErrorll "
(ll" #
$strll# <
)ll< =
;ll= >
breakmm 
;mm 
}nn 
}oo 	
publicqq 
boolqq !
HasFetchedPackageListqq )
(qq) *
)qq* +
{rr 	
returnss 
LastListPackagesss #
!=ss$ &
nullss' +
||ss, .#
LastListOfflinePackagesss/ F
!=ssG I
nullssJ N
;ssN O
}tt 	
privatevv 
voidvv !
FetchListOfflineCachevv *
(vv* +
)vv+ ,
{ww 	
ifxx 
(xx  
listOperationOfflinexx $
==xx% '
nullxx( ,
&&xx- /#
LastListOfflinePackagesxx0 G
==xxH J
nullxxK O
)xxO P
{yy  
listOperationOfflinezz $
=zz% &
OperationFactoryzz' 7
.zz7 8
Instancezz8 @
.zz@ A
CreateListOperationzzA T
(zzT U
truezzU Y
)zzY Z
;zzZ [ 
listOperationOffline{{ $
.{{$ %
GetPackageListAsync{{% 8
({{8 9
infos{{9 >
=>{{? A
{{{B C#
LastListOfflinePackages{{D [
={{\ ]
infos{{^ c
;{{c d
}{{e f
,{{f g
error{{h m
=>{{n p
{{{q r
ClearPackages	{{s Ä
(
{{Ä Å
)
{{Å Ç
;
{{Ç É
}
{{Ñ Ö
)
{{Ö Ü
;
{{Ü á
}|| 
}}} 	
private 
void 
FetchListCache #
(# $
)$ %
{
ÄÄ 	
if
ÅÅ 
(
ÅÅ 
listOperation
ÅÅ 
==
ÅÅ  
null
ÅÅ! %
&&
ÅÅ& (
LastListPackages
ÅÅ) 9
==
ÅÅ: <
null
ÅÅ= A
)
ÅÅA B
{
ÇÇ 
var
ÉÉ 
	operation
ÉÉ 
=
ÉÉ 
OperationFactory
ÉÉ  0
.
ÉÉ0 1
Instance
ÉÉ1 9
.
ÉÉ9 :!
CreateListOperation
ÉÉ: M
(
ÉÉM N
)
ÉÉN O
;
ÉÉO P
listOperation
ÑÑ 
=
ÑÑ 
	operation
ÑÑ  )
;
ÑÑ) *
	operation
ÖÖ 
.
ÖÖ !
GetPackageListAsync
ÖÖ -
(
ÖÖ- .
infos
ÖÖ. 3
=>
ÖÖ4 6
{
ÖÖ7 8
LastListPackages
ÖÖ9 I
=
ÖÖJ K
infos
ÖÖL Q
;
ÖÖQ R
}
ÖÖS T
,
ÖÖT U
error
ÖÖV [
=>
ÖÖ\ ^
{
ÖÖ_ `
ClearPackages
ÖÖa n
(
ÖÖn o
)
ÖÖo p
;
ÖÖp q
}
ÖÖr s
)
ÖÖs t
;
ÖÖt u
}
ÜÜ 
}
áá 	
private
ââ 
void
ââ 
FetchSearchCache
ââ %
(
ââ% &
)
ââ& '
{
ää 	
if
ãã 
(
ãã 
searchOperation
ãã 
==
ãã  "
null
ãã# '
&&
ãã( * 
LastSearchPackages
ãã+ =
==
ãã> @
null
ããA E
)
ããE F
{
åå 
var
çç 
	operation
çç 
=
çç 
OperationFactory
çç  0
.
çç0 1
Instance
çç1 9
.
çç9 :#
CreateSearchOperation
çç: O
(
ççO P
)
ççP Q
;
ççQ R
searchOperation
éé 
=
éé  !
	operation
éé" +
;
éé+ ,
	operation
èè 
.
èè  
GetAllPackageAsync
èè ,
(
èè, -
infos
èè- 2
=>
èè3 5
{
èè6 7 
LastSearchPackages
èè8 J
=
èèK L
infos
èèM R
;
èèR S
}
èèT U
,
èèU V
error
èèW \
=>
èè] _
{
èè` a
ClearPackages
èèb o
(
èèo p
)
èèp q
;
èèq r
}
èès t
)
èèt u
;
èèu v
}
êê 
}
ëë 	
private
ìì 
void
ìì 
FetchAllCaches
ìì #
(
ìì# $
)
ìì$ %
{
îî 	#
FetchListOfflineCache
ïï !
(
ïï! "
)
ïï" #
;
ïï# $
FetchListCache
ññ 
(
ññ 
)
ññ 
;
ññ 
FetchSearchCache
óó 
(
óó 
)
óó 
;
óó 
}
òò 	
private
öö 
void
öö !
ListPackagesOffline
öö (
(
öö( )
)
öö) *
{
õõ 	
if
úú 
(
úú 
LastListPackages
úú  
!=
úú! #
null
úú$ (
)
úú( )!
SetListPackageInfos
ùù #
(
ùù# $
LastListPackages
ùù$ 4
)
ùù4 5
;
ùù5 6
if
üü 
(
üü "
listOperationOffline
üü $
==
üü% '
null
üü( ,
)
üü, -#
FetchListOfflineCache
†† %
(
††% &
)
††& '
;
††' (
if
¢¢ 
(
¢¢ %
LastListOfflinePackages
¢¢ '
==
¢¢( *
null
¢¢+ /
)
¢¢/ 0
{
££ "
listOperationOffline
§§ $
.
§§$ %"
OnOperationFinalized
§§% 9
-=
§§: <-
OnListOperationOfflineFinalized
§§= \
;
§§\ ]"
listOperationOffline
•• $
.
••$ %"
OnOperationFinalized
••% 9
+=
••: <-
OnListOperationOfflineFinalized
••= \
;
••\ ]
}
¶¶ 
else
ßß 
{
®® !
SetListPackageInfos
©© #
(
©©# $%
LastListOfflinePackages
©©$ ;
)
©©; <
;
©©< =
}
™™ 
}
´´ 	
private
≠≠ 
void
≠≠ -
OnListOperationOfflineFinalized
≠≠ 4
(
≠≠4 5
)
≠≠5 6
{
ÆÆ 	!
SetListPackageInfos
ØØ 
(
ØØ  %
LastListOfflinePackages
ØØ  7
)
ØØ7 8
;
ØØ8 9
}
∞∞ 	
private
≤≤ 
void
≤≤  
ListPackagesOnline
≤≤ '
(
≤≤' (
)
≤≤( )
{
≥≥ 	
if
¥¥ 
(
¥¥ 
listOperation
¥¥ 
==
¥¥  
null
¥¥! %
)
¥¥% &
FetchListCache
µµ 
(
µµ 
)
µµ  
;
µµ  !
if
∑∑ 
(
∑∑ 
LastListPackages
∑∑  
==
∑∑! #
null
∑∑$ (
)
∑∑( )
{
∏∏ 
listOperation
ππ 
.
ππ "
OnOperationFinalized
ππ 2
-=
ππ3 5&
OnListOperationFinalized
ππ6 N
;
ππN O
listOperation
∫∫ 
.
∫∫ "
OnOperationFinalized
∫∫ 2
+=
∫∫3 5&
OnListOperationFinalized
∫∫6 N
;
∫∫N O
}
ªª 
else
ºº 
{
ΩΩ !
SetListPackageInfos
ææ #
(
ææ# $
LastListPackages
ææ$ 4
)
ææ4 5
;
ææ5 6
}
øø 
}
¿¿ 	
private
¬¬ 
void
¬¬ &
OnListOperationFinalized
¬¬ -
(
¬¬- .
)
¬¬. /
{
√√ 	
listOperation
ƒƒ 
=
ƒƒ 
null
ƒƒ  
;
ƒƒ  !!
SetListPackageInfos
≈≈ 
(
≈≈  
LastListPackages
≈≈  0
)
≈≈0 1
;
≈≈1 2
}
∆∆ 	
private
»» 
void
»» 
CancelListOffline
»» &
(
»»& '
)
»»' (
{
…… 	
if
   
(
   "
listOperationOffline
   $
!=
  % '
null
  ( ,
)
  , -
{
ÀÀ "
listOperationOffline
ÃÃ $
.
ÃÃ$ %
Cancel
ÃÃ% +
(
ÃÃ+ ,
)
ÃÃ, -
;
ÃÃ- ."
listOperationOffline
ÕÕ $
=
ÕÕ% &
null
ÕÕ' +
;
ÕÕ+ ,
}
ŒŒ 
}
œœ 	
private
—— 
void
—— 
ListPackages
—— !
(
——! "
)
——" #
{
““ 	!
ListPackagesOffline
”” 
(
””  
)
””  !
;
””! " 
ListPackagesOnline
‘‘ 
(
‘‘ 
)
‘‘  
;
‘‘  !
}
’’ 	
private
◊◊ 
void
◊◊ 
SearchPackages
◊◊ #
(
◊◊# $
)
◊◊$ %
{
ÿÿ 	
if
ŸŸ 
(
ŸŸ 
searchOperation
ŸŸ 
==
ŸŸ  "
null
ŸŸ# '
)
ŸŸ' (
FetchSearchCache
⁄⁄  
(
⁄⁄  !
)
⁄⁄! "
;
⁄⁄" #
if
‹‹ 
(
‹‹  
LastSearchPackages
‹‹ "
==
‹‹# %
null
‹‹& *
)
‹‹* +
{
›› 
searchOperation
ﬁﬁ 
.
ﬁﬁ  "
OnOperationFinalized
ﬁﬁ  4
-=
ﬁﬁ5 7(
OnSearchOperationFinalized
ﬁﬁ8 R
;
ﬁﬁR S
searchOperation
ﬂﬂ 
.
ﬂﬂ  "
OnOperationFinalized
ﬂﬂ  4
+=
ﬂﬂ5 7(
OnSearchOperationFinalized
ﬂﬂ8 R
;
ﬂﬂR S
}
‡‡ 
else
·· 
{
‚‚ #
SetSearchPackageInfos
„„ %
(
„„% & 
LastSearchPackages
„„& 8
)
„„8 9
;
„„9 :
}
‰‰ 
}
ÂÂ 	
private
ÁÁ 
void
ÁÁ (
OnSearchOperationFinalized
ÁÁ /
(
ÁÁ/ 0
)
ÁÁ0 1
{
ËË 	#
SetSearchPackageInfos
ÈÈ !
(
ÈÈ! " 
LastSearchPackages
ÈÈ" 4
)
ÈÈ4 5
;
ÈÈ5 6
}
ÍÍ 	
private
ÏÏ 
void
ÏÏ #
SetSearchPackageInfos
ÏÏ *
(
ÏÏ* +
IEnumerable
ÏÏ+ 6
<
ÏÏ6 7
PackageInfo
ÏÏ7 B
>
ÏÏB C 
searchPackageInfos
ÏÏD V
)
ÏÏV W
{
ÌÌ 	
searchOperation
ÓÓ 
=
ÓÓ 
null
ÓÓ "
;
ÓÓ" #
var
ÔÔ 
copyPackageInfo
ÔÔ 
=
ÔÔ  !
new
ÔÔ" %
List
ÔÔ& *
<
ÔÔ* +
PackageInfo
ÔÔ+ 6
>
ÔÔ6 7
(
ÔÔ7 8
packageInfos
ÔÔ8 D
)
ÔÔD E
;
ÔÔE F
copyPackageInfo
 
.
 
AddRange
 $
(
$ % 
searchPackageInfos
% 7
.
7 8
Where
8 =
(
= >
pi
> @
=>
A C
!
D E
Packages
E M
.
M N
ContainsKey
N Y
(
Y Z
pi
Z \
.
\ ]
Name
] a
)
a b
||
c e
Packages
f n
[
n o
pi
o q
.
q r
Name
r v
]
v w
.
w x
Current
x 
==Ä Ç
nullÉ á
||à ä
Packagesã ì
[ì î
piî ñ
.ñ ó
Nameó õ
]õ ú
.ú ù
Currentù §
.§ •
Version• ¨
!=≠ Ø
pi∞ ≤
.≤ ≥
Version≥ ∫
)∫ ª
)ª º
;º Ω 
LastSearchPackages
ÚÚ 
=
ÚÚ  
copyPackageInfo
ÚÚ! 0
;
ÚÚ0 1
if
ıı 
(
ıı 
Filter
ıı 
==
ıı 
PackageFilter
ıı '
.
ıı' (
All
ıı( +
)
ıı+ ,
{
ˆˆ '
ClearPackageInfosInternal
˜˜ )
(
˜˜) *
)
˜˜* +
;
˜˜+ ,
AddPackageInfos
¯¯ 
(
¯¯   
LastSearchPackages
¯¯  2
)
¯¯2 3
;
¯¯3 4
}
˘˘ 
}
˙˙ 	
public
¸¸ 
void
¸¸ !
SetListPackageInfos
¸¸ '
(
¸¸' (
IEnumerable
¸¸( 3
<
¸¸3 4
PackageInfo
¸¸4 ?
>
¸¸? @
packageInfos
¸¸A M
)
¸¸M N
{
˝˝ 	
if
ˇˇ 
(
ˇˇ 
Filter
ˇˇ 
==
ˇˇ 
PackageFilter
ˇˇ '
.
ˇˇ' (
Local
ˇˇ( -
)
ˇˇ- .
{
ÄÄ 
CancelListOffline
ÅÅ !
(
ÅÅ! "
)
ÅÅ" #
;
ÅÅ# $'
ClearPackageInfosInternal
ÇÇ )
(
ÇÇ) *
)
ÇÇ* +
;
ÇÇ+ ,
AddPackageInfos
ÉÉ 
(
ÉÉ  
packageInfos
ÉÉ  ,
)
ÉÉ, -
;
ÉÉ- .
}
ÑÑ 
}
ÖÖ 	
private
áá 
IEnumerable
áá 
<
áá 
Package
áá #
>
áá# $
OrderedPackages
áá% 4
(
áá4 5
)
áá5 6
{
àà 	
return
ââ 
Packages
ââ 
.
ââ 
Values
ââ "
.
ââ" #
OrderBy
ââ# *
(
ââ* +
pkg
ââ+ .
=>
ââ/ 1
pkg
ââ2 5
.
ââ5 6
Versions
ââ6 >
.
ââ> ?
LastOrDefault
ââ? L
(
ââL M
)
ââM N
==
ââO Q
null
ââR V
?
ââW X
pkg
ââY \
.
ââ\ ]
Name
ââ] a
:
ââb c
pkg
ââd g
.
ââg h
Versions
ââh p
.
ââp q
Last
ââq u
(
ââu v
)
ââv w
.
ââw x
DisplayNameââx É
)ââÉ Ñ
.ââÑ Ö
AsEnumerableââÖ ë
(ââë í
)ââí ì
;ââì î
}
ää 	
public
åå 
void
åå 
AddPackageInfo
åå "
(
åå" #
PackageInfo
åå# .
packageInfo
åå/ :
)
åå: ;
{
çç 	$
AddPackageInfoInternal
éé "
(
éé" #
packageInfo
éé# .
)
éé. /
;
éé/ 0
OnPackagesChanged
èè 
(
èè 
OrderedPackages
èè -
(
èè- .
)
èè. /
)
èè/ 0
;
èè0 1
}
êê 	
public
íí 
void
íí 
AddPackageInfos
íí #
(
íí# $
IEnumerable
íí$ /
<
íí/ 0
PackageInfo
íí0 ;
>
íí; <
packageInfos
íí= I
)
ííI J
{
ìì 	
if
îî 
(
îî 
packageInfos
îî 
==
îî 
null
îî  $
)
îî$ %
packageInfos
ïï 
=
ïï 

Enumerable
ïï )
.
ïï) *
Empty
ïï* /
<
ïï/ 0
PackageInfo
ïï0 ;
>
ïï; <
(
ïï< =
)
ïï= >
;
ïï> ?
foreach
óó 
(
óó 
var
óó 
packageInfo
óó $
in
óó% '
packageInfos
óó( 4
.
óó4 5
OrderBy
óó5 <
(
óó< =
p
óó= >
=>
óó? A
p
óóB C
.
óóC D
DisplayName
óóD O
)
óóO P
)
óóP Q
{
òò $
AddPackageInfoInternal
ôô &
(
ôô& '
packageInfo
ôô' 2
)
ôô2 3
;
ôô3 4
}
öö 
OnPackagesChanged
úú 
(
úú 
OrderedPackages
úú -
(
úú- .
)
úú. /
)
úú/ 0
;
úú0 1
}
ùù 	
private
üü 
void
üü $
AddPackageInfoInternal
üü +
(
üü+ ,
PackageInfo
üü, 7
packageInfo
üü8 C
)
üüC D
{
†† 	
packageInfos
°° 
.
°° 
Add
°° 
(
°° 
packageInfo
°° (
)
°°( )
;
°°) *
if
££ 
(
££ 
Packages
££ 
.
££ 
ContainsKey
££ $
(
££$ %
packageInfo
££% 0
.
££0 1
Name
££1 5
)
££5 6
)
££6 7
return
§§ 
;
§§ 
var
¶¶ 
packageQuery
¶¶ 
=
¶¶ 
from
¶¶ #
pkg
¶¶$ '
in
¶¶( *
packageInfos
¶¶+ 7
where
¶¶8 =
pkg
¶¶> A
.
¶¶A B
Name
¶¶B F
==
¶¶G I
packageInfo
¶¶J U
.
¶¶U V
Name
¶¶V Z
select
¶¶[ a
pkg
¶¶b e
;
¶¶e f
var
ßß 
package
ßß 
=
ßß 
new
ßß 
Package
ßß %
(
ßß% &
packageInfo
ßß& 1
.
ßß1 2
Name
ßß2 6
,
ßß6 7
packageQuery
ßß8 D
)
ßßD E
;
ßßE F
Packages
®® 
[
®® 
packageInfo
®®  
.
®®  !
Name
®®! %
]
®®% &
=
®®' (
package
®®) 0
;
®®0 1
OnPackageAdded
™™ 
(
™™ 
package
™™ "
)
™™" #
;
™™# $
}
´´ 	
public
≠≠ 
void
≠≠ 
ClearPackages
≠≠ !
(
≠≠! "
)
≠≠" #
{
ÆÆ 	
listOperation
ØØ 
=
ØØ 
null
ØØ  
;
ØØ  !"
listOperationOffline
∞∞  
=
∞∞! "
null
∞∞# '
;
∞∞' (
searchOperation
±± 
=
±± 
null
±± "
;
±±" ##
ClearPackagesInternal
≥≥ !
(
≥≥! "
)
≥≥" #
;
≥≥# $
OnPackagesChanged
¥¥ 
(
¥¥ 
OrderedPackages
¥¥ -
(
¥¥- .
)
¥¥. /
)
¥¥/ 0
;
¥¥0 1
}
µµ 	
private
∑∑ 
void
∑∑ '
ClearPackageInfosInternal
∑∑ .
(
∑∑. /
)
∑∑/ 0
{
∏∏ 	
packageInfos
ππ 
.
ππ 
Clear
ππ 
(
ππ 
)
ππ  
;
ππ  !
}
∫∫ 	
private
ºº 
void
ºº #
ClearPackagesInternal
ºº *
(
ºº* +
)
ºº+ ,
{
ΩΩ 	'
ClearPackageInfosInternal
ææ %
(
ææ% &
)
ææ& '
;
ææ' (
Packages
øø 
.
øø 
Clear
øø 
(
øø 
)
øø 
;
øø 
}
¿¿ 	
public
¬¬ 
Package
¬¬ 
GetPackageByName
¬¬ '
(
¬¬' (
string
¬¬( .
name
¬¬/ 3
)
¬¬3 4
{
√√ 	
Package
ƒƒ 
package
ƒƒ 
;
ƒƒ 
Packages
≈≈ 
.
≈≈ 
TryGetValue
≈≈  
(
≈≈  !
name
≈≈! %
,
≈≈% &
out
≈≈' *
package
≈≈+ 2
)
≈≈2 3
;
≈≈3 4
return
∆∆ 
package
∆∆ 
;
∆∆ 
}
«« 	
}
»» 
}…… Â
õC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Packages\PackageFilter.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
enum 
PackageFilter 
{ 
None 
, 
Local 
, 
All 
} 
}		 ó
°C:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Packages\PackageGroupOrigins.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
[ 
Serializable 
] 
internal 
enum 
PackageGroupOrigins %
{ 
Packages 
, 
BuiltInPackages		 
}

 
} Ü8
ôC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Packages\PackageInfo.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
[		 
Serializable		 
]		 
internal

 
class

 
PackageInfo

 
:

  

IEquatable

! +
<

+ ,
PackageInfo

, 7
>

7 8
{ 
public 
static 
bool 
IsModule #
(# $
string$ *
packageName+ 6
)6 7
{ 	
return 
packageName 
. 

StartsWith )
() *
$str* >
)> ?
;? @
} 	
[ 	
SerializeField	 
] 
public 
string 
Name 
; 
[ 	
SerializeField	 
] 
public 
string 
DisplayName !
;! "
[ 	
SerializeField	 
] 
private 
string 

_PackageId !
;! "
[ 	
SerializeField	 
] 
public 

SemVersion 
Version !
;! "
[ 	
SerializeField	 
] 
public 
string 
Description !
;! "
[   	
SerializeField  	 
]   
public!! 
string!! 
Category!! 
;!! 
[## 	
SerializeField##	 
]## 
public$$ 
PackageState$$ 
State$$ !
;$$! "
[&& 	
SerializeField&&	 
]&& 
public'' 
bool'' 
	IsCurrent'' 
;'' 
[)) 	
SerializeField))	 
])) 
public** 
bool** 
IsLatest** 
;** 
[,, 	
SerializeField,,	 
],, 
public-- 
string-- 
Group-- 
;-- 
[// 	
SerializeField//	 
]// 
public00 
PackageOrigin00 
Origin00 #
;00# $
[22 	
SerializeField22	 
]22 
public33 
List33 
<33 
Error33 
>33 
Errors33 !
;33! "
[55 	
SerializeField55	 
]55 
public66 
bool66 

IsVerified66 
;66 
[88 	
SerializeField88	 
]88 
public99 
string99 
Author99 
;99 
public;; 
string;; 
	PackageId;; 
{<< 	
get== 
{>> 
if?? 
(?? 

_PackageId?? 
!=?? !
null??" &
)??& '
return@@ 

_PackageId@@ %
;@@% &
returnAA 
stringAA 
.AA 
FormatAA $
(AA$ %
$strAA% .
,AA. /
NameAA0 4
.AA4 5
ToLowerAA5 <
(AA< =
)AA= >
,AA> ?
VersionAA@ G
)AAG H
;AAH I
}BB 
setCC 
{DD 

_PackageIdEE 
=EE 
valueEE "
;EE" #
}FF 
}GG 	
publicJJ 
stringJJ 
	VersionIdJJ 
{JJ  !
getJJ" %
{JJ& '
returnJJ( .
stringJJ/ 5
.JJ5 6
FormatJJ6 <
(JJ< =
$strJJ= F
,JJF G
NameJJH L
.JJL M
ToLowerJJM T
(JJT U
)JJU V
,JJV W
VersionJJX _
)JJ_ `
;JJ` a
}JJb c
}JJd e
publicLL 
stringLL 
ShortVersionIdLL $
{LL% &
getLL' *
{LL+ ,
returnLL- 3
stringLL4 :
.LL: ;
FormatLL; A
(LLA B
$strLLB K
,LLK L
NameLLM Q
.LLQ R
ToLowerLLR Y
(LLY Z
)LLZ [
,LL[ \
VersionLL] d
.LLd e
ShortVersionLLe q
(LLq r
)LLr s
)LLs t
;LLt u
}LLv w
}LLx y
publicNN 
stringNN 

ModuleNameNN  
{NN! "
getNN# &
{NN' (
returnNN) /
IsModuleNN0 8
(NN8 9
NameNN9 =
)NN= >
?NN? @
DisplayNameNNA L
:NNM N
$strNNO Q
;NNQ R
}NNS T
}NNU V
publicPP 
boolPP 
EqualsPP 
(PP 
PackageInfoPP &
otherPP' ,
)PP, -
{QQ 	
ifRR 
(RR 
otherRR 
==RR 
nullRR 
)RR 
returnSS 
falseSS 
;SS 
ifTT 
(TT 
otherTT 
==TT 
thisTT 
)TT 
returnUU 
trueUU 
;UU 
returnWW 
NameWW 
==WW 
otherWW  
.WW  !
NameWW! %
&&WW& (
VersionWW) 0
==WW1 3
otherWW4 9
.WW9 :
VersionWW: A
;WWA B
}XX 	
publicZZ 
overrideZZ 
intZZ 
GetHashCodeZZ '
(ZZ' (
)ZZ( )
{[[ 	
return\\ 
	PackageId\\ 
.\\ 
GetHashCode\\ (
(\\( )
)\\) *
;\\* +
}]] 	
public__ 
bool__ 
HasTag__ 
(__ 
string__ !
tag__" %
)__% &
{`` 	
ifaa 
(aa 
stringaa 
.aa 
IsNullOrEmptyaa $
(aa$ %
Versionaa% ,
.aa, -

Prereleaseaa- 7
)aa7 8
)aa8 9
returnbb 
falsebb 
;bb 
returndd 
Stringdd 
.dd 
Equalsdd  
(dd  !
Versiondd! (
.dd( )

Prereleasedd) 3
.dd3 4
Splitdd4 9
(dd9 :
$chardd: =
)dd= >
.dd> ?
Firstdd? D
(ddD E
)ddE F
,ddF G
tagddH K
,ddK L
StringComparisonddM ]
.dd] ^$
CurrentCultureIgnoreCasedd^ v
)ddv w
;ddw x
}ee 	
publicgg 
boolgg 
HasTaggg 
(gg 

PackageTaggg %
taggg& )
)gg) *
{hh 	
returnii 
HasTagii 
(ii 
tagii 
.ii 
ToStringii &
(ii& '
)ii' (
)ii( )
;ii) *
}jj 	
publicll 
stringll 
VersionWithoutTagll '
{ll( )
getll* -
{ll. /
returnll0 6
Versionll7 >
.ll> ?
VersionOnlyll? J
(llJ K
)llK L
;llL M
}llN O
}llP Q
}mm 
}nn ¢
ßC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Packages\PackageInfoListExtensions.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
static 
class %
PackageInfoListExtensions 3
{ 
public 
static 
IEnumerable !
<! "
PackageInfo" -
>- .
ByName/ 5
(5 6
this6 :
IEnumerable; F
<F G
PackageInfoG R
>R S
listT X
,X Y
stringZ `
namea e
)e f
{		 	
return

 
from

 
package

 
in

  "
list

# '
where

( -
package

. 5
.

5 6
Name

6 :
==

; =
name

> B
select

C I
package

J Q
;

Q R
} 	
public 
static 
void 

SetCurrent %
(% &
this& *
IEnumerable+ 6
<6 7
PackageInfo7 B
>B C
listD H
,H I
boolJ N
currentO V
=W X
trueY ]
)] ^
{ 	
foreach 
( 
var 
package  
in! #
list$ (
)( )
{ 
package 
. 
	IsCurrent !
=" #
current$ +
;+ ,
} 
} 	
public 
static 
void 
	SetLatest $
($ %
this% )
IEnumerable* 5
<5 6
PackageInfo6 A
>A B
listC G
,G H
boolI M
latestN T
=U V
trueW [
)[ \
{ 	
foreach 
( 
var 
package  
in! #
list$ (
)( )
{ 
package 
. 
IsLatest  
=! "
latest# )
;) *
} 
} 	
public 
static 
void 
SetGroup #
(# $
this$ (
IEnumerable) 4
<4 5
PackageInfo5 @
>@ A
listB F
,F G
stringH N
groupO T
)T U
{ 	
foreach 
( 
var 
package  
in! #
list$ (
)( )
{   
package!! 
.!! 
Group!! 
=!! 
group!!  %
;!!% &
}"" 
}## 	
}$$ 
}%% å
£C:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Packages\PackageListExtensions.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
static 
class !
PackageListExtensions /
{ 
public 
static 
IEnumerable !
<! "
Package" )
>) *
Current+ 2
(2 3
this3 7
IEnumerable8 C
<C D
PackageD K
>K L
listM Q
)Q R
{		 	
return

 
(

 
from

 
package

  
in

! #
list

$ (
where

) .
package

/ 6
.

6 7
Current

7 >
!=

? A
null

B F
select

G M
package

N U
)

U V
;

V W
} 	
} 
} ß
õC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Packages\PackageOrigin.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
[ 
Serializable 
] 
internal 
enum 
PackageOrigin 
{ 
Unknown 
, 
Builtin		 
,		 
Registry

 
} 
} À
öC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Packages\PackageState.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
[ 
Serializable 
] 
internal 
enum 
PackageState 
{ 
UpToDate 
, 
Outdated		 
,		 

InProgress

 
,

 
Error 
} 
} ‘
òC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Packages\PackageTag.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
enum 

PackageTag 
{ 
preview 
, 
verified 
, 
} 
} Ç
òC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Upm\UpmAddOperation.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
class 
UpmAddOperation "
:# $
UpmBaseOperation% 5
,5 6
IAddOperation7 D
{ 
public		 
PackageInfo		 
PackageInfo		 &
{		' (
get		) ,
;		, -
	protected		. 7
set		8 ;
;		; <
}		= >
public 
event 
Action 
< 
PackageInfo '
>' (
OnOperationSuccess) ;
=< =
delegate> F
{G H
}I J
;J K
public 
void 
AddPackageAsync #
(# $
PackageInfo$ /
packageInfo0 ;
,; <
Action= C
<C D
PackageInfoD O
>O P
doneCallbackActionQ c
=d e
nullf j
,j k
Actionl r
<r s
Errors x
>x y 
errorCallbackAction	z ç
=
é è
null
ê î
)
î ï
{ 	
PackageInfo 
= 
packageInfo %
;% &
OnOperationError 
+= 
errorCallbackAction  3
;3 4
OnOperationSuccess 
+= !
doneCallbackAction" 4
;4 5
Start 
( 
) 
; 
} 	
	protected 
override 
Request "
CreateRequest# 0
(0 1
)1 2
{ 	
return 
Client 
. 
Add 
( 
PackageInfo )
.) *
	PackageId* 3
)3 4
;4 5
} 	
	protected 
override 
void 
ProcessData  +
(+ ,
), -
{ 	
var 
request 
= 
CurrentRequest (
as) +

AddRequest, 6
;6 7
var 
package 
= 
FromUpmPackageInfo ,
(, -
request- 4
.4 5
Result5 ;
); <
.< =
First= B
(B C
)C D
;D E
OnOperationSuccess 
( 
package &
)& '
;' (
}   	
}!! 
}"" Ùâ
ôC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Upm\UpmBaseOperation.cs
	namespace		 	
UnityEditor		
 
.		 
PackageManager		 $
.		$ %
UI		% '
{

 
internal 
abstract 
class 
UpmBaseOperation ,
:- .
IBaseOperation/ =
{ 
public 
static 
string 
	GroupName &
(& '
PackageOrigin' 4
origin5 ;
); <
{ 	
var 
group 
= 
PackageGroupOrigins +
.+ ,
Packages, 4
.4 5
ToString5 =
(= >
)> ?
;? @
if 
( 
origin 
== 
PackageOrigin '
.' (
Builtin( /
)/ 0
group 
= 
PackageGroupOrigins +
.+ ,
BuiltInPackages, ;
.; <
ToString< D
(D E
)E F
;F G
return 
group 
; 
} 	
	protected 
static 
IEnumerable $
<$ %
PackageInfo% 0
>0 1
FromUpmPackageInfo2 D
(D E
PackageManagerE S
.S T
PackageInfoT _
info` d
,d e
boolf j
	isCurrentk t
=u v
truew {
){ |
{ 	
var 
origin 
= 
PackageInfo $
.$ %
IsModule% -
(- .
info. 2
.2 3
name3 7
)7 8
?9 :
PackageOrigin; H
.H I
BuiltinI P
:Q R
PackageOriginS `
.` a
Registrya i
;i j
var 
packages 
= 
new 
List #
<# $
PackageInfo$ /
>/ 0
(0 1
)1 2
;2 3
var 
displayName 
= 
info "
." #
displayName# .
;. /
if 
( 
string 
. 
IsNullOrEmpty $
($ %
displayName% 0
)0 1
)1 2
{ 
displayName 
= 
info "
." #
name# '
.' (
Replace( /
(/ 0
$str0 D
,D E
$strF H
)H I
;I J
displayName 
= 
displayName )
.) *
Replace* 1
(1 2
$str2 >
,> ?
$str@ B
)B C
;C D
displayName 
= 
new !
CultureInfo" -
(- .
$str. 5
)5 6
.6 7
TextInfo7 ?
.? @
ToTitleCase@ K
(K L
displayNameL W
)W X
;X Y
}   
var"" 
lastCompatible"" 
=""  
info""! %
.""% &
versions""& .
."". /
latestCompatible""/ ?
;""? @
var## 
versions## 
=## 
new## 
List## #
<### $
string##$ *
>##* +
(##+ ,
)##, -
;##- .
versions$$ 
.$$ 
AddRange$$ 
($$ 
info$$ "
.$$" #
versions$$# +
.$$+ ,

compatible$$, 6
)$$6 7
;$$7 8
if%% 
(%% 
versions%% 
.%% 
	FindIndex%% "
(%%" #
version%%# *
=>%%+ -
version%%. 5
==%%6 8
info%%9 =
.%%= >
version%%> E
)%%E F
==%%G I
-%%J K
$num%%K L
)%%L M
{&& 
versions'' 
.'' 
Add'' 
('' 
info'' !
.''! "
version''" )
)'') *
;''* +
versions)) 
.)) 
Sort)) 
()) 
()) 
left)) #
,))# $
right))% *
)))* +
=>)), .
{** 
if++ 
(++ 
left++ 
==++ 
null++  $
||++% '
right++( -
==++. 0
null++1 5
)++5 6
return++7 =
$num++> ?
;++? @

SemVersion-- 
leftVersion-- *
=--+ ,
left--- 1
;--1 2

SemVersion.. 
righVersion.. *
=..+ ,
right..- 2
;..2 3
return// 
leftVersion// &
.//& '
CompareByPrecedence//' :
(//: ;
righVersion//; F
)//F G
;//G H
}00 
)00 
;00 

SemVersion22 
packageVersion22 )
=22* +
info22, 0
.220 1
version221 8
;228 9
if33 
(33 
!33 
string33 
.33 
IsNullOrEmpty33 )
(33) *
lastCompatible33* 8
)338 9
)339 :
{44 

SemVersion55 !
lastCompatibleVersion55 4
=555 6
string66 
.66 
IsNullOrEmpty66 ,
(66, -
lastCompatible66- ;
)66; <
?66= >
(66? @

SemVersion66@ J
)66J K
null66K O
:66P Q
lastCompatible66R `
;66` a
if77 
(77 
packageVersion77 &
!=77' )
null77* .
&&77/ 1
string772 8
.778 9
IsNullOrEmpty779 F
(77F G
packageVersion77G U
.77U V

Prerelease77V `
)77` a
&&77b d
packageVersion88 &
.88& '
CompareByPrecedence88' :
(88: ;!
lastCompatibleVersion88; P
)88P Q
>88R S
$num88T U
)88U V
lastCompatible99 &
=99' (
info99) -
.99- .
version99. 5
;995 6
}:: 
else;; 
{<< 
if== 
(== 
packageVersion== &
!===' )
null==* .
&&==/ 1
string==2 8
.==8 9
IsNullOrEmpty==9 F
(==F G
packageVersion==G U
.==U V

Prerelease==V `
)==` a
)==a b
lastCompatible>> &
=>>' (
info>>) -
.>>- .
version>>. 5
;>>5 6
}?? 
}@@ 
foreachBB 
(BB 
varBB 
versionBB  
inBB! #
versionsBB$ ,
)BB, -
{CC 
varDD 
isVersionCurrentDD $
=DD% &
versionDD' .
==DD/ 1
infoDD2 6
.DD6 7
versionDD7 >
&&DD? A
	isCurrentDDB K
;DDK L
varEE 
stateEE 
=EE 
(EE 
originEE #
==EE$ &
PackageOriginEE' 4
.EE4 5
BuiltinEE5 <
||EE= ?
infoEE@ D
.EED E
versionEEE L
==EEM O
lastCompatibleEEP ^
)EE^ _
?EE` a
PackageStateEEb n
.EEn o
UpToDateEEo w
:EEx y
PackageState	EEz Ü
.
EEÜ á
Outdated
EEá è
;
EEè ê
ifHH 
(HH 
infoHH 
.HH 
versionsHH !
.HH! "
allHH" %
.HH% &
LengthHH& ,
<=HH- /
$numHH0 1
)HH1 2
stateII 
=II 
PackageStateII (
.II( )
UpToDateII) 1
;II1 2
ifKK 
(KK 
infoKK 
.KK 
errorsKK 
.KK  
LengthKK  &
>KK' (
$numKK) *
)KK* +
stateLL 
=LL 
PackageStateLL (
.LL( )
ErrorLL) .
;LL. /
varNN 
packageInfoNN 
=NN  !
newNN" %
PackageInfoNN& 1
{OO 
NamePP 
=PP 
infoPP 
.PP  
namePP  $
,PP$ %
DisplayNameQQ 
=QQ  !
displayNameQQ" -
,QQ- .
	PackageIdRR 
=RR 
versionRR  '
==RR( *
infoRR+ /
.RR/ 0
versionRR0 7
?RR8 9
infoRR: >
.RR> ?
	packageIdRR? H
:RRI J
nullRRK O
,RRO P
VersionSS 
=SS 
versionSS %
,SS% &
DescriptionTT 
=TT  !
infoTT" &
.TT& '
descriptionTT' 2
,TT2 3
CategoryUU 
=UU 
infoUU #
.UU# $
categoryUU$ ,
,UU, -
	IsCurrentVV 
=VV 
isVersionCurrentVV  0
,VV0 1
IsLatestWW 
=WW 
versionWW &
==WW' )
lastCompatibleWW* 8
,WW8 9

IsVerifiedXX 
=XX  
versionXX! (
==XX) +
infoXX, 0
.XX0 1
versionsXX1 9
.XX9 :
recommendedXX: E
,XXE F
ErrorsYY 
=YY 
infoYY !
.YY! "
errorsYY" (
.YY( )
ToListYY) /
(YY/ 0
)YY0 1
,YY1 2
GroupZZ 
=ZZ 
	GroupNameZZ %
(ZZ% &
originZZ& ,
)ZZ, -
,ZZ- .
State[[ 
=[[ 
state[[ !
,[[! "
Origin\\ 
=\\ 
origin\\ #
,\\# $
Author]] 
=]] 
null]] !
}^^ 
;^^ 
packages`` 
.`` 
Add`` 
(`` 
packageInfo`` (
)``( )
;``) *
}aa 
returncc 
packagescc 
;cc 
}dd 	
publicff 
staticff 
eventff 
Actionff "
<ff" #
UpmBaseOperationff# 3
>ff3 4
OnOperationStartff5 E
=ffF G
delegateffH P
{ffQ R
}ffS T
;ffT U
publichh 
eventhh 
Actionhh 
<hh 
Errorhh !
>hh! "
OnOperationErrorhh# 3
=hh4 5
delegatehh6 >
{hh? @
}hhA B
;hhB C
publicjj 
eventjj 
Actionjj  
OnOperationFinalizedjj 0
=jj1 2
delegatejj3 ;
{jj< =
}jj> ?
;jj? @
publicll 
Errorll 

ForceErrorll 
{ll  !
getll" %
;ll% &
setll' *
;ll* +
}ll, -
publicmm 
Errormm 
Errormm 
{mm 
getmm  
;mm  !
	protectedmm" +
setmm, /
;mm/ 0
}mm1 2
	protectedoo 
abstractoo 
Requestoo "
CreateRequestoo# 0
(oo0 1
)oo1 2
;oo2 3
[qq 	
SerializeFieldqq	 
]qq 
	protectedrr 
Requestrr 
CurrentRequestrr (
;rr( )
publictt 
readonlytt 
ThreadedDelaytt %
Delaytt& +
=tt, -
newtt. 1
ThreadedDelaytt2 ?
(tt? @
)tt@ A
;ttA B
	protectedvv 
abstractvv 
voidvv 
ProcessDatavv  +
(vv+ ,
)vv, -
;vv- .
	protectedxx 
voidxx 
Startxx 
(xx 
)xx 
{yy 	
Errorzz 
=zz 
nullzz 
;zz 
OnOperationStart{{ 
({{ 
this{{ !
){{! "
;{{" #
Delay|| 
.|| 
Start|| 
(|| 
)|| 
;|| 
if~~ 
(~~ 
TryForcedError~~ 
(~~ 
)~~  
)~~  !
return 
; 
EditorApplication
ÅÅ 
.
ÅÅ 
update
ÅÅ $
+=
ÅÅ% '
Progress
ÅÅ( 0
;
ÅÅ0 1
}
ÇÇ 	
private
ÖÖ 
void
ÖÖ 
Progress
ÖÖ 
(
ÖÖ 
)
ÖÖ 
{
ÜÜ 	
if
áá 
(
áá 
!
áá 
Delay
áá 
.
áá 
IsDone
áá 
)
áá 
return
àà 
;
àà 
if
ãã 
(
ãã 
CurrentRequest
ãã 
==
ãã !
null
ãã" &
)
ãã& '
{
åå 
CurrentRequest
çç 
=
çç  
CreateRequest
çç! .
(
çç. /
)
çç/ 0
;
çç0 1
}
éé 
if
íí 
(
íí 
TryForcedError
íí 
(
íí 
)
íí  
)
íí  !
return
ìì 
;
ìì 
if
ïï 
(
ïï 
CurrentRequest
ïï 
.
ïï 
IsCompleted
ïï *
)
ïï* +
{
ññ 
if
óó 
(
óó 
CurrentRequest
óó "
.
óó" #
Status
óó# )
==
óó* ,

StatusCode
óó- 7
.
óó7 8
Success
óó8 ?
)
óó? @
OnDone
òò 
(
òò 
)
òò 
;
òò 
else
ôô 
if
ôô 
(
ôô 
CurrentRequest
ôô '
.
ôô' (
Status
ôô( .
>=
ôô/ 1

StatusCode
ôô2 <
.
ôô< =
Failure
ôô= D
)
ôôD E
OnError
öö 
(
öö 
CurrentRequest
öö *
.
öö* +
Error
öö+ 0
)
öö0 1
;
öö1 2
else
õõ 
Debug
úú 
.
úú 
LogError
úú "
(
úú" #
$str
úú# @
+
úúA B
CurrentRequest
úúC Q
.
úúQ R
Status
úúR X
)
úúX Y
;
úúY Z
}
ùù 
}
ûû 	
private
†† 
void
†† 
OnError
†† 
(
†† 
Error
†† "
error
††# (
)
††( )
{
°° 	
try
¢¢ 
{
££ 
Error
§§ 
=
§§ 
error
§§ 
;
§§ 
var
¶¶ 
message
¶¶ 
=
¶¶ 
$str
¶¶ =
;
¶¶= >
if
ßß 
(
ßß 
error
ßß 
!=
ßß 
null
ßß !
)
ßß! "
message
®® 
=
®® 
$str
®® >
+
®®? @
Error
®®A F
.
®®F G
message
®®G N
+
®®O P
$str
®®Q U
+
®®V W
Error
®®X ]
.
®®] ^
	errorCode
®®^ g
+
®®h i
$str
®®j m
;
®®m n
Debug
™™ 
.
™™ 
LogError
™™ 
(
™™ 
message
™™ &
)
™™& '
;
™™' (
OnOperationError
¨¨  
(
¨¨  !
Error
¨¨! &
)
¨¨& '
;
¨¨' (
}
≠≠ 
catch
ÆÆ 
(
ÆÆ 
	Exception
ÆÆ 
	exception
ÆÆ &
)
ÆÆ& '
{
ØØ 
Debug
∞∞ 
.
∞∞ 
LogError
∞∞ 
(
∞∞ 
$str
∞∞ o
+
∞∞p q
	exception
∞∞r {
)
∞∞{ |
;
∞∞| }
}
±± 
FinalizeOperation
≥≥ 
(
≥≥ 
)
≥≥ 
;
≥≥  
}
¥¥ 	
private
∂∂ 
void
∂∂ 
OnDone
∂∂ 
(
∂∂ 
)
∂∂ 
{
∑∑ 	
try
∏∏ 
{
ππ 
ProcessData
∫∫ 
(
∫∫ 
)
∫∫ 
;
∫∫ 
}
ªª 
catch
ºº 
(
ºº 
	Exception
ºº 
error
ºº "
)
ºº" #
{
ΩΩ 
Debug
ææ 
.
ææ 
LogError
ææ 
(
ææ 
$str
ææ d
+
ææe f
error
ææg l
)
ææl m
;
ææm n
}
øø 
FinalizeOperation
¡¡ 
(
¡¡ 
)
¡¡ 
;
¡¡  
}
¬¬ 	
private
ƒƒ 
void
ƒƒ 
FinalizeOperation
ƒƒ &
(
ƒƒ& '
)
ƒƒ' (
{
≈≈ 	
EditorApplication
∆∆ 
.
∆∆ 
update
∆∆ $
-=
∆∆% '
Progress
∆∆( 0
;
∆∆0 1"
OnOperationFinalized
««  
(
««  !
)
««! "
;
««" #
}
»» 	
public
   
void
   
Cancel
   
(
   
)
   
{
ÀÀ 	
EditorApplication
ÃÃ 
.
ÃÃ 
update
ÃÃ $
-=
ÃÃ% '
Progress
ÃÃ( 0
;
ÃÃ0 1
OnOperationError
ÕÕ 
=
ÕÕ 
delegate
ÕÕ '
{
ÕÕ( )
}
ÕÕ* +
;
ÕÕ+ ,"
OnOperationFinalized
ŒŒ  
=
ŒŒ! "
delegate
ŒŒ# +
{
ŒŒ, -
}
ŒŒ. /
;
ŒŒ/ 0
}
œœ 	
private
—— 
bool
—— 
TryForcedError
—— #
(
——# $
)
——$ %
{
““ 	
if
”” 
(
”” 

ForceError
”” 
!=
”” 
null
”” "
)
””" #
{
‘‘ 
OnError
’’ 
(
’’ 

ForceError
’’ "
)
’’" #
;
’’# $
return
÷÷ 
true
÷÷ 
;
÷÷ 
}
◊◊ 
return
ŸŸ 
false
ŸŸ 
;
ŸŸ 
}
⁄⁄ 	
}
€€ 
}‹‹ ∑
ôC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Upm\UpmListOperation.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
class 
UpmListOperation #
:$ %
UpmBaseOperation& 6
,6 7
IListOperation8 F
{		 
[

 	
SerializeField

	 
]

 
private 
Action 
< 
IEnumerable "
<" #
PackageInfo# .
>. /
>/ 0
_doneCallbackAction1 D
;D E
public 
UpmListOperation 
(  
bool  $
offlineMode% 0
)0 1
:2 3
base4 8
(8 9
)9 :
{ 	
OfflineMode 
= 
offlineMode %
;% &
} 	
public 
bool 
OfflineMode 
{  !
get" %
;% &
set' *
;* +
}, -
public 
void 
GetPackageListAsync '
(' (
Action( .
<. /
IEnumerable/ :
<: ;
PackageInfo; F
>F G
>G H
doneCallbackActionI [
,[ \
Action] c
<c d
Errord i
>i j
errorCallbackActionk ~
=	 Ä
null
Å Ö
)
Ö Ü
{ 	
_doneCallbackAction 
=  !
doneCallbackAction" 4
;4 5
OnOperationError 
+= 
errorCallbackAction  3
;3 4
Start 
( 
) 
; 
} 	
	protected 
override 
Request "
CreateRequest# 0
(0 1
)1 2
{ 	
return 
Client 
. 
List 
( 
OfflineMode *
)* +
;+ ,
} 	
	protected!! 
override!! 
void!! 
ProcessData!!  +
(!!+ ,
)!!, -
{"" 	
var## 
request## 
=## 
CurrentRequest## (
as##) +
ListRequest##, 7
;##7 8
var$$ 
packages$$ 
=$$ 
new$$ 
List$$ #
<$$# $
PackageInfo$$$ /
>$$/ 0
($$0 1
)$$1 2
;$$2 3
foreach%% 
(%% 
var%% 

upmPackage%% #
in%%$ &
request%%' .
.%%. /
Result%%/ 5
)%%5 6
{&& 
var'' 
packageInfos''  
=''! "
FromUpmPackageInfo''# 5
(''5 6

upmPackage''6 @
)''@ A
;''A B
packages(( 
.(( 
AddRange(( !
(((! "
packageInfos((" .
)((. /
;((/ 0
})) 
_doneCallbackAction++ 
(++  
packages++  (
)++( )
;++) *
},, 	
}-- 
}.. ™
úC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Upm\UpmOperationFactory.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
class 
UpmOperationFactory &
:' (
IOperationFactory) :
{ 
public 
IListOperation 
CreateListOperation 1
(1 2
bool2 6
offlineMode7 B
=C D
falseE J
)J K
{ 	
return 
new 
UpmListOperation '
(' (
offlineMode( 3
)3 4
;4 5
} 	
public

 
ISearchOperation

 !
CreateSearchOperation

  5
(

5 6
)

6 7
{ 	
return 
new 
UpmSearchOperation )
() *
)* +
;+ ,
} 	
public 
IAddOperation 
CreateAddOperation /
(/ 0
)0 1
{ 	
return 
new 
UpmAddOperation &
(& '
)' (
;( )
} 	
public 
IRemoveOperation !
CreateRemoveOperation  5
(5 6
)6 7
{ 	
return 
new 
UpmRemoveOperation )
() *
)* +
;+ ,
} 	
} 
}  
õC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Upm\UpmRemoveOperation.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
class 
UpmRemoveOperation %
:& '
UpmBaseOperation( 8
,8 9
IRemoveOperation: J
{ 
[		 	
SerializeField			 
]		 
private

 
PackageInfo

 
_package

 $
;

$ %
public 
event 
Action 
OnOperationSuccess .
=/ 0
delegate1 9
{: ;
}< =
;= >
public 
void 
RemovePackageAsync &
(& '
PackageInfo' 2
package3 :
,: ;
Action< B
doneCallbackActionC U
=V W
nullX \
,\ ]
Action^ d
<d e
Errore j
>j k
errorCallbackActionl 
=
Ä Å
null
Ç Ü
)
Ü á
{ 	
_package 
= 
package 
; 
OnOperationError 
+= 
errorCallbackAction  3
;3 4
OnOperationSuccess 
+= !
doneCallbackAction" 4
;4 5
Start 
( 
) 
; 
} 	
	protected 
override 
Request "
CreateRequest# 0
(0 1
)1 2
{ 	
return 
Client 
. 
Remove  
(  !
_package! )
.) *
Name* .
). /
;/ 0
} 	
	protected 
override 
void 
ProcessData  +
(+ ,
), -
{ 	
OnOperationSuccess 
( 
)  
;  !
} 	
}   
}!! ™
õC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\Services\Upm\UpmSearchOperation.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
class 
UpmSearchOperation %
:& '
UpmBaseOperation( 8
,8 9
ISearchOperation: J
{		 
[

 	
SerializeField

	 
]

 
private 
Action 
< 
IEnumerable "
<" #
PackageInfo# .
>. /
>/ 0
_doneCallbackAction1 D
;D E
public 
void 
GetAllPackageAsync &
(& '
Action' -
<- .
IEnumerable. 9
<9 :
PackageInfo: E
>E F
>F G
doneCallbackActionH Z
=[ \
null] a
,a b
Actionc i
<i j
Errorj o
>o p 
errorCallbackAction	q Ñ
=
Ö Ü
null
á ã
)
ã å
{ 	
_doneCallbackAction 
=  !
doneCallbackAction" 4
;4 5
OnOperationError 
+= 
errorCallbackAction  3
;3 4
Start 
( 
) 
; 
} 	
	protected 
override 
Request "
CreateRequest# 0
(0 1
)1 2
{ 	
return 
Client 
. 
	SearchAll #
(# $
)$ %
;% &
} 	
	protected 
override 
void 
ProcessData  +
(+ ,
), -
{ 	
var 
request 
= 
CurrentRequest (
as) +
SearchRequest, 9
;9 :
var 
packages 
= 
new 
List #
<# $
PackageInfo$ /
>/ 0
(0 1
)1 2
;2 3
foreach 
( 
var 

upmPackage #
in$ &
request' .
.. /
Result/ 5
)5 6
{ 
var   
packageInfos    
=  ! "
FromUpmPackageInfo  # 5
(  5 6

upmPackage  6 @
,  @ A
false  B G
)  G H
;  H I
packages!! 
.!! 
AddRange!! !
(!!! "
packageInfos!!" .
)!!. /
;!!/ 0
}"" 
_doneCallbackAction## 
(##  
packages##  (
)##( )
;##) *
}$$ 	
}%% 
}&& ü&
ãC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\UI\Common\Alert.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
class 
AlertFactory 
:  !
UxmlFactory" -
<- .
Alert. 3
>3 4
{ 
	protected 
override 
Alert  
DoCreate! )
() *
IUxmlAttributes* 9
bag: =
,= >
CreationContext? N
ccO Q
)Q R
{		 	
return

 
new

 
Alert

 
(

 
bag

  
.

  !
GetPropertyString

! 2
(

2 3
$str

3 9
)

9 :
)

: ;
;

; <
} 	
} 
internal 
class 
Alert 
: 
VisualElement (
{ 
private 
readonly 
VisualElement &
root' +
;+ ,
private 
const 
float !
originalPositionRight 1
=2 3
$num4 8
;8 9
private 
const 
float #
positionRightWithScroll 3
=4 5
$num6 ;
;; <
public 
Alert 
( 
string 
text  
)  !
{ 	
root 
= 
	Resources 
. 
Load !
<! "
VisualTreeAsset" 1
>1 2
(2 3
$str3 D
)D E
.E F
	CloneTreeF O
(O P
nullP T
)T U
;U V
Add 
( 
root 
) 
; 
root 
. 
StretchToParentSize $
($ %
)% &
;& '
AlertMessage 
. 
text 
= 
text  $
;$ %
CloseButton 
. 
	clickable !
.! "
clicked" )
+=* ,

ClearError- 7
;7 8
} 	
public 
void 
SetError 
( 
Error "
error# (
)( )
{ 	
var   
message   
=   
$str   -
;  - .
if!! 
(!! 
error!! 
!=!! 
null!! 
)!! 
message"" 
="" 
error"" 
.""  
message""  '
??""( *
string""+ 1
.""1 2
Format""2 8
(""8 9
$str""9 R
,""R S
error""T Y
.""Y Z
	errorCode""Z c
.""c d
ToString""d l
(""l m
)""m n
)""n o
;""o p
AlertMessage$$ 
.$$ 
text$$ 
=$$ 
message$$  '
;$$' (
RemoveFromClassList%% 
(%%  
$str%%  .
)%%. /
;%%/ 0
}&& 	
public(( 
void(( 

ClearError(( 
((( 
)((  
{)) 	
AddToClassList** 
(** 
$str** )
)**) *
;*** +

AdjustSize++ 
(++ 
false++ 
)++ 
;++ 
AlertMessage,, 
.,, 
text,, 
=,, 
$str,,  "
;,," #
}-- 	
public// 
void// 

AdjustSize// 
(// 
bool// ##
verticalScrollerVisible//$ ;
)//; <
{00 	
if11 
(11 #
verticalScrollerVisible11 '
)11' (
style22 
.22 
positionRight22 #
=22$ %!
originalPositionRight22& ;
+22< =#
positionRightWithScroll22> U
;22U V
else33 
style44 
.44 
positionRight44 #
=44$ %!
originalPositionRight44& ;
;44; <
}55 	
private77 
Label77 
AlertMessage77 "
{77# $
get77% (
{77) *
return77+ 1
root772 6
.776 7
Q777 8
<778 9
Label779 >
>77> ?
(77? @
$str77@ N
)77N O
;77O P
}77Q R
}77S T
private88 
Button88 
CloseButton88 "
{88# $
get88% (
{88) *
return88+ 1
root882 6
.886 7
Q887 8
<888 9
Button889 ?
>88? @
(88@ A
$str88A H
)88H I
;88I J
}88K L
}88M N
}99 
}:: ß
îC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\UI\Common\LoadingSpinner.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
class !
LoadingSpinnerFactory (
:) *
UxmlFactory+ 6
<6 7
LoadingSpinner7 E
>E F
{ 
	protected 
override 
LoadingSpinner )
DoCreate* 2
(2 3
IUxmlAttributes3 B
bagC F
,F G
CreationContextH W
ccX Z
)Z [
{		 	
return

 
new

 
LoadingSpinner

 %
(

% &
)

& '
;

' (
} 	
} 
internal 
class 
LoadingSpinner !
:" #
VisualElement$ 1
{ 
public 
bool 
InvertColor 
{  !
get" %
;% &
set' *
;* +
}, -
public 
bool 
Started 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
private 
int 
rotation 
; 
public 
LoadingSpinner 
( 
) 
{ 	
InvertColor 
= 
false 
;  
Started 
= 
false 
; 
UIUtils 
. 
SetElementDisplay %
(% &
this& *
,* +
false, 1
)1 2
;2 3
} 	
private 
void 
UpdateProgress #
(# $
)$ %
{ 	
if 
( 
parent 
== 
null 
) 
return 
; 
parent!! 
.!! 
	transform!! 
.!! 
rotation!! %
=!!& '

Quaternion!!( 2
.!!2 3
Euler!!3 8
(!!8 9
$num!!9 :
,!!: ;
$num!!< =
,!!= >
rotation!!? G
)!!G H
;!!H I
rotation"" 
+="" 
$num"" 
;"" 
if## 
(## 
rotation## 
>## 
$num## 
)## 
rotation$$ 
-=$$ 
$num$$ 
;$$  
}%% 	
public'' 
void'' 
Start'' 
('' 
)'' 
{(( 	
if)) 
()) 
Started)) 
))) 
return** 
;** 
rotation,, 
=,, 
$num,, 
;,, 
EditorApplication.. 
... 
update.. $
+=..% '
UpdateProgress..( 6
;..6 7
Started00 
=00 
true00 
;00 
UIUtils11 
.11 
SetElementDisplay11 %
(11% &
this11& *
,11* +
true11, 0
)110 1
;111 2
}22 	
public44 
void44 
Stop44 
(44 
)44 
{55 	
if66 
(66 
!66 
Started66 
)66 
return77 
;77 
EditorApplication99 
.99 
update99 $
-=99% '
UpdateProgress99( 6
;996 7
Started;; 
=;; 
false;; 
;;; 
UIUtils<< 
.<< 
SetElementDisplay<< %
(<<% &
this<<& *
,<<* +
false<<, 1
)<<1 2
;<<2 3
}== 	
}>> 
}?? õ
çC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\UI\Common\UIUtils.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
static 
class 
UIUtils !
{ 
private 
const 
string 
DisplayNone (
=) *
$str+ 9
;9 :
internal		 
static		 
void		 
SetElementDisplay		 .
(		. /
VisualElement		/ <
element		= D
,		D E
bool		F J
value		K P
)		P Q
{

 	
if 
( 
value 
) 
element 
. 
RemoveFromClassList +
(+ ,
DisplayNone, 7
)7 8
;8 9
else 
element 
. 
AddToClassList &
(& '
DisplayNone' 2
)2 3
;3 4
element 
. 
visible 
= 
value #
;# $
} 	
internal 
static 
void %
SetElementDisplayNonEmpty 6
(6 7
Label7 <
element= D
)D E
{ 	
if 
( 
element 
== 
null 
)  
return 
; 
var 
empty 
= 
string 
. 
IsNullOrEmpty ,
(, -
element- 4
.4 5
text5 9
)9 :
;: ;
if 
( 
empty 
) 
element 
. 
AddToClassList &
(& '
DisplayNone' 2
)2 3
;3 4
else 
element 
. 
RemoveFromClassList +
(+ ,
DisplayNone, 7
)7 8
;8 9
element 
. 
visible 
= 
! 
empty $
;$ %
} 	
internal!! 
static!! 
bool!! 
IsElementVisible!! -
(!!- .
VisualElement!!. ;
element!!< C
)!!C D
{"" 	
return## 
element## 
.## 
visible## "
&&### %
!##& '
element##' .
.##. /
ClassListContains##/ @
(##@ A
DisplayNone##A L
)##L M
;##M N
}$$ 	
}%% 
}&& úê
çC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\UI\PackageDetails.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
class !
PackageDetailsFactory (
:) *
UxmlFactory+ 6
<6 7
PackageDetails7 E
>E F
{		 
	protected

 
override

 
PackageDetails

 )
DoCreate

* 2
(

2 3
IUxmlAttributes

3 B
bag

C F
,

F G
CreationContext

H W
cc

X Z
)

Z [
{ 	
return 
new 
PackageDetails %
(% &
)& '
;' (
} 	
} 
internal 
class 
PackageDetails !
:" #
VisualElement$ 1
{ 
internal 
static 

PackageTag "
[" #
]# $
SupportedTags% 2
(2 3
)3 4
{ 	
return 
new 

PackageTag !
[! "
]" #
{$ %

PackageTag& 0
.0 1
preview1 8
}9 :
;: ;
} 	
private 
readonly 
VisualElement &
root' +
;+ ,
private 
Package 
package 
;  
private 
PackageFilter 
filter $
;$ %
private 
const 
string 
emptyId $
=% &
$str' 2
;2 3
private 
const 
string !
emptyDescriptionClass 2
=3 4
$str5 <
;< =
private 
enum 
PackageAction "
{ 	
Add 
, 
Remove   
,   
Update!! 
,!! 
	Downgrade"" 
,"" 
Enable## 
,## 
Disable$$ 
}%% 	
private'' 
static'' 
readonly'' 
string''  &
[''& '
]''' (
PackageActionVerbs'') ;
=''< =
{''> ?
$str''@ I
,''I J
$str''K S
,''S T
$str''U `
,''` a
$str''b n
,''n o
$str''p x
,''x y
$str	''z É
}
''Ñ Ö
;
''Ö Ü
private(( 
static(( 
readonly(( 
string((  &
[((& '
]((' ((
PackageActionInProgressVerbs(() E
=((F G
{((H I
$str((J V
,((V W
$str((X b
,((b c
$str((d q
,((q r
$str	((s Ç
,
((Ç É
$str
((Ñ é
,
((é è
$str
((ê õ
}
((ú ù
;
((ù û
public** 
PackageDetails** 
(** 
)** 
{++ 	
root,, 
=,, 
	Resources,, 
.,, 
Load,, !
<,,! "
VisualTreeAsset,," 1
>,,1 2
(,,2 3
$str,,3 M
),,M N
.,,N O
	CloneTree,,O X
(,,X Y
null,,Y ]
),,] ^
;,,^ _
Add-- 
(-- 
root-- 
)-- 
;-- 
root.. 
... 
StretchToParentSize.. $
(..$ %
)..% &
;..& '
SetUpdateVisibility00 
(00  
false00  %
)00% &
;00& '
RemoveButton11 
.11 
visible11  
=11! "
false11# (
;11( )
root22 
.22 
Q22 
<22 
VisualElement22  
>22  !
(22! "
emptyId22" )
)22) *
.22* +
visible22+ 2
=223 4
false225 :
;22: ;
UpdateButton44 
.44 
	clickable44 "
.44" #
clicked44# *
+=44+ -
UpdateClick44. 9
;449 :
RemoveButton55 
.55 
	clickable55 "
.55" #
clicked55# *
+=55+ -
RemoveClick55. 9
;559 :
ViewDocButton66 
.66 
	clickable66 #
.66# $
clicked66$ +
+=66, .
ViewDocClick66/ ;
;66; <
ViewChangelogButton77 
.77  
	clickable77  )
.77) *
clicked77* 1
+=772 4
ViewChangelogClick775 G
;77G H
ViewChangelogButton88 
.88  
parent88  &
.88& '
clippingOptions88' 6
=887 8
ClippingOptions889 H
.88H I

NoClipping88I S
;88S T
ViewChangelogButton99 
.99  
parent99  &
.99& '
parent99' -
.99- .
clippingOptions99. =
=99> ?
ClippingOptions99@ O
.99O P

NoClipping99P Z
;99Z [
PackageCollection;; 
.;; 
Instance;; &
.;;& '
OnFilterChanged;;' 6
+=;;7 9
OnFilterChanged;;: I
;;;I J
}<< 	
private>> 
void>> 
SetUpdateVisibility>> (
(>>( )
bool>>) -
value>>. 3
)>>3 4
{?? 	
if@@ 
(@@ 
UpdateContainer@@ 
!=@@  "
null@@# '
)@@' (
UIUtilsAA 
.AA 
SetElementDisplayAA )
(AA) *
UpdateContainerAA* 9
,AA9 :
valueAA; @
)AA@ A
;AAA B
}BB 	
publicEE 
PackageInfoEE 
DisplayEE "
(EE" #
PackageEE# *
packageEE+ 2
)EE2 3
{FF 	
returnGG 
PackageCollectionGG $
.GG$ %
InstanceGG% -
.GG- .
FilterGG. 4
==GG5 7
PackageFilterGG8 E
.GGE F
AllGGF I
||GGJ L
packageGGM T
.GGT U
CurrentGGU \
==GG] _
nullGG` d
?GGe f
packageGGg n
.GGn o
LatestGGo u
:GGv w
packageGGx 
.	GG Ä
Current
GGÄ á
;
GGá à
}HH 	
privateJJ 
voidJJ 
OnFilterChangedJJ $
(JJ$ %
PackageFilterJJ% 2
objJJ3 6
)JJ6 7
{KK 	
rootLL 
.LL 
QLL 
<LL 
VisualElementLL  
>LL  !
(LL! "
emptyIdLL" )
)LL) *
.LL* +
visibleLL+ 2
=LL3 4
falseLL5 :
;LL: ;
}MM 	
publicOO 
voidOO 

SetPackageOO 
(OO 
PackageOO &
packageOO' .
,OO. /
PackageFilterOO0 =
filterOO> D
)OOD E
{PP 	
ifQQ 
(QQ 
thisQQ 
.QQ 
packageQQ 
!=QQ 
nullQQ  $
)QQ$ %
{RR 
ifSS 
(SS 
thisSS 
.SS 
packageSS  
.SS  !
	AddSignalSS! *
.SS* +
	OperationSS+ 4
!=SS5 7
nullSS8 <
)SS< =
{TT 
thisUU 
.UU 
packageUU  
.UU  !
	AddSignalUU! *
.UU* +
	OperationUU+ 4
.UU4 5
OnOperationErrorUU5 E
-=UUF H
OnAddOperationErrorUUI \
;UU\ ]
thisVV 
.VV 
packageVV  
.VV  !
	AddSignalVV! *
.VV* +
	OperationVV+ 4
.VV4 5
OnOperationSuccessVV5 G
-=VVH J!
OnAddOperationSuccessVVK `
;VV` a
}WW 
ifYY 
(YY 
thisYY 
.YY 
packageYY  
.YY  !
RemoveSignalYY! -
.YY- .
	OperationYY. 7
!=YY8 :
nullYY; ?
)YY? @
{ZZ 
this[[ 
.[[ 
package[[  
.[[  !
RemoveSignal[[! -
.[[- .
	Operation[[. 7
.[[7 8
OnOperationError[[8 H
-=[[I K"
OnRemoveOperationError[[L b
;[[b c
}\\ 
}]] 
this__ 
.__ 
filter__ 
=__ 
filter__  
;__  !
this`` 
.`` 
package`` 
=`` 
package`` "
;``" #
varaa 
detailVisibleaa 
=aa 
trueaa  $
;aa$ %
Errorbb 
errorbb 
=bb 
nullbb 
;bb 
ifdd 
(dd 
packagedd 
==dd 
nulldd 
||dd  "
Displaydd# *
(dd* +
packagedd+ 2
)dd2 3
==dd4 6
nulldd7 ;
)dd; <
{ee 
detailVisibleff 
=ff 
falseff  %
;ff% &
UIUtilsgg 
.gg 
SetElementDisplaygg )
(gg) *
ViewChangelogButtongg* =
,gg= >
falsegg? D
)ggD E
;ggE F
UIUtilshh 
.hh 
SetElementDisplayhh )
(hh) *
ViewDocButtonhh* 7
,hh7 8
falsehh9 >
)hh> ?
;hh? @
}ii 
elsejj 
{kk 
SetUpdateVisibilityll #
(ll# $
truell$ (
)ll( )
;ll) *
RemoveButtonmm 
.mm 
visiblemm $
=mm% &
truemm' +
;mm+ ,
varoo 
displayPackageoo "
=oo# $
Displayoo% ,
(oo, -
packageoo- 4
)oo4 5
;oo5 6
ifqq 
(qq 
stringqq 
.qq 
IsNullOrEmptyqq (
(qq( )
displayPackageqq) 7
.qq7 8
Descriptionqq8 C
)qqC D
)qqD E
{rr 

DetailDescss 
.ss 
textss #
=ss$ %
$strss& Q
;ssQ R

DetailDesctt 
.tt 
AddToClassListtt -
(tt- .!
emptyDescriptionClasstt. C
)ttC D
;ttD E
}uu 
elsevv 
{ww 

DetailDescxx 
.xx 
textxx #
=xx$ %
displayPackagexx& 4
.xx4 5
Descriptionxx5 @
;xx@ A

DetailDescyy 
.yy 
RemoveFromClassListyy 2
(yy2 3!
emptyDescriptionClassyy3 H
)yyH I
;yyI J
}zz 
root|| 
.|| 
Q|| 
<|| 
Label|| 
>|| 
(|| 
$str|| +
)||+ ,
.||, -
text||- 1
=||2 3
displayPackage||4 B
.||B C
DisplayName||C N
;||N O
DetailVersion}} 
.}} 
text}} "
=}}# $
$str}}% /
+}}0 1
displayPackage}}2 @
.}}@ A
VersionWithoutTag}}A R
;}}R S
if 
( 
displayPackage "
." #
HasTag# )
() *

PackageTag* 4
.4 5
preview5 <
)< =
)= >
UIUtils
ÄÄ 
.
ÄÄ 
SetElementDisplay
ÄÄ -
(
ÄÄ- .
GetTag
ÄÄ. 4
(
ÄÄ4 5

PackageTag
ÄÄ5 ?
.
ÄÄ? @
verified
ÄÄ@ H
)
ÄÄH I
,
ÄÄI J
false
ÄÄK P
)
ÄÄP Q
;
ÄÄQ R
else
ÅÅ 
{
ÇÇ 
var
ÉÉ 
unityVersionParts
ÉÉ )
=
ÉÉ* +
Application
ÉÉ, 7
.
ÉÉ7 8
unityVersion
ÉÉ8 D
.
ÉÉD E
Split
ÉÉE J
(
ÉÉJ K
$char
ÉÉK N
)
ÉÉN O
;
ÉÉO P
var
ÑÑ 
unityVersion
ÑÑ $
=
ÑÑ% &
string
ÑÑ' -
.
ÑÑ- .
Format
ÑÑ. 4
(
ÑÑ4 5
$str
ÑÑ5 >
,
ÑÑ> ?
unityVersionParts
ÑÑ@ Q
[
ÑÑQ R
$num
ÑÑR S
]
ÑÑS T
,
ÑÑT U
unityVersionParts
ÑÑV g
[
ÑÑg h
$num
ÑÑh i
]
ÑÑi j
)
ÑÑj k
;
ÑÑk l
VerifyLabel
ÖÖ 
.
ÖÖ  
text
ÖÖ  $
=
ÖÖ% &
unityVersion
ÖÖ' 3
+
ÖÖ4 5
$str
ÖÖ6 A
;
ÖÖA B
UIUtils
ÜÜ 
.
ÜÜ 
SetElementDisplay
ÜÜ -
(
ÜÜ- .
GetTag
ÜÜ. 4
(
ÜÜ4 5

PackageTag
ÜÜ5 ?
.
ÜÜ? @
verified
ÜÜ@ H
)
ÜÜH I
,
ÜÜI J
displayPackage
ÜÜK Y
.
ÜÜY Z

IsVerified
ÜÜZ d
)
ÜÜd e
;
ÜÜe f
}
áá 
foreach
ââ 
(
ââ 
var
ââ 
tag
ââ  
in
ââ! #
SupportedTags
ââ$ 1
(
ââ1 2
)
ââ2 3
)
ââ3 4
UIUtils
ää 
.
ää 
SetElementDisplay
ää -
(
ää- .
GetTag
ää. 4
(
ää4 5
tag
ää5 8
)
ää8 9
,
ää9 :
displayPackage
ää; I
.
ääI J
HasTag
ääJ P
(
ääP Q
tag
ääQ T
)
ääT U
)
ääU V
;
ääV W
if
åå 
(
åå 
Display
åå 
(
åå 
package
åå #
)
åå# $
.
åå$ %
Origin
åå% +
==
åå, .
PackageOrigin
åå/ <
.
åå< =
Builtin
åå= D
)
ååD E
{
çç 
UIUtils
éé 
.
éé 
SetElementDisplay
éé -
(
éé- .!
ViewChangelogButton
éé. A
,
ééA B
false
ééC H
)
ééH I
;
ééI J
UIUtils
èè 
.
èè 
SetElementDisplay
èè -
(
èè- .
ViewDocButton
èè. ;
,
èè; <
false
èè= B
)
èèB C
;
èèC D
}
êê 
else
ëë 
{
íí 
var
ìì 
currentVersion
ìì &
=
ìì' (
package
ìì) 0
.
ìì0 1
Current
ìì1 8
;
ìì8 9
var
îî 
	hasUpdate
îî !
=
îî" #
currentVersion
îî$ 2
!=
îî3 5
null
îî6 :
&&
îî; =
displayPackage
îî> L
.
îîL M
Version
îîM T
.
îîT U!
CompareByPrecedence
îîU h
(
îîh i
currentVersion
îîi w
.
îîw x
Version
îîx 
)îî Ä
>îîÅ Ç
$numîîÉ Ñ
;îîÑ Ö
UIUtils
ïï 
.
ïï 
SetElementDisplay
ïï -
(
ïï- .!
ViewChangelogButton
ïï. A
,
ïïA B
displayPackage
ïïC Q
.
ïïQ R
	IsCurrent
ïïR [
||
ïï\ ^
	hasUpdate
ïï_ h
)
ïïh i
;
ïïi j
UIUtils
ññ 
.
ññ 
SetElementDisplay
ññ -
(
ññ- .
ViewDocButton
ññ. ;
,
ññ; <
true
ññ= A
)
ññA B
;
ññB C
}
óó 
root
ôô 
.
ôô 
Q
ôô 
<
ôô 
Label
ôô 
>
ôô 
(
ôô 
$str
ôô *
)
ôô* +
.
ôô+ ,
text
ôô, 0
=
ôô1 2
displayPackage
ôô3 A
.
ôôA B
Name
ôôB F
;
ôôF G
root
öö 
.
öö 
Q
öö 
<
öö 

ScrollView
öö !
>
öö! "
(
öö" #
$str
öö# /
)
öö/ 0
.
öö0 1
scrollOffset
öö1 =
=
öö> ?
new
öö@ C
Vector2
ööD K
(
ööK L
$num
ööL M
,
ööM N
$num
ööO P
)
ööP Q
;
ööQ R#
DetailModuleReference
úú %
.
úú% &
text
úú& *
=
úú+ ,
$str
úú- /
;
úú/ 0
var
ùù 
isModule
ùù 
=
ùù 
PackageInfo
ùù *
.
ùù* +
IsModule
ùù+ 3
(
ùù3 4
displayPackage
ùù4 B
.
ùùB C
Name
ùùC G
)
ùùG H
;
ùùH I
if
ûû 
(
ûû 
PackageInfo
ûû 
.
ûû  
IsModule
ûû  (
(
ûû( )
displayPackage
ûû) 7
.
ûû7 8
Name
ûû8 <
)
ûû< =
)
ûû= >
{
üü #
DetailModuleReference
†† )
.
††) *
text
††* .
=
††/ 0
displayPackage
††1 ?
.
††? @
Description
††@ K
;
††K L
if
°° 
(
°° 
string
°° 
.
°° 
IsNullOrEmpty
°° ,
(
°°, -
displayPackage
°°- ;
.
°°; <
Description
°°< G
)
°°G H
)
°°H I#
DetailModuleReference
¢¢ -
.
¢¢- .
text
¢¢. 2
=
¢¢3 4
string
¢¢5 ;
.
¢¢; <
Format
¢¢< B
(
¢¢B C
$str¢¢C É
,¢¢É Ñ
displayPackage¢¢Ö ì
.¢¢ì î

ModuleName¢¢î û
)¢¢û ü
;¢¢ü †
}
££ !
DetailPackageStatus
¶¶ #
.
¶¶# $
text
¶¶$ (
=
¶¶) *
string
¶¶+ 1
.
¶¶1 2
Empty
¶¶2 7
;
¶¶7 8
if
ßß 
(
ßß 
!
ßß 
isModule
ßß 
)
ßß 
{
®® 
var
©©  
displayPackageList
©© *
=
©©+ ,
package
©©- 4
.
©©4 5
Current
©©5 <
??
©©= ?
package
©©@ G
.
©©G H
Latest
©©H N
;
©©N O
if
™™ 
(
™™  
displayPackageList
™™ *
.
™™* +
State
™™+ 0
==
™™1 3
PackageState
™™4 @
.
™™@ A
Outdated
™™A I
)
™™I J
{
´´ !
DetailPackageStatus
¨¨ +
.
¨¨+ ,
text
¨¨, 0
=
¨¨1 2
$str
≠≠ e
;
≠≠e f
}
ÆÆ 
else
ØØ 
if
ØØ 
(
ØØ  
displayPackageList
ØØ /
.
ØØ/ 0
State
ØØ0 5
==
ØØ6 8
PackageState
ØØ9 E
.
ØØE F

InProgress
ØØF P
)
ØØP Q
{
∞∞ !
DetailPackageStatus
±± +
.
±±+ ,
text
±±, 0
=
±±1 2
$str
≤≤ I
;
≤≤I J
}
≥≥ 
else
¥¥ 
if
¥¥ 
(
¥¥  
displayPackageList
¥¥ /
.
¥¥/ 0
State
¥¥0 5
==
¥¥6 8
PackageState
¥¥9 E
.
¥¥E F
Error
¥¥F K
)
¥¥K L
{
µµ !
DetailPackageStatus
∂∂ +
.
∂∂+ ,
text
∂∂, 0
=
∂∂1 2
$str
∑∑ c
;
∑∑c d
}
∏∏ 
else
ππ 
if
ππ 
(
ππ  
displayPackageList
ππ /
.
ππ/ 0
	IsCurrent
ππ0 9
)
ππ9 :
{
∫∫ !
DetailPackageStatus
ªª +
.
ªª+ ,
text
ªª, 0
=
ªª1 2
$str
ºº I
;
ººI J
}
ΩΩ 
else
ææ 
{
øø !
DetailPackageStatus
¿¿ +
.
¿¿+ ,
text
¿¿, 0
=
¿¿1 2
$str
¡¡ M
;
¡¡M N
}
¬¬ 
}
√√ 
DetailAuthor
≈≈ 
.
≈≈ 
text
≈≈ !
=
≈≈" #
string
≈≈$ *
.
≈≈* +
Format
≈≈+ 1
(
≈≈1 2
$str
≈≈2 ?
,
≈≈? @
displayPackage
≈≈A O
.
≈≈O P
Author
≈≈P V
??
≈≈W Y
$str
≈≈Z s
)
≈≈s t
;
≈≈t u
UIUtils
«« 
.
«« 
SetElementDisplay
«« )
(
««) *

DetailDesc
««* 4
,
««4 5
!
««6 7
isModule
««7 ?
)
««? @
;
««@ A
UIUtils
»» 
.
»» 
SetElementDisplay
»» )
(
»») *
DetailVersion
»»* 7
,
»»7 8
!
»»9 :
isModule
»»: B
)
»»B C
;
»»C D
UIUtils
…… 
.
…… '
SetElementDisplayNonEmpty
…… 1
(
……1 2#
DetailModuleReference
……2 G
)
……G H
;
……H I
UIUtils
   
.
   '
SetElementDisplayNonEmpty
   1
(
  1 2!
DetailPackageStatus
  2 E
)
  E F
;
  F G
UIUtils
ÀÀ 
.
ÀÀ '
SetElementDisplayNonEmpty
ÀÀ 1
(
ÀÀ1 2
DetailAuthor
ÀÀ2 >
)
ÀÀ> ?
;
ÀÀ? @
if
ÕÕ 
(
ÕÕ 
displayPackage
ÕÕ "
.
ÕÕ" #
Errors
ÕÕ# )
.
ÕÕ) *
Count
ÕÕ* /
>
ÕÕ0 1
$num
ÕÕ2 3
)
ÕÕ3 4
error
ŒŒ 
=
ŒŒ 
displayPackage
ŒŒ *
.
ŒŒ* +
Errors
ŒŒ+ 1
.
ŒŒ1 2
First
ŒŒ2 7
(
ŒŒ7 8
)
ŒŒ8 9
;
ŒŒ9 :
RefreshAddButton
––  
(
––  !
)
––! "
;
––" #!
RefreshRemoveButton
—— #
(
——# $
)
——$ %
;
——% &
this
”” 
.
”” 
package
”” 
.
”” 
	AddSignal
”” &
.
””& '
OnOperation
””' 2
+=
””3 5
OnAddOperation
””6 D
;
””D E
this
‘‘ 
.
‘‘ 
package
‘‘ 
.
‘‘ 
RemoveSignal
‘‘ )
.
‘‘) *
OnOperation
‘‘* 5
+=
‘‘6 8
OnRemoveOperation
‘‘9 J
;
‘‘J K
}
’’ 
root
ÿÿ 
.
ÿÿ 
Q
ÿÿ 
<
ÿÿ 
VisualElement
ÿÿ  
>
ÿÿ  !
(
ÿÿ! "
$str
ÿÿ" *
)
ÿÿ* +
.
ÿÿ+ ,
visible
ÿÿ, 3
=
ÿÿ4 5
detailVisible
ÿÿ6 C
;
ÿÿC D
root
ŸŸ 
.
ŸŸ 
Q
ŸŸ 
<
ŸŸ 
VisualElement
ŸŸ  
>
ŸŸ  !
(
ŸŸ! "
emptyId
ŸŸ" )
)
ŸŸ) *
.
ŸŸ* +
visible
ŸŸ+ 2
=
ŸŸ3 4
!
ŸŸ5 6
detailVisible
ŸŸ6 C
;
ŸŸC D
if
€€ 
(
€€ 
error
€€ 
!=
€€ 
null
€€ 
)
€€ 
{
‹‹ 
Debug
›› 
.
›› 
LogError
›› 
(
›› 
$str
›› =
+
››> ?
error
››@ E
.
››E F
message
››F M
)
››M N
;
››N O
SetError
ﬁﬁ 
(
ﬁﬁ 
error
ﬁﬁ 
)
ﬁﬁ 
;
ﬁﬁ  
}
ﬂﬂ 
else
‡‡ 
DetailError
·· 
.
·· 

ClearError
·· &
(
··& '
)
··' (
;
··( )
}
‚‚ 	
private
‰‰ 
void
‰‰ 
OnAddOperation
‰‰ #
(
‰‰# $
IAddOperation
‰‰$ 1
	operation
‰‰2 ;
)
‰‰; <
{
ÂÂ 	
	operation
ÊÊ 
.
ÊÊ 
OnOperationError
ÊÊ &
+=
ÊÊ' )!
OnAddOperationError
ÊÊ* =
;
ÊÊ= >
	operation
ÁÁ 
.
ÁÁ  
OnOperationSuccess
ÁÁ (
+=
ÁÁ) +#
OnAddOperationSuccess
ÁÁ, A
;
ÁÁA B
}
ËË 	
private
ÍÍ 
void
ÍÍ !
OnAddOperationError
ÍÍ (
(
ÍÍ( )
Error
ÍÍ) .
error
ÍÍ/ 4
)
ÍÍ4 5
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ 
package
ÏÏ 
!=
ÏÏ 
null
ÏÏ 
&&
ÏÏ  "
package
ÏÏ# *
.
ÏÏ* +
	AddSignal
ÏÏ+ 4
.
ÏÏ4 5
	Operation
ÏÏ5 >
!=
ÏÏ? A
null
ÏÏB F
)
ÏÏF G
{
ÌÌ 
package
ÓÓ 
.
ÓÓ 
	AddSignal
ÓÓ !
.
ÓÓ! "
	Operation
ÓÓ" +
.
ÓÓ+ , 
OnOperationSuccess
ÓÓ, >
-=
ÓÓ? A#
OnAddOperationSuccess
ÓÓB W
;
ÓÓW X
package
ÔÔ 
.
ÔÔ 
	AddSignal
ÔÔ !
.
ÔÔ! "
	Operation
ÔÔ" +
.
ÔÔ+ ,
OnOperationError
ÔÔ, <
-=
ÔÔ= ?!
OnAddOperationError
ÔÔ@ S
;
ÔÔS T
package
 
.
 
	AddSignal
 !
.
! "
	Operation
" +
=
, -
null
. 2
;
2 3
}
ÒÒ 
SetError
ÛÛ 
(
ÛÛ 
error
ÛÛ 
)
ÛÛ 
;
ÛÛ 
RefreshAddButton
ÙÙ 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
}
ıı 	
private
˜˜ 
void
˜˜ 
SetError
˜˜ 
(
˜˜ 
Error
˜˜ #
error
˜˜$ )
)
˜˜) *
{
¯¯ 	
DetailError
˘˘ 
.
˘˘ 

AdjustSize
˘˘ "
(
˘˘" #

DetailView
˘˘# -
.
˘˘- .
verticalScroller
˘˘. >
.
˘˘> ?
visible
˘˘? F
)
˘˘F G
;
˘˘G H
DetailError
˙˙ 
.
˙˙ 
SetError
˙˙  
(
˙˙  !
error
˙˙! &
)
˙˙& '
;
˙˙' (
}
˚˚ 	
private
˝˝ 
void
˝˝ #
OnAddOperationSuccess
˝˝ *
(
˝˝* +
PackageInfo
˝˝+ 6
packageInfo
˝˝7 B
)
˝˝B C
{
˛˛ 	
if
ˇˇ 
(
ˇˇ 
package
ˇˇ 
!=
ˇˇ 
null
ˇˇ 
&&
ˇˇ  "
package
ˇˇ# *
.
ˇˇ* +
	AddSignal
ˇˇ+ 4
.
ˇˇ4 5
	Operation
ˇˇ5 >
!=
ˇˇ? A
null
ˇˇB F
)
ˇˇF G
{
ÄÄ 
package
ÅÅ 
.
ÅÅ 
	AddSignal
ÅÅ !
.
ÅÅ! "
	Operation
ÅÅ" +
.
ÅÅ+ , 
OnOperationSuccess
ÅÅ, >
-=
ÅÅ? A#
OnAddOperationSuccess
ÅÅB W
;
ÅÅW X
package
ÇÇ 
.
ÇÇ 
	AddSignal
ÇÇ !
.
ÇÇ! "
	Operation
ÇÇ" +
.
ÇÇ+ ,
OnOperationError
ÇÇ, <
-=
ÇÇ= ?!
OnAddOperationError
ÇÇ@ S
;
ÇÇS T
}
ÉÉ 
PackageCollection
ÖÖ 
.
ÖÖ 
Instance
ÖÖ &
.
ÖÖ& '
	SetFilter
ÖÖ' 0
(
ÖÖ0 1
PackageFilter
ÖÖ1 >
.
ÖÖ> ?
Local
ÖÖ? D
)
ÖÖD E
;
ÖÖE F
}
ÜÜ 	
private
àà 
void
àà 
OnRemoveOperation
àà &
(
àà& '
IRemoveOperation
àà' 7
	operation
àà8 A
)
ààA B
{
ââ 	
	operation
ää 
.
ää 
OnOperationError
ää &
-=
ää' )$
OnRemoveOperationError
ää* @
;
ää@ A
	operation
ãã 
.
ãã 
OnOperationError
ãã &
+=
ãã' )$
OnRemoveOperationError
ãã* @
;
ãã@ A
}
åå 	
private
éé 
void
éé $
OnRemoveOperationError
éé +
(
éé+ ,
Error
éé, 1
error
éé2 7
)
éé7 8
{
èè 	
if
êê 
(
êê 
package
êê 
.
êê 
RemoveSignal
êê $
.
êê$ %
	Operation
êê% .
!=
êê/ 1
null
êê2 6
)
êê6 7
{
ëë 
package
íí 
.
íí 
RemoveSignal
íí $
.
íí$ %
	Operation
íí% .
.
íí. /
OnOperationError
íí/ ?
-=
íí@ B$
OnRemoveOperationError
ííC Y
;
ííY Z
package
ìì 
.
ìì 
RemoveSignal
ìì $
.
ìì$ %
	Operation
ìì% .
=
ìì/ 0
null
ìì1 5
;
ìì5 6
}
îî 
SetError
ññ 
(
ññ 
error
ññ 
)
ññ 
;
ññ !
RefreshRemoveButton
óó 
(
óó  
)
óó  !
;
óó! "
}
òò 	
private
öö 
void
öö 
RefreshAddButton
öö %
(
öö% &
)
öö& '
{
õõ 	
var
úú 
displayPackage
úú 
=
úú  
Display
úú! (
(
úú( )
package
úú) 0
)
úú0 1
;
úú1 2
var
ùù 
visibleFlag
ùù 
=
ùù 
false
ùù #
;
ùù# $
var
ûû 
actionLabel
ûû 
=
ûû 
$str
ûû  
;
ûû  !
var
üü 
enableButton
üü 
=
üü 
true
üü #
;
üü# $
if
°° 
(
°° 
package
°° 
.
°° 
	AddSignal
°° !
.
°°! "
	Operation
°°" +
!=
°°, .
null
°°/ 3
&&
°°4 6
displayPackage
°°7 E
.
°°E F
Origin
°°F L
==
°°M O
PackageOrigin
°°P ]
.
°°] ^
Builtin
°°^ e
)
°°e f
{
¢¢ 
actionLabel
££ 
=
££ 
GetButtonText
££ +
(
££+ ,
PackageAction
££, 9
.
££9 :
Enable
££: @
,
££@ A
true
££B F
)
££F G
;
££G H
enableButton
§§ 
=
§§ 
false
§§ $
;
§§$ %
visibleFlag
•• 
=
•• 
true
•• "
;
••" #
}
¶¶ 
else
ßß 
if
ßß 
(
ßß 
package
ßß 
.
ßß 
	AddSignal
ßß &
.
ßß& '
	Operation
ßß' 0
!=
ßß1 3
null
ßß4 8
&&
ßß9 ;
displayPackage
ßß< J
.
ßßJ K
Origin
ßßK Q
!=
ßßR T
PackageOrigin
ßßU b
.
ßßb c
Builtin
ßßc j
)
ßßj k
{
®® 
var
©© 
version
©© 
=
©© 
package
©© %
.
©©% &
	AddSignal
©©& /
.
©©/ 0
	Operation
©©0 9
.
©©9 :
PackageInfo
©©: E
.
©©E F
Version
©©F M
;
©©M N
if
™™ 
(
™™ 
!
™™ 
displayPackage
™™ #
.
™™# $
	IsCurrent
™™$ -
)
™™- .
{
´´ 
actionLabel
¨¨ 
=
¨¨  !
GetButtonText
¨¨" /
(
¨¨/ 0
PackageAction
¨¨0 =
.
¨¨= >
Add
¨¨> A
,
¨¨A B
true
¨¨C G
,
¨¨G H
version
¨¨I P
)
¨¨P Q
;
¨¨Q R
}
≠≠ 
else
ÆÆ 
{
ØØ 
var
∞∞ 
currentVersion
∞∞ &
=
∞∞' (
package
∞∞) 0
.
∞∞0 1
Current
∞∞1 8
.
∞∞8 9
Version
∞∞9 @
;
∞∞@ A
var
±± 
action
±± 
=
±±  
version
±±! (
.
±±( )!
CompareByPrecedence
±±) <
(
±±< =
currentVersion
±±= K
)
±±K L
>
±±M N
$num
±±O P
?
≤≤ 
PackageAction
≤≤ '
.
≤≤' (
Update
≤≤( .
:
≥≥ 
PackageAction
≥≥ '
.
≥≥' (
	Downgrade
≥≥( 1
;
≥≥1 2
actionLabel
µµ 
=
µµ  !
GetButtonText
µµ" /
(
µµ/ 0
action
µµ0 6
,
µµ6 7
true
µµ8 <
,
µµ< =
version
µµ> E
)
µµE F
;
µµF G
}
∂∂ 
enableButton
∏∏ 
=
∏∏ 
false
∏∏ $
;
∏∏$ %
visibleFlag
ππ 
=
ππ 
true
ππ "
;
ππ" #
}
∫∫ 
else
ªª 
if
ªª 
(
ªª 
package
ªª 
.
ªª 
Current
ªª $
!=
ªª% '
null
ªª( ,
&&
ªª- /
package
ªª0 7
.
ªª7 8
Latest
ªª8 >
!=
ªª? A
null
ªªB F
&&
ªªG I
package
ªªJ Q
.
ªªQ R
Latest
ªªR X
.
ªªX Y
Version
ªªY `
!=
ªªa c
package
ªªd k
.
ªªk l
Current
ªªl s
.
ªªs t
Version
ªªt {
)
ªª{ |
{
ºº 
var
ΩΩ 
version
ΩΩ 
=
ΩΩ 
package
ΩΩ %
.
ΩΩ% &
Latest
ΩΩ& ,
.
ΩΩ, -
Version
ΩΩ- 4
;
ΩΩ4 5
var
ææ 
currentVersion
ææ "
=
ææ# $
package
ææ% ,
.
ææ, -
Current
ææ- 4
.
ææ4 5
Version
ææ5 <
;
ææ< =
var
øø 
action
øø 
=
øø 
version
øø $
.
øø$ %!
CompareByPrecedence
øø% 8
(
øø8 9
currentVersion
øø9 G
)
øøG H
>
øøI J
$num
øøK L
?
¿¿ 
PackageAction
¿¿ #
.
¿¿# $
Update
¿¿$ *
:
¡¡ 
PackageAction
¡¡ #
.
¡¡# $
	Downgrade
¡¡$ -
;
¡¡- .
actionLabel
¬¬ 
=
¬¬ 
GetButtonText
¬¬ +
(
¬¬+ ,
action
¬¬, 2
,
¬¬2 3
false
¬¬4 9
,
¬¬9 :
version
¬¬; B
)
¬¬B C
;
¬¬C D
visibleFlag
√√ 
=
√√ 
true
√√ "
;
√√" #
}
ƒƒ 
else
≈≈ 
if
≈≈ 
(
≈≈ 
package
≈≈ 
.
≈≈ 
Current
≈≈ $
==
≈≈% '
null
≈≈( ,
&&
≈≈- /
package
≈≈0 7
.
≈≈7 8
Versions
≈≈8 @
.
≈≈@ A
Any
≈≈A D
(
≈≈D E
)
≈≈E F
)
≈≈F G
{
∆∆ 
var
«« 
version
«« 
=
«« 
package
«« %
.
««% &
Latest
««& ,
.
««, -
Version
««- 4
;
««4 5
actionLabel
»» 
=
»» 
displayPackage
»» ,
.
»», -
Origin
»»- 3
==
»»4 6
PackageOrigin
»»7 D
.
»»D E
Builtin
»»E L
?
»»M N
GetButtonText
…… !
(
……! "
PackageAction
……" /
.
……/ 0
Enable
……0 6
)
……6 7
:
……8 9
GetButtonText
   !
(
  ! "
PackageAction
  " /
.
  / 0
Add
  0 3
,
  3 4
false
  5 :
,
  : ;
version
  < C
)
  C D
;
  D E
visibleFlag
ÀÀ 
=
ÀÀ 
true
ÀÀ "
;
ÀÀ" #
}
ÃÃ 
if
ŒŒ 
(
ŒŒ 
package
ŒŒ 
.
ŒŒ 
RemoveSignal
ŒŒ $
.
ŒŒ$ %
	Operation
ŒŒ% .
!=
ŒŒ/ 1
null
ŒŒ2 6
)
ŒŒ6 7
enableButton
œœ 
=
œœ 
false
œœ $
;
œœ$ %
UpdateButton
—— 
.
—— 

SetEnabled
—— #
(
——# $
enableButton
——$ 0
)
——0 1
;
——1 2
UpdateButton
““ 
.
““ 
text
““ 
=
““ 
actionLabel
““  +
;
““+ ,!
SetUpdateVisibility
”” 
(
””  
visibleFlag
””  +
)
””+ ,
;
””, -
}
‘‘ 	
private
÷÷ 
void
÷÷ !
RefreshRemoveButton
÷÷ (
(
÷÷( )
)
÷÷) *
{
◊◊ 	
var
ÿÿ 
displayPackage
ÿÿ 
=
ÿÿ  
Display
ÿÿ! (
(
ÿÿ( )
package
ÿÿ) 0
)
ÿÿ0 1
;
ÿÿ1 2
if
ŸŸ 
(
ŸŸ 
displayPackage
ŸŸ 
==
ŸŸ !
null
ŸŸ" &
)
ŸŸ& '
{
⁄⁄ 
UIUtils
€€ 
.
€€ 
SetElementDisplay
€€ )
(
€€) *
RemoveButton
€€* 6
,
€€6 7
false
€€8 =
)
€€= >
;
€€> ?
return
‹‹ 
;
‹‹ 
}
›› 
var
ﬂﬂ 
visibleFlag
ﬂﬂ 
=
ﬂﬂ 
false
ﬂﬂ #
;
ﬂﬂ# $
var
‡‡ 
actionLabel
‡‡ 
=
‡‡ 
displayPackage
‡‡ ,
.
‡‡, -
Origin
‡‡- 3
==
‡‡4 6
PackageOrigin
‡‡7 D
.
‡‡D E
Builtin
‡‡E L
?
‡‡M N
GetButtonText
·· 
(
·· 
PackageAction
·· +
.
··+ ,
Disable
··, 3
)
··3 4
:
··5 6
GetButtonText
‚‚ 
(
‚‚ 
PackageAction
‚‚ +
.
‚‚+ ,
Remove
‚‚, 2
,
‚‚2 3
false
‚‚4 9
,
‚‚9 :
displayPackage
‚‚; I
.
‚‚I J
Version
‚‚J Q
)
‚‚Q R
;
‚‚R S
var
„„ 
enableButton
„„ 
=
„„ 
false
„„ $
;
„„$ %
if
ÂÂ 
(
ÂÂ 
filter
ÂÂ 
!=
ÂÂ 
PackageFilter
ÂÂ '
.
ÂÂ' (
All
ÂÂ( +
)
ÂÂ+ ,
{
ÊÊ 
visibleFlag
ÁÁ 
=
ÁÁ 
!
ÁÁ 
package
ÁÁ &
.
ÁÁ& ' 
IsPackageManagerUI
ÁÁ' 9
;
ÁÁ9 :
enableButton
ËË 
=
ËË 
!
ËË  
package
ËË  '
.
ËË' ( 
IsPackageManagerUI
ËË( :
;
ËË: ;
if
ÈÈ 
(
ÈÈ 
package
ÈÈ 
.
ÈÈ 
RemoveSignal
ÈÈ (
.
ÈÈ( )
	Operation
ÈÈ) 2
!=
ÈÈ3 5
null
ÈÈ6 :
)
ÈÈ: ;
{
ÍÍ 
actionLabel
ÎÎ 
=
ÎÎ  !
displayPackage
ÎÎ" 0
.
ÎÎ0 1
Origin
ÎÎ1 7
==
ÎÎ8 :
PackageOrigin
ÎÎ; H
.
ÎÎH I
Builtin
ÎÎI P
?
ÎÎQ R
GetButtonText
ÏÏ %
(
ÏÏ% &
PackageAction
ÏÏ& 3
.
ÏÏ3 4
Disable
ÏÏ4 ;
,
ÏÏ; <
true
ÏÏ= A
)
ÏÏA B
:
ÏÏC D
GetButtonText
ÌÌ %
(
ÌÌ% &
PackageAction
ÌÌ& 3
.
ÌÌ3 4
Remove
ÌÌ4 :
,
ÌÌ: ;
true
ÌÌ< @
,
ÌÌ@ A
displayPackage
ÌÌB P
.
ÌÌP Q
Version
ÌÌQ X
)
ÌÌX Y
;
ÌÌY Z
;
ÌÌ[ \
enableButton
ÓÓ  
=
ÓÓ! "
true
ÓÓ# '
;
ÓÓ' (
}
ÔÔ 
}
 
if
ÚÚ 
(
ÚÚ 
package
ÚÚ 
.
ÚÚ 
RemoveSignal
ÚÚ $
.
ÚÚ$ %
	Operation
ÚÚ% .
!=
ÚÚ/ 1
null
ÚÚ2 6
)
ÚÚ6 7
{
ÛÛ 
enableButton
ÙÙ 
=
ÙÙ 
false
ÙÙ $
;
ÙÙ$ %
}
ıı 
RemoveButton
˜˜ 
.
˜˜ 

SetEnabled
˜˜ #
(
˜˜# $
enableButton
˜˜$ 0
)
˜˜0 1
;
˜˜1 2
RemoveButton
¯¯ 
.
¯¯ 
text
¯¯ 
=
¯¯ 
actionLabel
¯¯  +
;
¯¯+ ,
UIUtils
˘˘ 
.
˘˘ 
SetElementDisplay
˘˘ %
(
˘˘% &
RemoveButton
˘˘& 2
,
˘˘2 3
visibleFlag
˘˘4 ?
)
˘˘? @
;
˘˘@ A
}
˙˙ 	
private
¸¸ 
static
¸¸ 
string
¸¸ 
GetButtonText
¸¸ +
(
¸¸+ ,
PackageAction
¸¸, 9
action
¸¸: @
,
¸¸@ A
bool
¸¸B F

inProgress
¸¸G Q
=
¸¸R S
false
¸¸T Y
,
¸¸Y Z

SemVersion
¸¸[ e
version
¸¸f m
=
¸¸n o
null
¸¸p t
)
¸¸t u
{
˝˝ 	
return
˛˛ 
version
˛˛ 
==
˛˛ 
null
˛˛ "
?
˛˛# $
string
ˇˇ 
.
ˇˇ 
Format
ˇˇ 
(
ˇˇ 
$str
ˇˇ #
,
ˇˇ# $

inProgress
ˇˇ% /
?
ˇˇ0 1*
PackageActionInProgressVerbs
ˇˇ2 N
[
ˇˇN O
(
ˇˇO P
int
ˇˇP S
)
ˇˇS T
action
ˇˇT Z
]
ˇˇZ [
:
ˇˇ\ ] 
PackageActionVerbs
ˇˇ^ p
[
ˇˇp q
(
ˇˇq r
int
ˇˇr u
)
ˇˇu v
action
ˇˇv |
]
ˇˇ| }
)
ˇˇ} ~
:ˇˇ Ä
string
ÄÄ 
.
ÄÄ 
Format
ÄÄ 
(
ÄÄ 
$str
ÄÄ '
,
ÄÄ' (

inProgress
ÄÄ) 3
?
ÄÄ4 5*
PackageActionInProgressVerbs
ÄÄ6 R
[
ÄÄR S
(
ÄÄS T
int
ÄÄT W
)
ÄÄW X
action
ÄÄX ^
]
ÄÄ^ _
:
ÄÄ` a 
PackageActionVerbs
ÄÄb t
[
ÄÄt u
(
ÄÄu v
int
ÄÄv y
)
ÄÄy z
actionÄÄz Ä
]ÄÄÄ Å
,ÄÄÅ Ç
versionÄÄÉ ä
)ÄÄä ã
;ÄÄã å
}
ÅÅ 	
private
ÉÉ 
void
ÉÉ 
UpdateClick
ÉÉ  
(
ÉÉ  !
)
ÉÉ! "
{
ÑÑ 	
if
ÖÖ 
(
ÖÖ 
package
ÖÖ 
.
ÖÖ  
IsPackageManagerUI
ÖÖ *
)
ÖÖ* +
{
ÜÜ 
if
áá 
(
áá 
!
áá 
EditorUtility
áá "
.
áá" #
DisplayDialog
áá# 0
(
áá0 1
$str
áá1 3
,
áá3 4
$stráá5 ò
,ááò ô
$strááö ü
,ááü †
$stráá° •
)áá• ¶
)áá¶ ß
return
àà 
;
àà 
if
ää 
(
ää 
package
ää 
.
ää 
	AddSignal
ää %
.
ää% &
	Operation
ää& /
!=
ää0 2
null
ää3 7
)
ää7 8
{
ãã 
package
åå 
.
åå 
	AddSignal
åå %
.
åå% &
	Operation
åå& /
.
åå/ 0 
OnOperationSuccess
åå0 B
-=
ååC E#
OnAddOperationSuccess
ååF [
;
åå[ \
package
çç 
.
çç 
	AddSignal
çç %
.
çç% &
	Operation
çç& /
.
çç/ 0
OnOperationError
çç0 @
-=
ççA C!
OnAddOperationError
ççD W
;
ççW X
package
éé 
.
éé 
	AddSignal
éé %
.
éé% &
ResetEvents
éé& 1
(
éé1 2
)
éé2 3
;
éé3 4
package
èè 
.
èè 
	AddSignal
èè %
.
èè% &
	Operation
èè& /
=
èè0 1
null
èè2 6
;
èè6 7
}
êê 
DetailError
íí 
.
íí 

ClearError
íí &
(
íí& '
)
íí' (
;
íí( )
EditorApplication
ìì !
.
ìì! "
update
ìì" (
+=
ìì) +
CloseAndUpdate
ìì, :
;
ìì: ;
return
ïï 
;
ïï 
}
ññ 
DetailError
òò 
.
òò 

ClearError
òò "
(
òò" #
)
òò# $
;
òò$ %
package
ôô 
.
ôô 
Update
ôô 
(
ôô 
)
ôô 
;
ôô 
RefreshAddButton
öö 
(
öö 
)
öö 
;
öö !
RefreshRemoveButton
õõ 
(
õõ  
)
õõ  !
;
õõ! "
}
úú 	
private
ûû 
void
ûû 
CloseAndUpdate
ûû #
(
ûû# $
)
ûû$ %
{
üü 	
EditorApplication
†† 
.
†† 
update
†† $
-=
††% '
CloseAndUpdate
††( 6
;
††6 7"
AssemblyReloadEvents
££  
.
££  !"
beforeAssemblyReload
££! 5
+=
££6 8"
PackageManagerWindow
££9 M
.
££M N&
ShowPackageManagerWindow
££N f
;
££f g
package
•• 
.
•• 
Update
•• 
(
•• 
)
•• 
;
•• 
var
ßß 
windows
ßß 
=
ßß 
	Resources
ßß #
.
ßß# $"
FindObjectsOfTypeAll
ßß$ 8
<
ßß8 9"
PackageManagerWindow
ßß9 M
>
ßßM N
(
ßßN O
)
ßßO P
;
ßßP Q
if
®® 
(
®® 
windows
®® 
.
®® 
Length
®® 
>
®®  
$num
®®! "
)
®®" #
{
©© 
windows
™™ 
[
™™ 
$num
™™ 
]
™™ 
.
™™ 
Close
™™  
(
™™  !
)
™™! "
;
™™" #
}
´´ 
}
¨¨ 	
private
ÆÆ 
void
ÆÆ 
RemoveClick
ÆÆ  
(
ÆÆ  !
)
ÆÆ! "
{
ØØ 	
DetailError
∞∞ 
.
∞∞ 

ClearError
∞∞ "
(
∞∞" #
)
∞∞# $
;
∞∞$ %
package
±± 
.
±± 
Remove
±± 
(
±± 
)
±± 
;
±± !
RefreshRemoveButton
≤≤ 
(
≤≤  
)
≤≤  !
;
≤≤! "
RefreshAddButton
≥≥ 
(
≥≥ 
)
≥≥ 
;
≥≥ 
}
¥¥ 	
private
∂∂ 
void
∂∂ 
ViewDocClick
∂∂ !
(
∂∂! "
)
∂∂" #
{
∑∑ 	
var
∏∏ 
packageInfo
∏∏ 
=
∏∏ 
Display
∏∏ %
(
∏∏% &
package
∏∏& -
)
∏∏- .
;
∏∏. /
var
ππ 
url
ππ 
=
ππ 
string
ππ 
.
ππ 
Format
ππ #
(
ππ# $
$str
ππ$ U
,
ππU V
packageInfo
ππW b
.
ππb c
ShortVersionId
ππc q
)
ππq r
;
ππr s
Application
∫∫ 
.
∫∫ 
OpenURL
∫∫ 
(
∫∫  
url
∫∫  #
)
∫∫# $
;
∫∫$ %
}
ªª 	
private
ΩΩ 
void
ΩΩ  
ViewChangelogClick
ΩΩ '
(
ΩΩ' (
)
ΩΩ( )
{
ææ 	
var
øø 
packageInfo
øø 
=
øø 
package
øø %
.
øø% &
Latest
øø& ,
;
øø, -
var
¿¿ 
url
¿¿ 
=
¿¿ 
string
¿¿ 
.
¿¿ 
Format
¿¿ #
(
¿¿# $
$str
¿¿$ c
,
¿¿c d
packageInfo
¿¿e p
.
¿¿p q
ShortVersionId
¿¿q 
)¿¿ Ä
;¿¿Ä Å
Application
¡¡ 
.
¡¡ 
OpenURL
¡¡ 
(
¡¡  
url
¡¡  #
)
¡¡# $
;
¡¡$ %
}
¬¬ 	
private
ƒƒ 
Label
ƒƒ 

DetailDesc
ƒƒ  
{
ƒƒ! "
get
ƒƒ# &
{
ƒƒ' (
return
ƒƒ) /
root
ƒƒ0 4
.
ƒƒ4 5
Q
ƒƒ5 6
<
ƒƒ6 7
Label
ƒƒ7 <
>
ƒƒ< =
(
ƒƒ= >
$str
ƒƒ> J
)
ƒƒJ K
;
ƒƒK L
}
ƒƒM N
}
ƒƒO P
private
≈≈ 
Button
≈≈ 
UpdateButton
≈≈ #
{
≈≈$ %
get
≈≈& )
{
≈≈* +
return
≈≈, 2
root
≈≈3 7
.
≈≈7 8
Q
≈≈8 9
<
≈≈9 :
Button
≈≈: @
>
≈≈@ A
(
≈≈A B
$str
≈≈B J
)
≈≈J K
;
≈≈K L
}
≈≈M N
}
≈≈O P
private
∆∆ 
Button
∆∆ 
RemoveButton
∆∆ #
{
∆∆$ %
get
∆∆& )
{
∆∆* +
return
∆∆, 2
root
∆∆3 7
.
∆∆7 8
Q
∆∆8 9
<
∆∆9 :
Button
∆∆: @
>
∆∆@ A
(
∆∆A B
$str
∆∆B J
)
∆∆J K
;
∆∆K L
}
∆∆M N
}
∆∆O P
private
«« 
Button
«« 
ViewDocButton
«« $
{
««% &
get
««' *
{
««+ ,
return
««- 3
root
««4 8
.
««8 9
Q
««9 :
<
««: ;
Button
««; A
>
««A B
(
««B C
$str
««C V
)
««V W
;
««W X
}
««Y Z
}
««[ \
private
»» 
Button
»» !
ViewChangelogButton
»» *
{
»»+ ,
get
»»- 0
{
»»1 2
return
»»3 9
root
»»: >
.
»»> ?
Q
»»? @
<
»»@ A
Button
»»A G
>
»»G H
(
»»H I
$str
»»I X
)
»»X Y
;
»»Y Z
}
»»[ \
}
»»] ^
private
…… 
VisualElement
…… 
UpdateContainer
…… -
{
……. /
get
……0 3
{
……4 5
return
……6 <
root
……= A
.
……A B
Q
……B C
<
……C D
VisualElement
……D Q
>
……Q R
(
……R S
$str
……S d
)
……d e
;
……e f
}
……g h
}
……i j
private
   
Alert
   
DetailError
   !
{
  " #
get
  $ '
{
  ( )
return
  * 0
root
  1 5
.
  5 6
Q
  6 7
<
  7 8
Alert
  8 =
>
  = >
(
  > ?
$str
  ? L
)
  L M
;
  M N
}
  O P
}
  Q R
private
ÀÀ 

ScrollView
ÀÀ 

DetailView
ÀÀ %
{
ÀÀ& '
get
ÀÀ( +
{
ÀÀ, -
return
ÀÀ. 4
root
ÀÀ5 9
.
ÀÀ9 :
Q
ÀÀ: ;
<
ÀÀ; <

ScrollView
ÀÀ< F
>
ÀÀF G
(
ÀÀG H
$str
ÀÀH T
)
ÀÀT U
;
ÀÀU V
}
ÀÀW X
}
ÀÀY Z
private
ÃÃ 
Label
ÃÃ !
DetailPackageStatus
ÃÃ )
{
ÃÃ* +
get
ÃÃ, /
{
ÃÃ0 1
return
ÃÃ2 8
root
ÃÃ9 =
.
ÃÃ= >
Q
ÃÃ> ?
<
ÃÃ? @
Label
ÃÃ@ E
>
ÃÃE F
(
ÃÃF G
$str
ÃÃG \
)
ÃÃ\ ]
;
ÃÃ] ^
}
ÃÃ_ `
}
ÃÃa b
private
ÕÕ 
Label
ÕÕ #
DetailModuleReference
ÕÕ +
{
ÕÕ, -
get
ÕÕ. 1
{
ÕÕ2 3
return
ÕÕ4 :
root
ÕÕ; ?
.
ÕÕ? @
Q
ÕÕ@ A
<
ÕÕA B
Label
ÕÕB G
>
ÕÕG H
(
ÕÕH I
$str
ÕÕI `
)
ÕÕ` a
;
ÕÕa b
}
ÕÕc d
}
ÕÕe f
private
ŒŒ 
Label
ŒŒ 
DetailVersion
ŒŒ #
{
ŒŒ$ %
get
ŒŒ& )
{
ŒŒ* +
return
ŒŒ, 2
root
ŒŒ3 7
.
ŒŒ7 8
Q
ŒŒ8 9
<
ŒŒ9 :
Label
ŒŒ: ?
>
ŒŒ? @
(
ŒŒ@ A
$str
ŒŒA P
)
ŒŒP Q
;
ŒŒQ R
}
ŒŒS T
}
ŒŒU V
private
œœ 
Label
œœ 
DetailAuthor
œœ "
{
œœ# $
get
œœ% (
{
œœ) *
return
œœ+ 1
root
œœ2 6
.
œœ6 7
Q
œœ7 8
<
œœ8 9
Label
œœ9 >
>
œœ> ?
(
œœ? @
$str
œœ@ N
)
œœN O
;
œœO P
}
œœQ R
}
œœS T
internal
–– 
Label
–– 
VerifyLabel
–– "
{
––# $
get
––% (
{
––) *
return
––+ 1
root
––2 6
.
––6 7
Q
––7 8
<
––8 9
Label
––9 >
>
––> ?
(
––? @
$str
––@ K
)
––K L
;
––L M
}
––N O
}
––P Q
internal
““ 
VisualElement
““ 
GetTag
““ %
(
““% &

PackageTag
““& 0
tag
““1 4
)
““4 5
{
”” 	
return
‘‘ 
root
‘‘ 
.
‘‘ 
Q
‘‘ 
<
‘‘ 
VisualElement
‘‘ '
>
‘‘' (
(
‘‘( )
$str
‘‘) /
+
‘‘0 1
tag
‘‘2 5
.
‘‘5 6
ToString
‘‘6 >
(
‘‘> ?
)
‘‘? @
)
‘‘@ A
;
‘‘A B
}
’’ 	
}
÷÷ 
}◊◊ ÄC
ãC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\UI\PackageGroup.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
class 
PackageGroupFactory &
:' (
UxmlFactory) 4
<4 5
PackageGroup5 A
>A B
{ 
	protected		 
override		 
PackageGroup		 '
DoCreate		( 0
(		0 1
IUxmlAttributes		1 @
bag		A D
,		D E
CreationContext		F U
cc		V X
)		X Y
{

 	
return 
new 
PackageGroup #
(# $
bag$ '
.' (
GetPropertyString( 9
(9 :
$str: @
)@ A
)A B
;B C
} 	
} 
internal 
class 
PackageGroup 
:  !
VisualElement" /
{ 
private 
readonly 
VisualElement &
root' +
;+ ,
private 
bool 
	collapsed 
; 
private 
readonly 
VisualElement &
listElement' 2
;2 3
internal 
readonly 
PackageGroupOrigins -
Origin. 4
;4 5
public 
PackageGroup 
previousGroup )
;) *
public 
PackageGroup 
	nextGroup %
;% &
public 
PackageItem 
firstPackage '
;' (
public 
PackageItem 
lastPackage &
;& '
public 
PackageGroup 
( 
string "
	groupName# ,
), -
{ 	
name 
= 
	groupName 
; 
root   
=   
	Resources   
.   
Load   !
<  ! "
VisualTreeAsset  " 1
>  1 2
(  2 3
$str  3 K
)  K L
.  L M
	CloneTree  M V
(  V W
null  W [
)  [ \
;  \ ]
Add!! 
(!! 
root!! 
)!! 
;!! 
listElement"" 
="" 
List"" 
;"" 
List'' 
.'' 
style'' 
.'' 

marginLeft'' !
=''" #
$num''$ %
;''% &
Header(( 
.(( 
style(( 
.(( 
height(( 
=((  !
$num((" #
;((# $
if++ 
(++ 
string++ 
.++ 
IsNullOrEmpty++ $
(++$ %
	groupName++% .
)++. /
||++0 2
	groupName++3 <
!=++= ?
PackageGroupOrigins++@ S
.++S T
BuiltInPackages++T c
.++c d
ToString++d l
(++l m
)++m n
)++n o
{,, 
HeaderTitle-- 
.-- 
text--  
=--! "
$str--# -
;--- .
Origin.. 
=.. 
PackageGroupOrigins.. ,
..., -
Packages..- 5
;..5 6
SetCollapsed// 
(// 
false// "
)//" #
;//# $
}00 
else11 
{22 
HeaderTitle33 
.33 
text33  
=33! "
$str33# 6
;336 7
Origin44 
=44 
PackageGroupOrigins44 ,
.44, -
BuiltInPackages44- <
;44< =
SetCollapsed55 
(55 
true55 !
)55! "
;55" #
}66 
}77 	
public99 
void99 
SetCollapsed99  
(99  !
bool99! %
value99& +
)99+ ,
{:: 	
Caret;; 
.;; 
text;; 
=;; 
value;; 
?;;  
$str;;! )
:;;* +
$str;;, 4
;;;4 5
if== 
(== 
value== 
==== 
	collapsed== "
)==" #
return>> 
;>> 
if@@ 
(@@ 
value@@ 
)@@ 
ListAA 
.AA 
RemoveFromHierarchyAA (
(AA( )
)AA) *
;AA* +
elseBB 
ListContainerCC 
.CC 
AddCC !
(CC! "
listElementCC" -
)CC- .
;CC. /
	collapsedEE 
=EE 
valueEE 
;EE 
}FF 	
privateHH 
voidHH 
ToggleCollapseHH #
(HH# $
)HH$ %
{II 	
SetCollapsedJJ 
(JJ 
!JJ 
	CollapsedJJ #
)JJ# $
;JJ$ %
}KK 	
internalMM 
PackageItemMM 

AddPackageMM '
(MM' (
PackageMM( /
packageMM0 7
)MM7 8
{NN 	
varOO 
packageItemOO 
=OO 
newOO !
PackageItemOO" -
(OO- .
packageOO. 5
)OO5 6
{OO7 8
packageGroupOO9 E
=OOF G
thisOOH L
}OOM N
;OON O
varPP 
lastItemPP 
=PP 
listElementPP &
.PP& '
ChildrenPP' /
(PP/ 0
)PP0 1
.PP1 2
LastOrDefaultPP2 ?
(PP? @
)PP@ A
asPPB D
PackageItemPPE P
;PPP Q
ifQQ 
(QQ 
lastItemQQ 
!=QQ 
nullQQ  
)QQ  !
{RR 
lastItemSS 
.SS 
nextItemSS !
=SS" #
packageItemSS$ /
;SS/ 0
packageItemTT 
.TT 
previousItemTT (
=TT) *
lastItemTT+ 3
;TT3 4
packageItemUU 
.UU 
nextItemUU $
=UU% &
nullUU' +
;UU+ ,
}VV 
listElementXX 
.XX 
AddXX 
(XX 
packageItemXX '
)XX' (
;XX( )
ifZZ 
(ZZ 
firstPackageZZ 
==ZZ 
nullZZ  $
)ZZ$ %
firstPackageZZ& 2
=ZZ3 4
packageItemZZ5 @
;ZZ@ A
lastPackage[[ 
=[[ 
packageItem[[ %
;[[% &
return]] 
packageItem]] 
;]] 
}^^ 	
private`` 
VisualElement`` 
List`` "
{``# $
get``% (
{``) *
return``+ 1
root``2 6
.``6 7
Q``7 8
<``8 9
VisualElement``9 F
>``F G
(``G H
$str``H X
)``X Y
;``Y Z
}``[ \
}``] ^
privateaa 
VisualElementaa 
ListContaineraa +
{aa, -
getaa. 1
{aa2 3
returnaa4 :
rootaa; ?
.aa? @
Qaa@ A
<aaA B
VisualElementaaB O
>aaO P
(aaP Q
$straaQ f
)aaf g
;aag h
}aai j
}aak l
privatebb 
VisualElementbb 
Headerbb $
{bb% &
getbb' *
{bb+ ,
returnbb- 3
rootbb4 8
.bb8 9
Qbb9 :
<bb: ;
VisualElementbb; H
>bbH I
(bbI J
$strbbJ [
)bb[ \
;bb\ ]
}bb^ _
}bb` a
privatecc 
Labelcc 
HeaderTitlecc !
{cc" #
getcc$ '
{cc( )
returncc* 0
rootcc1 5
.cc5 6
Qcc6 7
<cc7 8
Labelcc8 =
>cc= >
(cc> ?
$strcc? L
)ccL M
;ccM N
}ccO P
}ccQ R
privatedd 
Labeldd 
Caretdd 
{dd 
getdd !
{dd" #
returndd$ *
rootdd+ /
.dd/ 0
Qdd0 1
<dd1 2
Labeldd2 7
>dd7 8
(dd8 9
$strdd9 F
)ddF G
;ddG H
}ddI J
}ddK L
internalee 
boolee 
	Collapsedee 
{ee  !
getee" %
{ee& '
returnee( .
	collapsedee/ 8
;ee8 9
}ee: ;
setee< ?
{ee@ A
SetCollapsedeeB N
(eeN O
valueeeO T
)eeT U
;eeU V
}eeW X
}eeY Z
}ff 
}gg ı`
äC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\UI\PackageItem.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
class 
PackageItemFactory %
:& '
UxmlFactory( 3
<3 4
PackageItem4 ?
>? @
{ 
	protected		 
override		 
PackageItem		 &
DoCreate		' /
(		/ 0
IUxmlAttributes		0 ?
bag		@ C
,		C D
CreationContext		E T
cc		U W
)		W X
{

 	
return 
new 
PackageItem "
(" #
)# $
;$ %
} 	
} 
internal 
class 
PackageItem 
:  
VisualElement! .
{ 
public 
static 
string 
SelectedClassName .
=/ 0
$str1 ;
;; <
public 
event 
Action 
< 
PackageItem '
>' (

OnSelected) 3
=4 5
delegate6 >
{? @
}A B
;B C
private 
const 
string 
loadingSpinnerId -
=. /
$str0 I
;I J
private 
readonly 
VisualElement &
root' +
;+ ,
private 
string 
currentStateClass (
;( )
public 
Package 
package 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
public 
PackageItem 
previousItem '
;' (
public 
PackageItem 
nextItem #
;# $
public 
PackageGroup 
packageGroup (
;( )
public   
PackageItem   
(   
Package   "
package  # *
=  + ,
null  - 1
)  1 2
{!! 	
root"" 
="" 
	Resources"" 
."" 
Load"" !
<""! "
VisualTreeAsset""" 1
>""1 2
(""2 3
$str""3 J
)""J K
.""K L
	CloneTree""L U
(""U V
null""V Z
)""Z [
;""[ \
Add## 
(## 
root## 
)## 
;## 
root%% 
.%% 
Q%% 
<%% 
VisualElement%%  
>%%  !
(%%! "
loadingSpinnerId%%" 2
)%%2 3
.%%3 4
clippingOptions%%4 C
=%%D E
ClippingOptions%%F U
.%%U V

NoClipping%%V `
;%%` a
root'' 
.'' 
AddManipulator'' 
(''  
new''  #
	Clickable''$ -
(''- .
Select''. 4
)''4 5
)''5 6
;''6 7
if(( 
((( 
package(( 
!=(( 
null(( 
)((  
SetItem)) 
()) 
package)) 
)))  
;))  !
}** 	
public-- 
PackageInfo-- 
Display-- "
(--" #
Package--# *
package--+ 2
)--2 3
{.. 	
return// 
PackageCollection// $
.//$ %
Instance//% -
.//- .
Filter//. 4
==//5 7
PackageFilter//8 E
.//E F
All//F I
||//J L
package//M T
.//T U
Current//U \
==//] _
null//` d
?//e f
package//g n
.//n o
Latest//o u
://v w
package//x 
.	// Ä
Current
//Ä á
;
//á à
}00 	
private22 
void22 
Select22 
(22 
)22 
{33 	

OnSelected44 
(44 
this44 
)44 
;44 
}55 	
public77 
void77 
SetSelected77 
(77  
bool77  $
value77% *
)77* +
{88 	
if99 
(99 
value99 
)99 
PackageContainer::  
.::  !
AddToClassList::! /
(::/ 0
SelectedClassName::0 A
)::A B
;::B C
else;; 
PackageContainer<<  
.<<  !
RemoveFromClassList<<! 4
(<<4 5
SelectedClassName<<5 F
)<<F G
;<<G H
Spinner>> 
.>> 
InvertColor>> 
=>>  !
value>>" '
;>>' (
}?? 	
privateAA 
voidAA 
SetItemAA 
(AA 
PackageAA $
packageAA% ,
)AA, -
{BB 	
varCC 
displayPackageCC 
=CC  
DisplayCC! (
(CC( )
packageCC) 0
)CC0 1
;CC1 2
ifDD 
(DD 
displayPackageDD 
==DD !
nullDD" &
)DD& '
returnEE 
;EE 
thisGG 
.GG 
packageGG 
=GG 
packageGG "
;GG" #
OnPackageChangedHH 
(HH 
)HH 
;HH 
thisJJ 
.JJ 
packageJJ 
.JJ 
	AddSignalJJ "
.JJ" #
WhenOperationJJ# 0
(JJ0 1
OnPackageAddJJ1 =
)JJ= >
;JJ> ?
thisKK 
.KK 
packageKK 
.KK 
RemoveSignalKK %
.KK% &
WhenOperationKK& 3
(KK3 4
OnPackageRemoveKK4 C
)KKC D
;KKD E
}LL 	
privateNN 
voidNN 
OnPackageRemoveNN $
(NN$ %
IRemoveOperationNN% 5
	operationNN6 ?
)NN? @
{OO 	
	operationPP 
.PP 
OnOperationErrorPP &
+=PP' )
errorPP* /
=>PP0 2
SpinnerPP3 :
.PP: ;
StopPP; ?
(PP? @
)PP@ A
;PPA B
OnPackageUpdateQQ 
(QQ 
)QQ 
;QQ 
}RR 	
privateTT 
voidTT 
OnPackageAddTT !
(TT! "
IAddOperationTT" /
	operationTT0 9
)TT9 :
{UU 	
	operationVV 
.VV 
OnOperationErrorVV &
+=VV' )
errorVV* /
=>VV0 2
SpinnerVV3 :
.VV: ;
StopVV; ?
(VV? @
)VV@ A
;VVA B
OnPackageUpdateWW 
(WW 
)WW 
;WW 
}XX 	
privateZZ 
voidZZ 
OnPackageChangedZZ %
(ZZ% &
)ZZ& '
{[[ 	
var\\ 
displayPackage\\ 
=\\  
Display\\! (
(\\( )
package\\) 0
)\\0 1
;\\1 2
if]] 
(]] 
displayPackage]] 
==]] !
null]]" &
)]]& '
return^^ 
;^^ 
	NameLabel`` 
.`` 
text`` 
=`` 
displayPackage`` +
.``+ ,
DisplayName``, 7
;``7 8
VersionLabelaa 
.aa 
textaa 
=aa 
displayPackageaa  .
.aa. /
Versionaa/ 6
.aa6 7
ToStringaa7 ?
(aa? @
)aa@ A
;aaA B
varcc 

stateClasscc 
=cc 
GetIconStateIdcc +
(cc+ ,
packagecc, 3
.cc3 4
Currentcc4 ;
??cc< >
packagecc? F
.ccF G
LatestccG M
)ccM N
;ccN O

StateLabelee 
.ee 
RemoveFromClassListee *
(ee* +
currentStateClassee+ <
)ee< =
;ee= >

StateLabelff 
.ff 
AddToClassListff %
(ff% &

stateClassff& 0
)ff0 1
;ff1 2
ifhh 
(hh 
packagehh 
.hh 
Currenthh 
==hh  "
nullhh# '
&&hh( *
PackageCollectionhh+ <
.hh< =
Instancehh= E
.hhE F
FilterhhF L
==hhM O
PackageFilterhhP ]
.hh] ^
Allhh^ a
)hha b
PackageContainerii  
.ii  !
AddToClassListii! /
(ii/ 0
$strii0 ?
)ii? @
;ii@ A
elsejj 
PackageContainerkk  
.kk  !
RemoveFromClassListkk! 4
(kk4 5
$strkk5 D
)kkD E
;kkE F
UIUtilsmm 
.mm 
SetElementDisplaymm %
(mm% &
VersionLabelmm& 2
,mm2 3
!mm4 5
PackageInfomm5 @
.mm@ A
IsModulemmA I
(mmI J
packagemmJ Q
.mmQ R
NamemmR V
)mmV W
)mmW X
;mmX Y
currentStateClassoo 
=oo 

stateClassoo  *
;oo* +
ifpp 
(pp 
displayPackagepp 
.pp 
Statepp $
!=pp% '
PackageStatepp( 4
.pp4 5

InProgresspp5 ?
&&pp@ B
SpinnerppC J
.ppJ K
StartedppK R
)ppR S
Spinnerqq 
.qq 
Stopqq 
(qq 
)qq 
;qq 
}rr 	
privatett 
voidtt 
OnPackageUpdatett $
(tt$ %
)tt% &
{uu 	
Spinnervv 
.vv 
Startvv 
(vv 
)vv 
;vv 
}ww 	
privateyy 
Labelyy 
	NameLabelyy 
{yy  !
getyy" %
{yy& '
returnyy( .
rootyy/ 3
.yy3 4
Qyy4 5
<yy5 6
Labelyy6 ;
>yy; <
(yy< =
$stryy= J
)yyJ K
;yyK L
}yyM N
}yyO P
privatezz 
Labelzz 

StateLabelzz  
{zz! "
getzz# &
{zz' (
returnzz) /
rootzz0 4
.zz4 5
Qzz5 6
<zz6 7
Labelzz7 <
>zz< =
(zz= >
$strzz> L
)zzL M
;zzM N
}zzO P
}zzQ R
private{{ 
Label{{ 
VersionLabel{{ "
{{{# $
get{{% (
{{{) *
return{{+ 1
root{{2 6
.{{6 7
Q{{7 8
<{{8 9
Label{{9 >
>{{> ?
({{? @
$str{{@ P
){{P Q
;{{Q R
}{{S T
}{{U V
private|| 
VisualElement|| 
PackageContainer|| .
{||/ 0
get||1 4
{||5 6
return||7 =
root||> B
.||B C
Q||C D
<||D E
VisualElement||E R
>||R S
(||S T
$str||T f
)||f g
;||g h
}||i j
}||k l
private}} 
LoadingSpinner}} 
Spinner}} &
{}}' (
get}}) ,
{}}- .
return}}/ 5
root}}6 :
.}}: ;
Q}}; <
<}}< =
LoadingSpinner}}= K
>}}K L
(}}L M
$str}}M ]
)}}] ^
;}}^ _
}}}` a
}}}b c
public 
static 
string 
GetIconStateId +
(+ ,
PackageInfo, 7
packageInfo8 C
)C D
{
ÄÄ 	
if
ÅÅ 
(
ÅÅ 
packageInfo
ÅÅ 
==
ÅÅ 
null
ÅÅ #
)
ÅÅ# $
return
ÇÇ 
$str
ÇÇ 
;
ÇÇ 
return
ÑÑ 
GetIconStateId
ÑÑ !
(
ÑÑ! "
packageInfo
ÑÑ" -
.
ÑÑ- .
State
ÑÑ. 3
)
ÑÑ3 4
;
ÑÑ4 5
}
ÖÖ 	
public
áá 
static
áá 
string
áá 
GetIconStateId
áá +
(
áá+ ,
PackageState
áá, 8
state
áá9 >
)
áá> ?
{
àà 	
return
ââ 
state
ââ 
.
ââ 
ToString
ââ !
(
ââ! "
)
ââ" #
.
ââ# $
ToLower
ââ$ +
(
ââ+ ,
)
ââ, -
;
ââ- .
}
ää 	
}
ãã 
}åå êÎ
äC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\UI\PackageList.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal		 
class		 
PackageListFactory		 %
:		& '
UxmlFactory		( 3
<		3 4
PackageList		4 ?
>		? @
{

 
	protected 
override 
PackageList &
DoCreate' /
(/ 0
IUxmlAttributes0 ?
bag@ C
,C D
CreationContextE T
ccU W
)W X
{ 	
return 
new 
PackageList "
(" #
)# $
;$ %
} 	
} 
internal 
class 
PackageList 
:  
VisualElement! .
{ 
public 
event 
Action 
< 
Package #
># $

OnSelected% /
=0 1
delegate2 :
{; <
}= >
;> ?
public 
event 
Action 
OnLoaded $
=% &
delegate' /
{0 1
}2 3
;3 4
private 
readonly 
VisualElement &
root' +
;+ ,
private 
const 
string 
emptyId $
=% &
$str' 2
;2 3
private 
const 
string 
	loadingId &
=' (
$str) ?
;? @
private 
const 
string 
loadingSpinnerId -
=. /
$str0 I
;I J
private 
PackageItem 
selectedItem (
;( )
private 
List 
< 
PackageGroup !
>! "
Groups# )
;) *
public 
PackageList 
( 
) 
{ 	
Groups   
=   
new   
List   
<   
PackageGroup   *
>  * +
(  + ,
)  , -
;  - .
root"" 
="" 
	Resources"" 
."" 
Load"" !
<""! "
VisualTreeAsset""" 1
>""1 2
(""2 3
$str""3 J
)""J K
.""K L
	CloneTree""L U
(""U V
null""V Z
)""Z [
;""[ \
Add## 
(## 
root## 
)## 
;## 
root$$ 
.$$ 
StretchToParentSize$$ $
($$$ %
)$$% &
;$$& '
root&& 
.&& 
Q&& 
<&& 
VisualElement&&  
>&&  !
(&&! "
emptyId&&" )
)&&) *
.&&* +
visible&&+ 2
=&&3 4
false&&5 :
;&&: ;
root'' 
.'' 
Q'' 
<'' 
VisualElement''  
>''  !
(''! "
	loadingId''" +
)''+ ,
.'', -
visible''- 4
=''5 6
true''7 ;
;''; <
root(( 
.(( 
Q(( 
<(( 
VisualElement((  
>((  !
(((! "
	loadingId((" +
)((+ ,
.((, -
StretchToParentSize((- @
(((@ A
)((A B
;((B C
root)) 
.)) 
Q)) 
<)) 
VisualElement))  
>))  !
())! "
loadingSpinnerId))" 2
)))2 3
.))3 4
clippingOptions))4 C
=))D E
ClippingOptions))F U
.))U V

NoClipping))V `
;))` a
LoadingSpinner** 
.** 
Start**  
(**  !
)**! "
;**" #
PackageCollection,, 
.,, 
Instance,, &
.,,& '
OnPackagesChanged,,' 8
+=,,9 ;
SetPackages,,< G
;,,G H
PackageCollection-- 
.-- 
Instance-- &
.--& '
OnFilterChanged--' 6
+=--7 9
OnFilterChanged--: I
;--I J
RegisterCallback// 
<// 
AttachToPanelEvent// /
>/// 0
(//0 1
OnEnterPanel//1 =
)//= >
;//> ?
RegisterCallback00 
<00  
DetachFromPanelEvent00 1
>001 2
(002 3
OnLeavePanel003 ?
)00? @
;00@ A
Reload22 
(22 
)22 
;22 
}33 	
private55 
void55 
OnEnterPanel55 !
(55! "
AttachToPanelEvent55" 4
e555 6
)556 7
{66 	
panel77 
.77 

visualTree77 
.77 
RegisterCallback77 -
<77- .
KeyDownEvent77. :
>77: ;
(77; <
OnKeyDownShortcut77< M
)77M N
;77N O
}88 	
private:: 
void:: 
OnLeavePanel:: !
(::! " 
DetachFromPanelEvent::" 6
e::7 8
)::8 9
{;; 	
panel<< 
.<< 

visualTree<< 
.<< 
UnregisterCallback<< /
<<</ 0
KeyDownEvent<<0 <
><<< =
(<<= >
OnKeyDownShortcut<<> O
)<<O P
;<<P Q
}== 	
private?? 
void?? 
ScrollIfNeeded?? #
(??# $
)??$ %
{@@ 	
ifAA 
(AA 
selectedItemAA 
==AA 
nullAA  $
)AA$ %
returnBB 
;BB 
varDD 
minYDD 
=DD 
ListDD 
.DD 

worldBoundDD &
.DD& '
yMinDD' +
;DD+ ,
varEE 
maxYEE 
=EE 
ListEE 
.EE 

worldBoundEE &
.EE& '
yMaxEE' +
;EE+ ,
varFF 
itemMinYFF 
=FF 
selectedItemFF '
.FF' (

worldBoundFF( 2
.FF2 3
yMinFF3 7
;FF7 8
varGG 
itemMaxYGG 
=GG 
selectedItemGG '
.GG' (

worldBoundGG( 2
.GG2 3
yMaxGG3 7
;GG7 8
varHH 
scrollHH 
=HH 
ListHH 
.HH 
scrollOffsetHH *
;HH* +
ifJJ 
(JJ 
itemMinYJJ 
<JJ 
minYJJ 
)JJ  
{KK 
scrollLL 
.LL 
yLL 
-=LL 
minYLL  
-LL! "
itemMinYLL# +
;LL+ ,
ListMM 
.MM 
scrollOffsetMM !
=MM" #
scrollMM$ *
;MM* +
}NN 
elseOO 
ifOO 
(OO 
itemMaxYOO 
>OO 
maxYOO  $
)OO$ %
{PP 
scrollQQ 
.QQ 
yQQ 
+=QQ 
itemMaxYQQ $
-QQ% &
maxYQQ' +
;QQ+ ,
ListRR 
.RR 
scrollOffsetRR !
=RR" #
scrollRR$ *
;RR* +
}SS 
}TT 	
privateVV 
voidVV 
OnKeyDownShortcutVV &
(VV& '
KeyDownEventVV' 3
evtVV4 7
)VV7 8
{WW 	
ifXX 
(XX 
selectedItemXX 
==XX 
nullXX  $
)XX$ %
returnYY 
;YY 
if[[ 
([[ 
evt[[ 
.[[ 
keyCode[[ 
==[[ 
KeyCode[[ &
.[[& '
UpArrow[[' .
)[[. /
{\\ 
if]] 
(]] 
selectedItem]]  
.]]  !
previousItem]]! -
!=]]. 0
null]]1 5
)]]5 6
{^^ 
Select__ 
(__ 
selectedItem__ '
.__' (
previousItem__( 4
)__4 5
;__5 6
ScrollIfNeeded`` "
(``" #
)``# $
;``$ %
}aa 
elsebb 
ifbb 
(bb 
selectedItembb %
.bb% &
packageGroupbb& 2
!=bb3 5
nullbb6 :
&&bb; =
selectedItembb> J
.bbJ K
packageGroupbbK W
.bbW X
previousGroupbbX e
!=bbf h
nullbbi m
)bbm n
{cc 
selectedItemdd  
.dd  !
packageGroupdd! -
.dd- .
previousGroupdd. ;
.dd; <
SetCollapseddd< H
(ddH I
falseddI N
)ddN O
;ddO P
Selectee 
(ee 
selectedItemee '
.ee' (
packageGroupee( 4
.ee4 5
previousGroupee5 B
.eeB C
lastPackageeeC N
)eeN O
;eeO P
ScrollIfNeededff "
(ff" #
)ff# $
;ff$ %
}gg 
evthh 
.hh 
StopPropagationhh #
(hh# $
)hh$ %
;hh% &
returnii 
;ii 
}jj 
ifll 
(ll 
evtll 
.ll 
keyCodell 
==ll 
KeyCodell &
.ll& '
	DownArrowll' 0
)ll0 1
{mm 
ifnn 
(nn 
selectedItemnn  
.nn  !
nextItemnn! )
!=nn* ,
nullnn- 1
)nn1 2
{oo 
Selectpp 
(pp 
selectedItempp '
.pp' (
nextItempp( 0
)pp0 1
;pp1 2
ScrollIfNeededqq "
(qq" #
)qq# $
;qq$ %
}rr 
elsess 
ifss 
(ss 
selectedItemss %
.ss% &
packageGroupss& 2
!=ss3 5
nullss6 :
&&ss; =
selectedItemss> J
.ssJ K
packageGroupssK W
.ssW X
	nextGroupssX a
!=ssb d
nullsse i
)ssi j
{tt 
selectedItemuu  
.uu  !
packageGroupuu! -
.uu- .
	nextGroupuu. 7
.uu7 8
SetCollapseduu8 D
(uuD E
falseuuE J
)uuJ K
;uuK L
Selectvv 
(vv 
selectedItemvv '
.vv' (
packageGroupvv( 4
.vv4 5
	nextGroupvv5 >
.vv> ?
firstPackagevv? K
)vvK L
;vvL M
ScrollIfNeededww "
(ww" #
)ww# $
;ww$ %
}xx 
evtyy 
.yy 
StopPropagationyy #
(yy# $
)yy$ %
;yy% &
returnzz 
;zz 
}{{ 
if
òò 
(
òò 
evt
òò 
.
òò 
keyCode
òò 
==
òò 
KeyCode
òò &
.
òò& '
PageUp
òò' -
)
òò- .
{
ôô 
if
öö 
(
öö 
selectedItem
öö  
.
öö  !
packageGroup
öö! -
!=
öö. 0
null
öö1 5
)
öö5 6
{
õõ 
if
úú 
(
úú 
selectedItem
úú $
==
úú% '
selectedItem
úú( 4
.
úú4 5
packageGroup
úú5 A
.
úúA B
lastPackage
úúB M
&&
úúN P
selectedItem
úúQ ]
!=
úú^ `
selectedItem
úúa m
.
úúm n
packageGroup
úún z
.
úúz {
firstPackageúú{ á
)úúá à
{
ùù 
Select
ûû 
(
ûû 
selectedItem
ûû +
.
ûû+ ,
packageGroup
ûû, 8
.
ûû8 9
firstPackage
ûû9 E
)
ûûE F
;
ûûF G
ScrollIfNeeded
üü &
(
üü& '
)
üü' (
;
üü( )
}
†† 
else
°° 
if
°° 
(
°° 
selectedItem
°° )
==
°°* ,
selectedItem
°°- 9
.
°°9 :
packageGroup
°°: F
.
°°F G
firstPackage
°°G S
&&
°°T V
selectedItem
°°W c
.
°°c d
packageGroup
°°d p
.
°°p q
previousGroup
°°q ~
!=°° Å
null°°Ç Ü
)°°Ü á
{
¢¢ 
if
££ 
(
££ 
selectedItem
££ (
.
££( )
packageGroup
££) 5
.
££5 6
previousGroup
££6 C
.
££C D
	Collapsed
££D M
)
££M N
selectedItem
§§ (
.
§§( )
packageGroup
§§) 5
.
§§5 6
previousGroup
§§6 C
.
§§C D
SetCollapsed
§§D P
(
§§P Q
false
§§Q V
)
§§V W
;
§§W X
Select
¶¶ 
(
¶¶ 
selectedItem
¶¶ +
.
¶¶+ ,
packageGroup
¶¶, 8
.
¶¶8 9
previousGroup
¶¶9 F
.
¶¶F G
lastPackage
¶¶G R
)
¶¶R S
;
¶¶S T
ScrollIfNeeded
ßß &
(
ßß& '
)
ßß' (
;
ßß( )
}
®® 
else
©© 
if
©© 
(
©© 
selectedItem
©© )
!=
©©* ,
selectedItem
©©- 9
.
©©9 :
packageGroup
©©: F
.
©©F G
lastPackage
©©G R
&&
©©S U
selectedItem
©©V b
!=
©©c e
selectedItem
©©f r
.
©©r s
packageGroup
©©s 
.©© Ä
firstPackage©©Ä å
)©©å ç
{
™™ 
Select
´´ 
(
´´ 
selectedItem
´´ +
.
´´+ ,
packageGroup
´´, 8
.
´´8 9
firstPackage
´´9 E
)
´´E F
;
´´F G
ScrollIfNeeded
¨¨ &
(
¨¨& '
)
¨¨' (
;
¨¨( )
}
≠≠ 
}
ÆÆ 
evt
ØØ 
.
ØØ 
StopPropagation
ØØ #
(
ØØ# $
)
ØØ$ %
;
ØØ% &
return
∞∞ 
;
∞∞ 
}
±± 
if
≥≥ 
(
≥≥ 
evt
≥≥ 
.
≥≥ 
keyCode
≥≥ 
==
≥≥ 
KeyCode
≥≥ &
.
≥≥& '
PageDown
≥≥' /
)
≥≥/ 0
{
¥¥ 
if
µµ 
(
µµ 
selectedItem
µµ  
.
µµ  !
packageGroup
µµ! -
!=
µµ. 0
null
µµ1 5
)
µµ5 6
{
∂∂ 
if
∑∑ 
(
∑∑ 
selectedItem
∑∑ $
==
∑∑% '
selectedItem
∑∑( 4
.
∑∑4 5
packageGroup
∑∑5 A
.
∑∑A B
firstPackage
∑∑B N
&&
∑∑O Q
selectedItem
∑∑R ^
!=
∑∑_ a
selectedItem
∑∑b n
.
∑∑n o
packageGroup
∑∑o {
.
∑∑{ |
lastPackage∑∑| á
)∑∑á à
{
∏∏ 
Select
ππ 
(
ππ 
selectedItem
ππ +
.
ππ+ ,
packageGroup
ππ, 8
.
ππ8 9
lastPackage
ππ9 D
)
ππD E
;
ππE F
ScrollIfNeeded
∫∫ &
(
∫∫& '
)
∫∫' (
;
∫∫( )
}
ªª 
else
ºº 
if
ºº 
(
ºº 
selectedItem
ºº )
==
ºº* ,
selectedItem
ºº- 9
.
ºº9 :
packageGroup
ºº: F
.
ººF G
lastPackage
ººG R
&&
ººS U
selectedItem
ººV b
.
ººb c
packageGroup
ººc o
.
ººo p
	nextGroup
ººp y
!=
ººz |
nullºº} Å
)ººÅ Ç
{
ΩΩ 
if
ææ 
(
ææ 
selectedItem
ææ (
.
ææ( )
packageGroup
ææ) 5
.
ææ5 6
	nextGroup
ææ6 ?
.
ææ? @
	Collapsed
ææ@ I
)
ææI J
selectedItem
øø (
.
øø( )
packageGroup
øø) 5
.
øø5 6
	nextGroup
øø6 ?
.
øø? @
SetCollapsed
øø@ L
(
øøL M
false
øøM R
)
øøR S
;
øøS T
Select
¡¡ 
(
¡¡ 
selectedItem
¡¡ +
.
¡¡+ ,
packageGroup
¡¡, 8
.
¡¡8 9
	nextGroup
¡¡9 B
.
¡¡B C
firstPackage
¡¡C O
)
¡¡O P
;
¡¡P Q
ScrollIfNeeded
¬¬ &
(
¬¬& '
)
¬¬' (
;
¬¬( )
}
√√ 
else
ƒƒ 
if
ƒƒ 
(
ƒƒ 
selectedItem
ƒƒ )
!=
ƒƒ* ,
selectedItem
ƒƒ- 9
.
ƒƒ9 :
packageGroup
ƒƒ: F
.
ƒƒF G
firstPackage
ƒƒG S
&&
ƒƒT V
selectedItem
ƒƒW c
!=
ƒƒd f
selectedItem
ƒƒg s
.
ƒƒs t
packageGroupƒƒt Ä
.ƒƒÄ Å
lastPackageƒƒÅ å
)ƒƒå ç
{
≈≈ 
Select
∆∆ 
(
∆∆ 
selectedItem
∆∆ +
.
∆∆+ ,
packageGroup
∆∆, 8
.
∆∆8 9
lastPackage
∆∆9 D
)
∆∆D E
;
∆∆E F
ScrollIfNeeded
«« &
(
««& '
)
««' (
;
««( )
}
»» 
}
…… 
evt
   
.
   
StopPropagation
   #
(
  # $
)
  $ %
;
  % &
}
ÀÀ 
}
ÃÃ 	
private
ŒŒ 
void
ŒŒ 
OnFilterChanged
ŒŒ $
(
ŒŒ$ %
PackageFilter
ŒŒ% 2
filter
ŒŒ3 9
)
ŒŒ9 :
{
œœ 	
ClearAll
–– 
(
–– 
)
–– 
;
–– 
if
—— 
(
—— 
!
—— 
LoadingSpinner
—— 
.
——  
Started
——  '
)
——' (
{
““ 
root
”” 
.
”” 
Q
”” 
<
”” 
VisualElement
”” $
>
””$ %
(
””% &
	loadingId
””& /
)
””/ 0
.
””0 1
visible
””1 8
=
””9 :
true
””; ?
;
””? @
LoadingSpinner
‘‘ 
.
‘‘ 
Start
‘‘ $
(
‘‘$ %
)
‘‘% &
;
‘‘& '
}
’’ 
}
÷÷ 	
private
ÿÿ 
static
ÿÿ 
void
ÿÿ 
Reload
ÿÿ "
(
ÿÿ" #
)
ÿÿ# $
{
ŸŸ 	
PackageCollection
€€ 
.
€€ 
Instance
€€ &
.
€€& '
	SetFilter
€€' 0
(
€€0 1
PackageFilter
€€1 >
.
€€> ?
Local
€€? D
,
€€D E
false
€€F K
)
€€K L
;
€€L M
PackageCollection
‹‹ 
.
‹‹ 
Instance
‹‹ &
.
‹‹& '%
UpdatePackageCollection
‹‹' >
(
‹‹> ?
true
‹‹? C
)
‹‹C D
;
‹‹D E
}
›› 	
private
ﬂﬂ 
void
ﬂﬂ 
ClearAll
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ 
{
‡‡ 	
List
·· 
.
·· 
Clear
·· 
(
·· 
)
·· 
;
·· 
Groups
‚‚ 
.
‚‚ 
Clear
‚‚ 
(
‚‚ 
)
‚‚ 
;
‚‚ 
ClearSelection
„„ 
(
„„ 
)
„„ 
;
„„ 
root
ÂÂ 
.
ÂÂ 
Q
ÂÂ 
<
ÂÂ 
VisualElement
ÂÂ  
>
ÂÂ  !
(
ÂÂ! "
emptyId
ÂÂ" )
)
ÂÂ) *
.
ÂÂ* +
visible
ÂÂ+ 2
=
ÂÂ3 4
false
ÂÂ5 :
;
ÂÂ: ;
if
ÊÊ 
(
ÊÊ 
LoadingSpinner
ÊÊ 
.
ÊÊ 
Started
ÊÊ &
)
ÊÊ& '
{
ÁÁ 
root
ËË 
.
ËË 
Q
ËË 
<
ËË 
VisualElement
ËË $
>
ËË$ %
(
ËË% &
	loadingId
ËË& /
)
ËË/ 0
.
ËË0 1
visible
ËË1 8
=
ËË9 :
false
ËË; @
;
ËË@ A
LoadingSpinner
ÈÈ 
.
ÈÈ 
Stop
ÈÈ #
(
ÈÈ# $
)
ÈÈ$ %
;
ÈÈ% &
}
ÍÍ 
}
ÎÎ 	
private
ÌÌ 
void
ÌÌ 
SetPackages
ÌÌ  
(
ÌÌ  !
IEnumerable
ÌÌ! ,
<
ÌÌ, -
Package
ÌÌ- 4
>
ÌÌ4 5
packages
ÌÌ6 >
)
ÌÌ> ?
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ 
PackageCollection
ÔÔ !
.
ÔÔ! "
Instance
ÔÔ" *
.
ÔÔ* +
Filter
ÔÔ+ 1
==
ÔÔ2 4
PackageFilter
ÔÔ5 B
.
ÔÔB C
Local
ÔÔC H
)
ÔÔH I
{
 
packages
ÒÒ 
=
ÒÒ 
packages
ÒÒ #
.
ÒÒ# $
Where
ÒÒ$ )
(
ÒÒ) *
pkg
ÒÒ* -
=>
ÒÒ. 0
pkg
ÒÒ1 4
.
ÒÒ4 5
Current
ÒÒ5 <
!=
ÒÒ= ?
null
ÒÒ@ D
)
ÒÒD E
;
ÒÒE F
}
ÚÚ 
var
ÙÙ 
previousSelection
ÙÙ !
=
ÙÙ" #
selectedItem
ÙÙ$ 0
!=
ÙÙ1 3
null
ÙÙ4 8
?
ÙÙ9 :
selectedItem
ÙÙ; G
.
ÙÙG H
package
ÙÙH O
:
ÙÙP Q
null
ÙÙR V
;
ÙÙV W
OnLoaded
ˆˆ 
(
ˆˆ 
)
ˆˆ 
;
ˆˆ 
ClearAll
˜˜ 
(
˜˜ 
)
˜˜ 
;
˜˜ 
var
˘˘ 
packagesGroup
˘˘ 
=
˘˘ 
new
˘˘  #
PackageGroup
˘˘$ 0
(
˘˘0 1!
PackageGroupOrigins
˘˘1 D
.
˘˘D E
Packages
˘˘E M
.
˘˘M N
ToString
˘˘N V
(
˘˘V W
)
˘˘W X
)
˘˘X Y
;
˘˘Y Z
Groups
˙˙ 
.
˙˙ 
Add
˙˙ 
(
˙˙ 
packagesGroup
˙˙ $
)
˙˙$ %
;
˙˙% &
List
˚˚ 
.
˚˚ 
Add
˚˚ 
(
˚˚ 
packagesGroup
˚˚ "
)
˚˚" #
;
˚˚# $
var
˝˝ 
builtInGroup
˝˝ 
=
˝˝ 
new
˝˝ "
PackageGroup
˝˝# /
(
˝˝/ 0!
PackageGroupOrigins
˝˝0 C
.
˝˝C D
BuiltInPackages
˝˝D S
.
˝˝S T
ToString
˝˝T \
(
˝˝\ ]
)
˝˝] ^
)
˝˝^ _
;
˝˝_ `
Groups
˛˛ 
.
˛˛ 
Add
˛˛ 
(
˛˛ 
builtInGroup
˛˛ #
)
˛˛# $
;
˛˛$ %
List
ˇˇ 
.
ˇˇ 
Add
ˇˇ 
(
ˇˇ 
builtInGroup
ˇˇ !
)
ˇˇ! "
;
ˇˇ" #
packagesGroup
ÅÅ 
.
ÅÅ 
previousGroup
ÅÅ '
=
ÅÅ( )
null
ÅÅ* .
;
ÅÅ. /
packagesGroup
áá 
.
áá 
	nextGroup
áá #
=
áá$ %
null
áá& *
;
áá* +
UIUtils
àà 
.
àà 
SetElementDisplay
àà %
(
àà% &
builtInGroup
àà& 2
,
àà2 3
false
àà4 9
)
àà9 :
;
àà: ;
root
ãã 
.
ãã 
Q
ãã 
<
ãã 
VisualElement
ãã  
>
ãã  !
(
ãã! "
	loadingId
ãã" +
)
ãã+ ,
.
ãã, -
visible
ãã- 4
=
ãã5 6
false
ãã7 <
;
ãã< =
LoadingSpinner
åå 
.
åå 
Stop
åå 
(
åå  
)
åå  !
;
åå! "
foreach
éé 
(
éé 
var
éé 
package
éé  
in
éé! #
packages
éé$ ,
.
éé, -
OrderBy
éé- 4
(
éé4 5
pkg
éé5 8
=>
éé9 ;
pkg
éé< ?
.
éé? @
Versions
éé@ H
.
ééH I
FirstOrDefault
ééI W
(
ééW X
)
ééX Y
==
ééZ \
null
éé] a
?
ééb c
pkg
ééd g
.
éég h
Name
ééh l
:
éém n
pkg
ééo r
.
éér s
Versions
éés {
.
éé{ |
FirstOrDefaultéé| ä
(ééä ã
)ééã å
.ééå ç
DisplayNameééç ò
)ééò ô
)ééô ö
{
èè 
var
êê 
item
êê 
=
êê 

AddPackage
êê %
(
êê% &
package
êê& -
)
êê- .
;
êê. /
if
íí 
(
íí 
previousSelection
íí %
!=
íí& (
null
íí) -
&&
íí. 0
package
íí1 8
.
íí8 9
Name
íí9 =
==
íí> @
previousSelection
ííA R
.
ííR S
Name
ííS W
)
ííW X
Select
ìì 
(
ìì 
item
ìì 
)
ìì  
;
ìì  !
}
îî 
root
ññ 
.
ññ 
Q
ññ 
<
ññ 
VisualElement
ññ  
>
ññ  !
(
ññ! "
emptyId
ññ" )
)
ññ) *
.
ññ* +
visible
ññ+ 2
=
ññ3 4
!
ññ5 6
packages
ññ6 >
.
ññ> ?
Any
ññ? B
(
ññB C
)
ññC D
;
ññD E
}
óó 	
private
ôô 
PackageItem
ôô 

AddPackage
ôô &
(
ôô& '
Package
ôô' .
package
ôô/ 6
)
ôô6 7
{
öö 	
var
õõ 
	groupName
õõ 
=
õõ 
package
õõ #
.
õõ# $
Latest
õõ$ *
.
õõ* +
Group
õõ+ 0
;
õõ0 1
var
úú 
group
úú 
=
úú 
GetOrCreateGroup
úú (
(
úú( )
	groupName
úú) 2
)
úú2 3
;
úú3 4
var
ùù 
packageItem
ùù 
=
ùù 
group
ùù #
.
ùù# $

AddPackage
ùù$ .
(
ùù. /
package
ùù/ 6
)
ùù6 7
;
ùù7 8
if
üü 
(
üü 
selectedItem
üü 
==
üü 
null
üü  $
&&
üü% '
!
üü( )
group
üü) .
.
üü. /
	Collapsed
üü/ 8
)
üü8 9
Select
†† 
(
†† 
packageItem
†† "
)
††" #
;
††# $
packageItem
¢¢ 
.
¢¢ 

OnSelected
¢¢ "
+=
¢¢# %
Select
¢¢& ,
;
¢¢, -
return
§§ 
packageItem
§§ 
;
§§ 
}
•• 	
private
ßß 
PackageGroup
ßß 
GetOrCreateGroup
ßß -
(
ßß- .
string
ßß. 4
	groupName
ßß5 >
)
ßß> ?
{
®® 	
foreach
©© 
(
©© 
var
©© 
g
©© 
in
©© 
Groups
©© $
)
©©$ %
{
™™ 
if
´´ 
(
´´ 
g
´´ 
.
´´ 
name
´´ 
==
´´ 
	groupName
´´ '
)
´´' (
return
¨¨ 
g
¨¨ 
;
¨¨ 
}
≠≠ 
var
ØØ 
group
ØØ 
=
ØØ 
new
ØØ 
PackageGroup
ØØ (
(
ØØ( )
	groupName
ØØ) 2
)
ØØ2 3
;
ØØ3 4
var
∞∞ 
latestGroup
∞∞ 
=
∞∞ 
Groups
∞∞ $
.
∞∞$ %
LastOrDefault
∞∞% 2
(
∞∞2 3
)
∞∞3 4
;
∞∞4 5
Groups
±± 
.
±± 
Add
±± 
(
±± 
group
±± 
)
±± 
;
±± 
List
≤≤ 
.
≤≤ 
Add
≤≤ 
(
≤≤ 
group
≤≤ 
)
≤≤ 
;
≤≤ 
group
¥¥ 
.
¥¥ 
previousGroup
¥¥ 
=
¥¥  !
null
¥¥" &
;
¥¥& '
if
µµ 
(
µµ 
latestGroup
µµ 
!=
µµ 
null
µµ #
)
µµ# $
{
∂∂ 
latestGroup
∑∑ 
.
∑∑ 
	nextGroup
∑∑ %
=
∑∑& '
group
∑∑( -
;
∑∑- .
group
∏∏ 
.
∏∏ 
previousGroup
∏∏ #
=
∏∏$ %
latestGroup
∏∏& 1
;
∏∏1 2
group
ππ 
.
ππ 
	nextGroup
ππ 
=
ππ  !
null
ππ" &
;
ππ& '
}
∫∫ 
return
ªª 
group
ªª 
;
ªª 
}
ºº 	
private
ææ 
void
ææ 
ClearSelection
ææ #
(
ææ# $
)
ææ$ %
{
øø 	
Select
¿¿ 
(
¿¿ 
null
¿¿ 
)
¿¿ 
;
¿¿ 
}
¡¡ 	
private
√√ 
void
√√ 
Select
√√ 
(
√√ 
PackageItem
√√ '
packageItem
√√( 3
)
√√3 4
{
ƒƒ 	
if
≈≈ 
(
≈≈ 
packageItem
≈≈ 
==
≈≈ 
selectedItem
≈≈ +
)
≈≈+ ,
return
∆∆ 
;
∆∆ 
if
»» 
(
»» 
selectedItem
»» 
!=
»» 
null
»»  $
)
»»$ %
selectedItem
…… 
.
…… 
SetSelected
…… (
(
……( )
false
……) .
)
……. /
;
……/ 0
selectedItem
ÀÀ 
=
ÀÀ 
packageItem
ÀÀ &
;
ÀÀ& '
if
ÃÃ 
(
ÃÃ 
selectedItem
ÃÃ 
==
ÃÃ 
null
ÃÃ  $
)
ÃÃ$ %
return
ÕÕ 
;
ÕÕ 
selectedItem
œœ 
.
œœ 
SetSelected
œœ $
(
œœ$ %
true
œœ% )
)
œœ) *
;
œœ* +

OnSelected
–– 
(
–– 
selectedItem
–– #
.
––# $
package
––$ +
)
––+ ,
;
––, -
}
—— 	
private
”” 

ScrollView
”” 
List
”” 
{
””  !
get
””" %
{
””& '
return
””( .
root
””/ 3
.
””3 4
Q
””4 5
<
””5 6

ScrollView
””6 @
>
””@ A
(
””A B
$str
””B N
)
””N O
;
””O P
}
””Q R
}
””S T
private
‘‘ 
LoadingSpinner
‘‘ 
LoadingSpinner
‘‘ -
{
‘‘. /
get
‘‘0 3
{
‘‘4 5
return
‘‘6 <
root
‘‘= A
.
‘‘A B
Q
‘‘B C
<
‘‘C D
LoadingSpinner
‘‘D R
>
‘‘R S
(
‘‘S T
$str
‘‘T d
)
‘‘d e
;
‘‘e f
}
‘‘g h
}
‘‘i j
}
’’ 
}÷÷ º5
ìC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\UI\PackageManagerWindow.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
class  
PackageManagerWindow '
:( )
EditorWindow* 6
{ 
private		 
const		 
double		 
targetVersionNumber		 0
=		1 2
$num		3 9
;		9 :
public 
void 
OnEnable 
( 
) 
{ 	
if 
( 
EditorGUIUtility  
.  !
	isProSkin! *
)* +
this 
. "
GetRootVisualContainer +
(+ ,
), -
.- .
AddStyleSheetPath. ?
(? @
$str@ R
)R S
;S T
else 
this 
. "
GetRootVisualContainer +
(+ ,
), -
.- .
AddStyleSheetPath. ?
(? @
$str@ S
)S T
;T U
var 
windowResource 
=  
	Resources! *
.* +
Load+ /
</ 0
VisualTreeAsset0 ?
>? @
(@ A
$strA a
)a b
;b c
if 
( 
windowResource 
!= !
null" &
)& '
{ 
var 
template 
= 
windowResource -
.- .
	CloneTree. 7
(7 8
null8 <
)< =
;= >
this 
. "
GetRootVisualContainer +
(+ ,
), -
.- .
Add. 1
(1 2
template2 :
): ;
;; <
template 
. 
StretchToParentSize ,
(, -
)- .
;. /
if 
( 
! 
PackageCollection &
.& '
Instance' /
./ 0!
HasFetchedPackageList0 E
(E F
)F G
)G H#
PackageSearchFilterTabs +
.+ ,

SetEnabled, 6
(6 7
false7 <
)< =
;= >
PackageList   
.   

OnSelected   &
+=  ' )
OnPackageSelected  * ;
;  ; <
PackageList!! 
.!! 
OnLoaded!! $
+=!!% '
OnPackagesLoaded!!( 8
;!!8 9
}"" 
}## 	
public%% 
void%% 
	OnDisable%% 
(%% 
)%% 
{&& 	
if(( 
((( 
PackageList(( 
!=(( 
null(( #
)((# $
{)) 
PackageList** 
.** 

OnSelected** &
-=**' )
OnPackageSelected*** ;
;**; <
PackageList++ 
.++ 
OnLoaded++ $
-=++% '
OnPackagesLoaded++( 8
;++8 9
},, 
}-- 	
private// 
void// 
OnPackageSelected// &
(//& '
Package//' .
package/// 6
)//6 7
{00 	
PackageDetails11 
.11 

SetPackage11 %
(11% &
package11& -
,11- .#
PackageSearchFilterTabs11/ F
.11F G
CurrentFilter11G T
)11T U
;11U V
}22 	
private44 
void44 
OnPackagesLoaded44 %
(44% &
)44& '
{55 	#
PackageSearchFilterTabs66 #
.66# $

SetEnabled66$ .
(66. /
true66/ 3
)663 4
;664 5
}77 	
private99 
PackageList99 
PackageList99 '
{:: 	
get;; 
{;; 
return;; 
this;; 
.;; "
GetRootVisualContainer;; 4
(;;4 5
);;5 6
.;;6 7
Q;;7 8
<;;8 9
PackageList;;9 D
>;;D E
(;;E F
$str;;F S
);;S T
;;;T U
};;V W
}<< 	
private>> 
PackageDetails>> 
PackageDetails>> -
{?? 	
get@@ 
{@@ 
return@@ 
this@@ 
.@@ "
GetRootVisualContainer@@ 4
(@@4 5
)@@5 6
.@@6 7
Q@@7 8
<@@8 9
PackageDetails@@9 G
>@@G H
(@@H I
$str@@I W
)@@W X
;@@X Y
}@@Z [
}AA 	
privateCC #
PackageSearchFilterTabsCC '#
PackageSearchFilterTabsCC( ?
{DD 	
getEE 
{EE 
returnEE 
thisEE 
.EE "
GetRootVisualContainerEE 4
(EE4 5
)EE5 6
.EE6 7
QEE7 8
<EE8 9#
PackageSearchFilterTabsEE9 P
>EEP Q
(EEQ R
$strEER ]
)EE] ^
;EE^ _
}EE` a
}FF 	
internalHH 
AlertHH 
ErrorBannerHH "
{HH# $
getHH% (
{HH) *
returnHH+ 1
thisHH2 6
.HH6 7"
GetRootVisualContainerHH7 M
(HHM N
)HHN O
.HHO P
QHHP Q
<HHQ R
AlertHHR W
>HHW X
(HHX Y
$strHHY f
)HHf g
;HHg h
}HHi j
}HHk l
[LL 	
MenuItemLL	 
(LL 
$strLL *
,LL* +
priorityLL, 4
=LL5 6
$numLL7 ;
)LL; <
]LL< =
internalMM 
staticMM 
voidMM $
ShowPackageManagerWindowMM 5
(MM5 6
)MM6 7
{NN 	 
AssemblyReloadEventsQQ  
.QQ  ! 
beforeAssemblyReloadQQ! 5
-=QQ6 8$
ShowPackageManagerWindowQQ9 Q
;QQQ R
varSS 
windowSS 
=SS 
	GetWindowSS "
<SS" # 
PackageManagerWindowSS# 7
>SS7 8
(SS8 9
falseSS9 >
,SS> ?
$strSS@ J
,SSJ K
trueSSL P
)SSP Q
;SSQ R
windowTT 
.TT 
minSizeTT 
=TT 
newTT  
Vector2TT! (
(TT( )
$numTT) ,
,TT, -
$numTT. 1
)TT1 2
;TT2 3
windowUU 
.UU 
maxSizeUU 
=UU 
newUU  
Vector2UU! (
(UU( )
$numUU) -
,UU- .
$numUU/ 3
)UU3 4
;UU4 5
windowVV 
.VV 
ShowVV 
(VV 
)VV 
;VV 
}ZZ 	
}[[ 
}\\ ˙.
ñC:\Users\√Ålvaro\AppData\Local\Unity\cache\packages\packages.unity.com\com.unity.package-manager-ui@1.8.8\Editor\Sources\UI\PackageSearchFilterTabs.cs
	namespace 	
UnityEditor
 
. 
PackageManager $
.$ %
UI% '
{ 
internal 
class *
PackageSearchFilterTabsFactory 1
:2 3
UxmlFactory4 ?
<? @#
PackageSearchFilterTabs@ W
>W X
{ 
	protected 
override #
PackageSearchFilterTabs 2
DoCreate3 ;
(; <
IUxmlAttributes< K
bagL O
,O P
CreationContextQ `
cca c
)c d
{		 	
return

 
new

 #
PackageSearchFilterTabs

 .
(

. /
)

/ 0
;

0 1
} 	
} 
internal 
class #
PackageSearchFilterTabs *
:+ ,
VisualElement- :
{ 
private 
readonly 
VisualElement &
root' +
;+ ,
private 
const 
string 
SelectedClassName .
=/ 0
$str1 ;
;; <
public 
PackageFilter 
CurrentFilter *
{+ ,
get- 0
;0 1
internal2 :
set; >
;> ?
}@ A
public #
PackageSearchFilterTabs &
(& '
)' (
{ 	
root 
= 
	Resources 
. 
Load !
<! "
VisualTreeAsset" 1
>1 2
(2 3
$str3 V
)V W
.W X
	CloneTreeX a
(a b
nullb f
)f g
;g h
Add 
( 
root 
) 
; 
root 
. 
StretchToParentSize $
($ %
)% &
;& '
LocalButton 
. 
AddManipulator &
(& '
new' *
	Clickable+ 4
(4 5
(5 6
)6 7
=>8 :
	SetFilter; D
(D E
PackageFilterE R
.R S
LocalS X
)X Y
)Y Z
)Z [
;[ \
	AllButton 
. 
AddManipulator $
($ %
new% (
	Clickable) 2
(2 3
(3 4
)4 5
=>6 8
	SetFilter9 B
(B C
PackageFilterC P
.P Q
AllQ T
)T U
)U V
)V W
;W X
OnFilterChanged 
( 
) 
; 
PackageCollection 
. 
Instance &
.& '
OnFilterChanged' 6
+=7 9
OnFilterChanged: I
;I J
}   	
private"" 
void"" 
	SetFilter"" 
("" 
PackageFilter"" ,
filter""- 3
)""3 4
{## 	
root$$ 
.$$ 

SetEnabled$$ 
($$ 
false$$ !
)$$! "
;$$" #
if%% 
(%% 
!%% 
PackageCollection%% "
.%%" #
Instance%%# +
.%%+ ,
	SetFilter%%, 5
(%%5 6
filter%%6 <
)%%< =
)%%= >
{&& 
root'' 
.'' 

SetEnabled'' 
(''  
true''  $
)''$ %
;''% &
}(( 
})) 	
private++ 
void++ 
OnFilterChanged++ $
(++$ %
PackageFilter++% 2
filter++3 9
=++: ;
PackageFilter++< I
.++I J
None++J N
)++N O
{,, 	
if-- 
(-- 
filter-- 
==-- 
PackageFilter-- '
.--' (
None--( ,
)--, -
filter.. 
=.. 
PackageCollection.. *
...* +
Instance..+ 3
...3 4
Filter..4 :
;..: ;
CurrentFilter00 
=00 
filter00 "
;00" #
if22 
(22 
filter22 
==22 
PackageFilter22 '
.22' (
All22( +
)22+ ,
{33 
	AllButton44 
.44 
AddToClassList44 (
(44( )
SelectedClassName44) :
)44: ;
;44; <
LocalButton55 
.55 
RemoveFromClassList55 /
(55/ 0
SelectedClassName550 A
)55A B
;55B C
}66 
else77 
if77 
(77 
filter77 
==77 
PackageFilter77 ,
.77, -
Local77- 2
)772 3
{88 
LocalButton99 
.99 
AddToClassList99 *
(99* +
SelectedClassName99+ <
)99< =
;99= >
	AllButton:: 
.:: 
RemoveFromClassList:: -
(::- .
SelectedClassName::. ?
)::? @
;::@ A
};; 
root== 
.== 

SetEnabled== 
(== 
true==  
)==  !
;==! "
}>> 	
private@@ 
Label@@ 
LocalButton@@ !
{@@" #
get@@$ '
{@@( )
return@@* 0
root@@1 5
.@@5 6
Q@@6 7
<@@7 8
Label@@8 =
>@@= >
(@@> ?
$str@@? F
)@@F G
;@@G H
}@@I J
}@@K L
privateAA 
LabelAA 
	AllButtonAA 
{AA  !
getAA" %
{AA& '
returnAA( .
rootAA/ 3
.AA3 4
QAA4 5
<AA5 6
LabelAA6 ;
>AA; <
(AA< =
$strAA= B
)AAB C
;AAC D
}AAE F
}AAG H
}BB 
}CC 