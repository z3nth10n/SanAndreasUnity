// Classes and structures being serialized

// Generated by ProtocolBuffer
// - a pure c# code generation implementation of protocol buffers
// Report bugs to: https://silentorbit.com/protobuf/

// DO NOT EDIT
// This file will be overwritten when CodeGenerator is run.
// To make custom modifications, edit the .proto file and add //:external before the message line
// then write the code and the changes in a separate file.
using System.Collections.Generic;

namespace UnityEngine
{
    // Written elsewhere
    // public struct Vector2 {}

    // Written elsewhere
    // public struct Vector3 {}

    // Written elsewhere
    // public struct Color {}

    // Written elsewhere
    // public struct Quaternion {}

    // Written elsewhere
    // public struct Ray {}
}

namespace ProtoBuf
{
    public partial class ConnectRequestData
    {
        public int ModelId { get; set; }
    }

    public partial class PlayerConnected : INetworkMessage
    {
        public ProtoBuf.Player.PlayerInfo Player { get; set; }
    }

    public partial class PlayerDisconnected : INetworkMessage
    {
        public ProtoBuf.Player.PlayerInfo Player { get; set; }

        public string Reason { get; set; }
    }

    public partial class ServerChat : INetworkMessage
    {
        public string Message { get; set; }
    }
}

namespace ProtoBuf.Player
{
    public partial class PlayerInfo
    {
        public ulong UserId { get; set; }

        public string Username { get; set; }

        public int Modelid { get; set; }
    }

    public partial class PlayerSpawn : INetworkableSpawnMessage
    {
        public ProtoBuf.NetworkableInfo Networkable { get; set; }

        public ProtoBuf.Player.PlayerInfo Player { get; set; }

        public ProtoBuf.Player.PlayerPedestrianState PedestrianState { get; set; }

        public ProtoBuf.Player.PlayerPassengerState PassengerState { get; set; }

        public bool IsLocal { get; set; }
    }

    public partial class PlayerPedestrianState : ISnapshot, INetworkableMessage
    {
        public ProtoBuf.NetworkableInfo Networkable { get; set; }

        public double Timestamp { get; set; }

        [ProtoBuf.Interpolate(Smoothing = 0.5f)]
        public UnityEngine.Vector3 _PositionProp { get { return Position; } set { Position = value; } }

        public UnityEngine.Vector3 Position;

        [ProtoBuf.Interpolate()]
        public UnityEngine.Vector3 _MovementProp { get { return Movement; } set { Movement = value; } }

        public UnityEngine.Vector3 Movement;

        [ProtoBuf.Interpolate(Flags = InterpolationFlags.Angle, Smoothing = 0.5f)]
        public float Yaw { get; set; }

        public bool Running { get; set; }
    }

    public partial class PlayerPassengerState : INetworkableMessage
    {
        public ProtoBuf.NetworkableInfo Networkable { get; set; }

        public ProtoBuf.NetworkableInfo Vechicle { get; set; }

        public int SeatAlignment { get; set; }
    }
}

namespace ProtoBuf.Vehicle
{
    public partial class VehicleInfo
    {
        public int VehicleId { get; set; }

        public List<int> Colors { get; set; }
    }

    public partial class VehicleSpawn : INetworkableSpawnMessage
    {
        public ProtoBuf.NetworkableInfo Networkable { get; set; }

        public ProtoBuf.Vehicle.VehicleInfo Info { get; set; }

        public ProtoBuf.Vehicle.VehicleState State { get; set; }
    }

    public partial class VehicleState : ISnapshot, INetworkableMessage
    {
        public ProtoBuf.NetworkableInfo Networkable { get; set; }

        public double Timestamp { get; set; }

        [ProtoBuf.Interpolate(Smoothing = 0.35f)]
        public UnityEngine.Vector3 _PositionProp { get { return Position; } set { Position = value; } }

        public UnityEngine.Vector3 Position;

        [ProtoBuf.Interpolate(Smoothing = 0.35f)]
        public UnityEngine.Quaternion _RotationProp { get { return Rotation; } set { Rotation = value; } }

        public UnityEngine.Quaternion Rotation;

        public UnityEngine.Vector3 Velocity;

        public UnityEngine.Vector3 AngularVelocity;

        [ProtoBuf.Interpolate(Smoothing = 0.5f)]
        public float Steering { get; set; }

        [ProtoBuf.Interpolate(Smoothing = 0.5f)]
        public float Accelerator { get; set; }

        [ProtoBuf.Interpolate(Smoothing = 0.5f)]
        public float Braking { get; set; }
    }
}

namespace ProtoBuf
{
    public partial class ConnectRequest : INetworkMessage
    {
        public int Protocol { get; set; }

        public ulong UserId { get; set; }

        public string Username { get; set; }

        public string Os { get; set; }

        public byte[] Data { get; set; }
    }

    public partial class NetworkablesRemoved : INetworkMessage
    {
        public List<ProtoBuf.NetworkableInfo> Networkables { get; set; }
    }

    public partial class MessageTableSchema
    {
        public List<ProtoBuf.MessageTableEntry> Entries { get; set; }
    }

    public partial class MessageTableEntry
    {
        public uint Ident { get; set; }

        public string TypeName { get; set; }
    }

    public partial class NetworkableInfo
    {
        public uint Ident { get; set; }
    }

    public partial class Transform
    {
        public UnityEngine.Vector3 Position;

        public UnityEngine.Quaternion Rotation;

        public UnityEngine.Vector3 Scale;
    }

    public partial class NetworkableSave
    {
        public ProtoBuf.MessageTableSchema Schema { get; set; }

        public List<byte[]> Entries { get; set; }
    }

    public partial class ConnectResponse : INetworkMessage
    {
        public ProtoBuf.ConnectResponseFlags Flags { get; set; }

        public string Message { get; set; }

        public string HostName { get; set; }

        public int UpdateRate { get; set; }

        public double ServerTime { get; set; }

        public ProtoBuf.MessageTableSchema MessageTable { get; set; }
    }

    public enum ConnectResponseFlags
    {
        Reject = 0,
        Accept = 1,
    }
}